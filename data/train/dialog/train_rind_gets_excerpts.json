{
  "file": "/gitbox/Word/Prostitute/Product/Goods/Tools/wordsum/build/resources/test/WordSumRindGetsTrainingCNN.txt",
  "version": "0.0.5",
  "gitSha": "30edb575085b45266571fd12f3b14e086963ece2",
  "localDateTime": "2017-09-18T15:07:44.224",
  "copyright": "",
  "writers": [
    "Kalab J. Oster"
  ],
  "editors": [
    "Kalab J. Oster"
  ],
  "publishers": [
    "Word ProstituteÂ®"
  ],
  "fileState": ",,Why?\u0027\u0027 says Rind\n\nRind shouts, ,,MOM! WHY?\u0027\u0027 until mom cuts the flappy hood from Rind\u0027s woollen cloak.\n\n,,Why?\u0027\u0027 says Rind\n\nRind steps back and shouts, ,,WHY MOM MAKE RIND A CLOAK! CUT TO CAPE.\u0027\u0027\n\nRind runs, wipes tears, mumbles, ,,Why? Rind? Rind earn by hand!\u0027\u0027\n\n\u0027\u0027Brom,\u0027\u0027 mutters Rind. \u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027\n\nRind says, ,,Hi, George Drunk.\u0027\u0027\n\n,,Rind earn with own hand?\u0027\u0027 says Rind.\n\nRind shrugs, says, \u0027\u0027Rind don\u0027t want to leave,\u0027\u0027\n\nRind mutters, \u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027\n\nRind steps on mud-grass muck, says, ,,Rind sleep here.\u0027\u0027\n\nRind says, ,,Rind work on road,\u0027\u0027 and holds throbbing shoulder.\n\nRind says, ,,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027\n\n,,KRAK TAK,\u0027\u0027 shouts Rind.\n\nRind says, ,,Rind bond.\u0027\u0027\n\n,,Lord Kolosh,\u0027\u0027 says Rind. \u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027\n\nRind says ,,Work with humans?\u0027\u0027\n\n,,Why steal,\u0027\u0027 says Rind.\n\nRind inhales quivers and exhales calm, says, ,,If Kender tell humies Rind Stole. Humies hate orcs more.\u0027\u0027\n\n,,Kelten?\u0027\u0027 says Rind.\n\nRind walks with Brom, says, ,,No.\u0027\u0027\n\nRind says, ,,Brom stole. Why?\u0027\u0027 as Rind quickly walks after Brom.\n\nRind looks back and says, \u0027\u0027Why steal?\u0027\u0027\n\nRind pants and says a few times, \u0027\u0027...Why...Steal...\u0027\u0027\u0027\n\nRind says, ,,Why Brom steal?\u0027\u0027\n\nRind says, \u0027\u0027Rind sleep outside. Tom\u0027s tent stolen.\u0027\u0027\n\n,,Why Brom steal a bad tent?\u0027\u0027 says Rind.\n\nRind says as Brom nears sleep, ,,Why Brom steal?\u0027\u0027\n\n,,Why Brom steal?\u0027\u0027 says Rind\n\nRind says, ,,My mace?\u0027\u0027\n\n,,Barony?\u0027\u0027 says Rind.\n\nRind whispers, ,,Tie with rope. No kill Joe, Ross. They earn. Let fate and animals trial. No kill sleeping.\u0027\u0027\n\nRind says, ,,Brom murder before?\u0027\u0027\n\nRind holds throbbing bicep and rubs cold shoulder, says, ,,Yes, Brom.\u0027\u0027\n\nRind says, ,,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027\n\nRind says, ,,Brom murder before?\u0027\u0027\n\n\u0027\u0027Rest,\u0027\u0027 says Rind.\n\nRind says, ,,Rind feel new. New...new.\u0027\u0027\n\n,,Feeling of Mom Hug mend cloak. Maybe things,\u0027\u0027 says Rind.\n\nRind says, ,,Bait for thieves.\u0027\u0027\n\nRind says, ,,Sold.\u0027\u0027\n\n,,Dutchy? Scimitars?\u0027\u0027 says Rind\n\nRind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, ,,Rind have pouches, caltrops and scroll case. Waterskins.\u0027\u0027\n\nRind mumbles, ,,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027\n\n,,Scrollcase!\u0027\u0027 says Rind and shakes backpack.\n\nRind looks at the tall stone towers and smiles, ,,WOW!\u0027\u0027 and says, \u0027\u0027Those towers tall.\u0027\u0027\n\nRind drops backpack and puts waterskins inside backpack while saying, ,,Got pouches, cal-trops. Where scroll case?\u0027\u0027\n\nRind says, ,,How much money did we earn?\u0027\u0027 while holding the short bow and arrows following Brom between carts hanging furs and pelts.\n\nRind says, ,,How much money?\u0027\u0027\n\nRind shouts, ,,WE GET FIFTY GOLD!\u0027\u0027\n\nRind says, ,,We sleep here with elves. They like Fey.\u0027\u0027\n\nRind swallows potatoes, licks lips, says and points to chest, ,,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027\n\nRind says, ,,Rind wants to go to Kelten. Mom wants Rind to earn way. Kelten is the way. Brom says, Brom says we go. To trust him and earn hood only in Kelten. We go. In Penalbre, twenty gold spent. No gold earned by hand. All acting, and acting a joke.\u0027\u0027\n\nRind tremors and mutters, ,,Valarie elf find. Find Rind. Rind run. Brom. Mace.\u0027\u0027\n\nRind mumbles, ,,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027\n\nRind says, ,,Yes. Rind know.\u0027\u0027\n\nRind says, ,,Lord Kolosh gives Rind mission!\u0027\u0027\n\nRind stands and shouts, \u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027\n\nRind says with mouth and neck muscles taut to control the says loud, ,,Rind gets a gift from Lord Kolosh!\u0027\u0027\n\nRind says with toothy smile, ,,Rind gets a bottle of wine for all.\u0027\u0027\n\nRind says, \u0027\u0027Rind want one bottle of wine.\u0027\u0027\n\nRind says, \u0027\u0027Talk with Brom.\u0027\u0027\n\nRind pushes on wood door and says, ,,Brom and Rind\u0027s room.\u0027\u0027\n\nRind hangs head and says, ,,Rind half-orc. And name is Rind.\u0027\u0027\n\nRind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, ,,It\u0027s as big as mom\u0027s soddy.\u0027\u0027\n\nRind radiates Fey Mirth says, \u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027\n\nRind says, ,,How big?\u0027\u0027 as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind.\n\nRind says, ,,Are they along road?\u0027\u0027 as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard.\n\n,,How fast can lizardman run?\u0027\u0027 says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack.\n\nRind mumbles, ,,Elf shoot Rind?\u0027\u0027\n\n,,What if lizardmen kill Rind?\u0027\u0027 says Rind as the giant vulture flies away.\n\nRind says, ,,Rind trust Lord Kolosh more than Rind,\u0027\u0027 and walks after Lalious snagging shrubs and branches.\n\n,,No,\u0027\u0027 says Rind. \u0027\u0027Rind. Rind, talk. We talk Kolosh. Talk Lord Oterces and mom.\u0027\u0027\n\nRind says, \u0027\u0027Lalious hold weapons. We eat with people.\u0027\u0027\n\nRind wipes mouth with sleeve and swallows, stumbles to say, ,,Rind going to Kelten. Rind performs play with Brom.\u0027\u0027\n\nRind shouts, ,,I WANT TO RUN.\u0027\u0027\n\nRind slur-shouts, ,,I GIVE YOU COINS,\u0027\u0027\n\nRind smiles, looks-up, says, ,,Rind, I, thanks you. Good day.\u0027\u0027\n\nRind says, ,,PARENTS MEND CLOAKS,\u0027\u0027\n\nRind says, ,,What about the trail by the river?\u0027\u0027\n\n,,Rind. I. I don\u0027t know,\u0027\u0027 says Rind holding arms under cloak and looking at Tommy.\n\nRind says, ,,Only ten. Thought there more. Thought it a clan. Typhius will take us?\u0027\u0027\n\nRind says, ,,We got three-\u0027\u0027\n\nRind whips head about, says, ,,If you fight bear, kill bear, would you eat bear?\u0027\u0027\n\nRind says, ,,Lalious killed friend Brom with arrows.\u0027\u0027\n\nRind says, ,,I am Rind of Crack Mountain Clan.\u0027\u0027\n\n",
  "wordCount": 901,
  "paragraphStates": [
    {
      "paragraph": ",,Why?\u0027\u0027 says Rind",
      "wordCount": 3,
      "order": 1,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Why?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Why?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Why-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-1, Rind-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "says Rind"
          },
          "jazzyState": {
            "text": "says Rind",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind shouts, ,,MOM! WHY?\u0027\u0027 until mom cuts the flappy hood from Rind\u0027s woollen cloak.",
      "wordCount": 14,
      "order": 2,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind shouts, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, shouts-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "shouts"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,MOM!",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "MOM!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "MOM",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOM-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "MOM"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOM-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "MOM"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "MOM"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,MOM!"
          },
          "jazzyState": {
            "text": ",,MOM!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,MOM!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "WHY?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "WHY?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "WHY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, WHY-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "WHY"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(WHY-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "WHY"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "UH": "WHY"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "WHY?\u0027\u0027"
          },
          "jazzyState": {
            "text": "WHY?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "WHY?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "until mom cuts the flappy hood from Rind\u0027s woollen cloak.",
          "wordCount": 10,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "until mom cuts the flappy hood from Rind\u0027s woollen cloak.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "until",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mom",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "cuts",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "flappy",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hood",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "LOCATION"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "woollen",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cloak",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cuts-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mom-2, until-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "until",
                  "ner": "O",
                  "tag": "IN",
                  "word": "until"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:until(cuts-3, mom-2)",
                  "name": "nmod_preposition",
                  "tag": "nmod:until"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cuts-3, hood-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hood"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cuts-3, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(hood-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hood"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hood-6, flappy-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "flappy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flappy"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hood"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(hood-6, cloak-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "11",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hood"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-8, \u0027s-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Rind",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cloak-11, from-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "11",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(cloak-11, Rind-8)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Rind",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "11",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(cloak-11, woollen-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "woollen",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "woollen"
                },
                "gov": {
                  "index": "11",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "VBP": "cloak"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node": {
                  "JJ": "flappy"
                },
                "s_node_0_node_1_node_1_node": {
                  "NNS": "cuts"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_0_node_2_node": {
                  "NN": "hood"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "woollen"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_node": {
                  "IN": "until"
                },
                "s_node_0_node_1_node_0_node": {
                  "NN": "mom"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cloak."
                ]
              }
            },
            "sentence": "until mom cuts the flappy hood from Rind\u0027s woollen cloak."
          },
          "jazzyState": {
            "text": "until mom cuts the flappy hood from Rind\u0027s woollen cloak.",
            "misspelledWords": {
              "flappy": [
                "floppy"
              ],
              "woollen": [
                "woolen"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Why?\u0027\u0027 says Rind",
      "wordCount": 3,
      "order": 3,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Why?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Why?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Why-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-1, Rind-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "says Rind"
          },
          "jazzyState": {
            "text": "says Rind",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind steps back and shouts, ,,WHY MOM MAKE RIND A CLOAK! CUT TO CAPE.\u0027\u0027",
      "wordCount": 14,
      "order": 4,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind steps back and shouts, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind steps back and shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, steps-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "steps"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, shouts-5)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steps-2, back-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(steps-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(steps-2, shouts-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "steps"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_node": {
                  "RB": "back"
                },
                "s_node_2_node_0_node": {
                  "JJ": "shouts"
                },
                "s_node_0_node_1_node": {
                  "NNS": "steps"
                },
                "s_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBN": "Rind"
                },
                "s_node_2_node_2_node": {
                  "JJ": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind steps back and shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind steps back and shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,WHY MOM MAKE RIND A CLOAK!",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "WHY MOM MAKE RIND A CLOAK!",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "WHY",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "MOM",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MAKE",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "RIND",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "CLOAK",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MAKE-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "make",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MAKE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MAKE-3, WHY-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "WHY"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MAKE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MAKE-3, MOM-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "MOM",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "MOM"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MAKE"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(MAKE-3, CLOAK-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "CLOAK"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MAKE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MAKE-3, !-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MAKE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(CLOAK-6, RIND-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RIND"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "CLOAK"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(CLOAK-6, A-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "CLOAK"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NNP": "RIND"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "MAKE"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "WRB": "WHY"
                },
                "s_node_1_node_0_node": {
                  "NNP": "MOM"
                },
                "s_node_1_node_4_node": {
                  "NNP": "CLOAK"
                },
                "s_node_1_node_3_node": {
                  "NNP": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,WHY MOM MAKE RIND A CLOAK!"
          },
          "jazzyState": {
            "text": ",,WHY MOM MAKE RIND A CLOAK!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,WHY MOM MAKE RIND A CLOAK!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "CUT TO CAPE.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "CUT TO CAPE.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "CUT",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "TO",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "CAPE",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, CUT-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "CUT",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "CUT"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(CUT-1, TO-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                },
                "gov": {
                  "index": "1",
                  "lemma": "CUT",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "CUT"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(CUT-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "CUT",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "CUT"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(TO-2, CAPE-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "CAPE",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "CAPE"
                },
                "gov": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "CAPE"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "TO"
                },
                "s_node_0_node_0_node": {
                  "NNP": "CUT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "CAPE.\u0027\u0027"
                ]
              }
            },
            "sentence": "CUT TO CAPE.\u0027\u0027"
          },
          "jazzyState": {
            "text": "CUT TO CAPE.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "CUT TO CAPE.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind runs, wipes tears, mumbles, ,,Why? Rind? Rind earn by hand!\u0027\u0027",
      "wordCount": 11,
      "order": 5,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind runs, wipes tears, mumbles, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind runs, wipes tears, mumbles, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "runs",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "wipes",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "tears",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipes-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(runs-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "runs"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(wipes-4, runs-2)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "runs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipes-4, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipes-4, tears-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tears"
                },
                "gov": {
                  "index": "4",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tears-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tears"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(tears-5, mumbles-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tears"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-7, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mumbles-7, DIALOG_OBJECT_1-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "7",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_2_node_0_node": {
                  "NNS": "mumbles"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "VBZ": "wipes"
                },
                "s_node_0_node_1_node": {
                  "VBZ": "runs"
                },
                "s_node_3_node_0_node": {
                  "NNS": "tears"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_2_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_3_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind runs, wipes tears, mumbles, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind runs, wipes tears, mumbles, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why?",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Why?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Why-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why?"
          },
          "jazzyState": {
            "text": ",,Why?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why?",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind?",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Rind?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind?"
          },
          "jazzyState": {
            "text": "Rind?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind earn by hand!\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind earn by hand!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, earn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earn-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(earn-2, hand-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earn-2, !-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-4, by-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "earn"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind earn by hand!\u0027\u0027"
          },
          "jazzyState": {
            "text": "Rind earn by hand!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Rind earn by hand!\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Brom,\u0027\u0027 mutters Rind. \u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027",
      "wordCount": 11,
      "order": 6,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, mutters Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, mutters Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mutters",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(DIALOG_OBJECT_1-1, mutters-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mutters-3, Rind-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node_0_node": {
                  "NNP": "mutters"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, mutters Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, mutters Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Brom,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Brom,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Brom-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": ","
                },
                "s_node_0_node": {
                  "NNP": "Brom"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Brom,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Brom,\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Brom,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Brom logger...Brom earn by own hand...He not cut.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "logger",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "own",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "He",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "cut",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, logger-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "logger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "logger"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(logger-2, Brom-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "logger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "logger"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(logger-2, ...-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "logger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "logger"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "parataxis(logger-2, earn-5)",
                  "name": "parataxis",
                  "tag": "parataxis"
                },
                "dep": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "logger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "logger"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(logger-2, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "logger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "logger"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earn-5, Brom-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(earn-5, hand-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earn-5, ...-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(earn-5, cut-12)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cut"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-8, by-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hand-8, own-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "own",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "own"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cut-12, He-10)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "he",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "He"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cut"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(cut-12, not-11)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "11",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cut"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VB": "earn"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_3_node_0_node": {
                  "PRP": "He"
                },
                "s_node_2_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_0_node_1_node": {
                  "NN": "logger"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "JJ": "own"
                },
                "s_node_2_node_1_node_3_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_3_node_2_node": {
                  "VB": "cut"
                },
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_2_node_1_node_2_node": {
                  "COLON": "..."
                },
                "s_node_2_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_3_node_1_node": {
                  "RB": "not"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Brom"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "hand"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ELLIPSIS": [
                  "logger...Brom",
                  "hand...He"
                ],
                "ANTI": [
                  "cut.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Brom logger...Brom earn by own hand...He not cut.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Hi, George Drunk.\u0027\u0027",
      "wordCount": 5,
      "order": 7,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Hi, George Drunk.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Hi, George Drunk.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Hi",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "George",
                "net": "PERSON"
              },
              {
                "pos": "NNP",
                "text": "Drunk",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Hi-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hi",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hi"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Hi-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "hi",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hi"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Hi-1, Drunk-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Drunk",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Drunk"
                },
                "gov": {
                  "index": "1",
                  "lemma": "hi",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hi"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Hi-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "hi",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hi"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Drunk-4, George-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "George",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "George"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Drunk",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Drunk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNP": "Drunk"
                },
                "s_node_2_node_0_node": {
                  "NNP": "George"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Hi"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Drunk.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Hi, George Drunk.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Hi, George Drunk.\u0027\u0027",
            "misspelledWords": {
              "Hi": [
                "ha",
                "he",
                "Hz",
                "xi",
                "pi",
                "vi",
                "ii",
                "I",
                "hid",
                "hit",
                "his",
                "hip",
                "him"
              ],
              "George": [
                "gorge"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Hi, George Drunk.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Rind earn with own hand?\u0027\u0027 says Rind.",
      "wordCount": 7,
      "order": 8,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Rind earn with own hand?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind earn with own hand?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "own",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, earn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earn-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(earn-2, hand-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earn-2, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-5, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hand-5, own-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "own",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "own"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "earn"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "own"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Rind earn with own hand?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind earn with own hand?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind earn with own hand?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "says Rind."
          },
          "jazzyState": {
            "text": "says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind shrugs, says, \u0027\u0027Rind don\u0027t want to leave,\u0027\u0027",
      "wordCount": 8,
      "order": 9,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind shrugs, says, DIALOG_OBJECT_1",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind shrugs, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shrugs",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shrugs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shrug",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shrugs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shrugs-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shrug",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shrugs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "parataxis(shrugs-2, says-4)",
                  "name": "parataxis",
                  "tag": "parataxis"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shrug",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shrugs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shrugs-2, DIALOG_OBJECT_1-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shrug",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shrugs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-4, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shrugs"
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind shrugs, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind shrugs, says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rind don\u0027t want to leave,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind don\u0027t want to leave,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "want",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "leave",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-4, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(want-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(want-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(want-4, leave-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "leave"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(leave-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "leave"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "want"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "VB": "leave"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Rind don\u0027t want to leave,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Rind don\u0027t want to leave,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rind don\u0027t want to leave,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind mutters, \u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027",
      "wordCount": 7,
      "order": 10,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind mutters, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind mutters, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mutters",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mutters-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(mutters-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mutters-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mutters-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNP": "mutters"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind mutters, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind mutters, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Tyranians",
                "net": "MISC"
              },
              {
                "pos": "JJ",
                "text": "human",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "Capratainies",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "human",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Valarie",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "elf",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Highforgers",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "gnomes",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Tyranians-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "tyranian",
                  "ner": "MISC",
                  "tag": "NNS",
                  "word": "Tyranians"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Tyranians-1, human-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                },
                "gov": {
                  "index": "1",
                  "lemma": "tyranian",
                  "ner": "MISC",
                  "tag": "NNS",
                  "word": "Tyranians"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Tyranians-1, ...-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "1",
                  "lemma": "tyranian",
                  "ner": "MISC",
                  "tag": "NNS",
                  "word": "Tyranians"
                }
              },
              {
                "reln": {
                  "string": "dep(Tyranians-1, human-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                },
                "gov": {
                  "index": "1",
                  "lemma": "tyranian",
                  "ner": "MISC",
                  "tag": "NNS",
                  "word": "Tyranians"
                }
              },
              {
                "reln": {
                  "string": "dep(human-5, Capratainies-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "capratainy",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Capratainies"
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(human-5, ...-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "string": "dep(human-5, elf-9)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "9",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NN",
                  "word": "elf"
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(human-5, ...-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "string": "dep(human-5, gnomes-12)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "12",
                  "lemma": "gnome",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "gnomes"
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(human-5, ...-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "human"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Valarie-7, \u0027s-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Valarie",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Valarie"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(elf-9, Valarie-7)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Valarie",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Valarie"
                },
                "gov": {
                  "index": "9",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NN",
                  "word": "elf"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(gnomes-12, Highforgers-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "Highforgers",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Highforgers"
                },
                "gov": {
                  "index": "12",
                  "lemma": "gnome",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "gnomes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_3_node": {
                  "COLON": "..."
                },
                "s_node_2_node_0_node": {
                  "NNP": "Capratainies"
                },
                "s_node_4_leaf": {
                  "phrase": "S"
                },
                "s_node_4_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_6_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_6_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_5_node": {
                  "COLON": "..."
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNS": "Tyranians"
                },
                "s_node_4_node_0_node_0_node": {
                  "NNP": "Valarie"
                },
                "s_node_4_node_1_node": {
                  "NN": "elf"
                },
                "s_node_6_leaf": {
                  "phrase": "S"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node": {
                  "JJ": "human"
                },
                "s_node_6_node_1_node": {
                  "JJ": "gnomes"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "JJ": "human"
                },
                "s_node_7_node": {
                  "PERIOD": "..."
                },
                "s_node_4_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_6_node_0_node": {
                  "NNP": "Highforgers"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ELLIPSIS": [
                  "human...Capratainies",
                  "elf...Highforgers"
                ],
                "ANTI": [
                  "human...Valarie\u0027s",
                  "gnomes...\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027",
            "misspelledWords": {
              "Capratainies": [
                "gabardines"
              ],
              "Valarie\u0027s": [
                "flares"
              ],
              "Highforgers": [],
              "gnomes": [
                "names"
              ],
              "Tyranians": [
                "daringness"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Tyranians human...Capratainies human...Valarie\u0027s elf...Highforgers gnomes...\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind steps on mud-grass muck, says, ,,Rind sleep here.\u0027\u0027",
      "wordCount": 9,
      "order": 11,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind steps on mud-grass muck, says, DIALOG_OBJECT_1",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind steps on mud-grass muck, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "mud-grass",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "muck",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(steps-2, muck-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "muck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "muck"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steps-2, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(steps-2, DIALOG_OBJECT_1-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(muck-5, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "muck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "muck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(muck-5, mud-grass-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mud-grass",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "mud-grass"
                },
                "gov": {
                  "index": "5",
                  "lemma": "muck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "muck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(muck-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "muck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "muck"
                }
              },
              {
                "reln": {
                  "string": "dep(muck-5, says-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "5",
                  "lemma": "muck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "muck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNS": "steps"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_0_node_1_node": {
                  "NN": "muck"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_0_node_0_node": {
                  "JJ": "mud-grass"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node_0_node": {
                  "VBD": "Rind"
                },
                "s_node_0_node_2_node_1_node_2_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind steps on mud-grass muck, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind steps on mud-grass muck, says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind sleep here.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind sleep here.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sleep",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "here",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sleep-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sleep-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "string": "dep(sleep-2, here-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "here",
                  "ner": "O",
                  "tag": "RB",
                  "word": "here"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sleep-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "here"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "sleep"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "here.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Rind sleep here.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind sleep here.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind sleep here.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind work on road,\u0027\u0027 and holds throbbing shoulder.",
      "wordCount": 10,
      "order": 12,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1, and holds throbbing shoulder.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1, and holds throbbing shoulder.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "holds",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "throbbing",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shoulder",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "string": "dep(says-2, DIALOG_OBJECT_1-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-2, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(says-2, holds-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-4, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holds-7, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "7",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holds-7, shoulder-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                },
                "gov": {
                  "index": "7",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shoulder-9, throbbing-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "throbbing",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "throbbing"
                },
                "gov": {
                  "index": "9",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_4_node": {
                  "CC": "and"
                },
                "s_node_1_node_5_node_0_node": {
                  "VBZ": "holds"
                },
                "s_node_1_node_5_node_1_node_0_node": {
                  "VBG": "throbbing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_5_node_1_node_1_node": {
                  "NN": "shoulder"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_5_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_5_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_5_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shoulder."
                ]
              }
            },
            "sentence": "Rind says, DIALOG_OBJECT_1, and holds throbbing shoulder."
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1, and holds throbbing shoulder.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind work on road,\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind work on road,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "work",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "road",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, work-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "work",
                  "ner": "O",
                  "tag": "NN",
                  "word": "work"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(work-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "work",
                  "ner": "O",
                  "tag": "NN",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(work-2, road-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "road",
                  "ner": "O",
                  "tag": "NN",
                  "word": "road"
                },
                "gov": {
                  "index": "2",
                  "lemma": "work",
                  "ner": "O",
                  "tag": "NN",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(work-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "work",
                  "ner": "O",
                  "tag": "NN",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(road-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "road",
                  "ner": "O",
                  "tag": "NN",
                  "word": "road"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "road"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "work"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Rind work on road,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind work on road,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind work on road,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027",
      "wordCount": 10,
      "order": 13,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind can\u0027t find ink bottle, quill, parchment roll.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "ca",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "find",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ink",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bottle",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "quill",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "parchment",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "roll",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, find-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(find-4, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(find-4, ca-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "ca"
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(find-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "iobj(find-4, ink-5)",
                  "name": "indirect object",
                  "tag": "iobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "ink",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ink"
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(find-4, roll-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(find-4, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(roll-11, bottle-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                },
                "gov": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(roll-11, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "string": "dep(roll-11, quill-8)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "8",
                  "lemma": "quill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "quill"
                },
                "gov": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(roll-11, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "string": "dep(roll-11, parchment-10)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "10",
                  "lemma": "parchment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "parchment"
                },
                "gov": {
                  "index": "11",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "find"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node": {
                  "JJ": "quill"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_1_node_2_node_2_node_5_node": {
                  "NN": "roll"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "NN": "bottle"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_2_node_4_node": {
                  "JJ": "parchment"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "ink"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "MD": "ca"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "roll.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind can\u0027t find ink bottle, quill, parchment roll.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,KRAK TAK,\u0027\u0027 shouts Rind.",
      "wordCount": 4,
      "order": 14,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, shouts Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, shouts Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shouts-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(shouts-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shouts-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shouts-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shouts-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node_0_node": {
                  "NNP": "shouts"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, shouts Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, shouts Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,KRAK TAK,\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "KRAK TAK,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "KRAK",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "TAK",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, TAK-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "TAK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "TAK"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(TAK-2, KRAK-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "KRAK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "KRAK"
                },
                "gov": {
                  "index": "2",
                  "lemma": "TAK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "TAK"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(TAK-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "TAK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "TAK"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "TAK"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "KRAK"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,KRAK TAK,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,KRAK TAK,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,KRAK TAK,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind bond.\u0027\u0027",
      "wordCount": 4,
      "order": 15,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind bond.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind bond.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bond",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, bond-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bond",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bond"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NN": "bond"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "bond.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Rind bond.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind bond.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind bond.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Lord Kolosh,\u0027\u0027 says Rind. \u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027",
      "wordCount": 9,
      "order": 16,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Lord Kolosh,\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Lord Kolosh,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Kolosh-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Kolosh-2, Lord-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Kolosh-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "Kolosh"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Lord Kolosh,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Lord Kolosh,\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Lord Kolosh,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Lord Kolosh wise and powerful.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": "JJ",
                "text": "wise",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "powerful",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wise-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "wise",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wise"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-2, Lord-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "string": "dep(wise-3, Kolosh-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "3",
                  "lemma": "wise",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wise"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wise-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "wise",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wise"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(wise-3, powerful-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "powerful",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "powerful"
                },
                "gov": {
                  "index": "3",
                  "lemma": "wise",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wise"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wise-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "wise",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wise"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "JJ": "powerful"
                },
                "s_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_1_node_0_node": {
                  "VBP": "Kolosh"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "wise"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "powerful.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Lord Kolosh wise and powerful.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says ,,Work with humans?\u0027\u0027",
      "wordCount": 5,
      "order": 17,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says ,,Work with humans?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says Work with humans?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Work",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "humans",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-2, Work-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "work",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Work"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(says-2, humans-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "humans"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(humans-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "human",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "humans"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNS": "humans"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "Work"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says ,,Work with humans?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Rind says ,,Work with humans?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Rind says ,,Work with humans?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Why steal,\u0027\u0027 says Rind.",
      "wordCount": 4,
      "order": 18,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why steal,\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Why steal,",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(steal-2, Why-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "steal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "steal"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Why"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why steal,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why steal,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why steal,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind inhales quivers and exhales calm, says, ,,If Kender tell humies Rind Stole. Humies hate orcs more.\u0027\u0027",
      "wordCount": 17,
      "order": 19,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind inhales quivers and exhales calm, says, DIALOG_OBJECT_1",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind inhales quivers and exhales calm, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "inhales",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "quivers",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "exhales",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "calm",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhales-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhales-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(inhales-2, quivers-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "quiver",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "quivers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(inhales-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(inhales-2, exhales-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "exhales"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(exhales-5, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "exhales"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(exhales-5, calm-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "calm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "calm"
                },
                "gov": {
                  "index": "5",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "exhales"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(calm-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "calm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "calm"
                }
              },
              {
                "reln": {
                  "string": "dep(calm-6, says-8)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "6",
                  "lemma": "calm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "calm"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(calm-6, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "calm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "calm"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(calm-6, DIALOG_OBJECT_1-10)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "6",
                  "lemma": "calm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "calm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_0_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_0_node_0_node": {
                  "NNS": "quivers"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "inhales"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "JJ": "calm"
                },
                "s_node_1_node_0_node_1_node_0_node_2_node": {
                  "NNS": "exhales"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind inhales quivers and exhales calm, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind inhales quivers and exhales calm, says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,If Kender tell humies Rind Stole.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "If Kender tell humies Rind Stole.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "If",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Kender",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "tell",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "humies",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "Stole",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Stole-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Stole"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(tell-3, If-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "if",
                  "ner": "O",
                  "tag": "IN",
                  "word": "If"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tell",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tell"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(tell-3, Kender-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kender",
                  "ner": "PERSON",
                  "tag": "JJ",
                  "word": "Kender"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tell",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tell"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(tell-3, humies-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "humy",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "humies"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tell",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tell"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(Stole-6, tell-3)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tell",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tell"
                },
                "gov": {
                  "index": "6",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Stole"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Stole-6, Rind-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "6",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Stole"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Stole-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Stole"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "VBP": "tell"
                },
                "s_node_0_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "VBZ": "Stole"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNS": "humies"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "IN": "If"
                },
                "s_node_0_node_1_node_0_node": {
                  "NNP": "Kender"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Stole."
                ]
              }
            },
            "sentence": ",,If Kender tell humies Rind Stole."
          },
          "jazzyState": {
            "text": ",,If Kender tell humies Rind Stole.",
            "misspelledWords": {
              "Kender": [
                "kinder",
                "ender",
                "vender",
                "gender",
                "lender",
                "mender",
                "bender",
                "render",
                "sender",
                "tender"
              ],
              "humies": [
                "hums"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,If Kender tell humies Rind Stole.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Humies hate orcs more.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Humies hate orcs more.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Humies",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hate",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "orcs",
                "net": "O"
              },
              {
                "pos": "RBR",
                "text": "more",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hate-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hate"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hate-2, Humies-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "humy",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Humies"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hate"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hate-2, orcs-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "orc",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "orcs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hate"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(hate-2, more-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "RBR",
                  "word": "more"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hate"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hate-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hate"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RBR": "more"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "orcs"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Humies"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hate"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "more.\u0027\u0027"
                ]
              }
            },
            "sentence": "Humies hate orcs more.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Humies hate orcs more.\u0027\u0027",
            "misspelledWords": {
              "Humies": [
                "hums"
              ],
              "orcs": [
                "arcs",
                "or\u0027s",
                "ores",
                "RCS"
              ]
            }
          },
          "dialogState": {
            "sentence": "Humies hate orcs more.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Kelten?\u0027\u0027 says Rind.",
      "wordCount": 3,
      "order": 20,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Kelten?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Kelten?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Kelten",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Kelten-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Kelten",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kelten"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Kelten-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Kelten",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kelten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node": {
                  "JJ": "Kelten"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Kelten?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Kelten?\u0027\u0027",
            "misspelledWords": {
              "Kelten": [
                "gelatin"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Kelten?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "says Rind."
          },
          "jazzyState": {
            "text": "says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind walks with Brom, says, ,,No.\u0027\u0027",
      "wordCount": 6,
      "order": 21,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind walks with Brom, says, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind walks with Brom, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "walks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(walks-2, Rind-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(walks-2, Brom-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walks-2, DIALOG_OBJECT_1-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Brom-4, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "string": "dep(Brom-4, says-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "VBN": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "walks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind walks with Brom, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind walks with Brom, says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,No.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,No.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Brom stole. Why?\u0027\u0027 as Rind quickly walks after Brom.",
      "wordCount": 11,
      "order": 22,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Brom stole.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Brom stole.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "stole",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stole-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "stole"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stole-2, Brom-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "stole"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stole-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "stole"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBD": "stole"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stole."
                ]
              }
            },
            "sentence": ",,Brom stole."
          },
          "jazzyState": {
            "text": ",,Brom stole.",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Brom stole.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Why?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Why?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Why-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Why?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Why?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Why?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "as Rind quickly walks after Brom.",
          "wordCount": 6,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "as Rind quickly walks after Brom.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "RB",
                "text": "quickly",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "walks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "after",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walks-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(walks-4, as-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walks-4, Rind-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(walks-4, quickly-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "quickly",
                  "ner": "O",
                  "tag": "RB",
                  "word": "quickly"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:after(walks-4, Brom-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:after"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walks-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Brom-6, after-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "after",
                  "ner": "O",
                  "tag": "IN",
                  "word": "after"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "after"
                },
                "s_node_1_node": {
                  "RB": "quickly"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_1_node": {
                  "NNP": "Brom"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "walks"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "RB": "as"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Brom."
                ]
              }
            },
            "sentence": "as Rind quickly walks after Brom."
          },
          "jazzyState": {
            "text": "as Rind quickly walks after Brom.",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind looks back and says, \u0027\u0027Why steal?\u0027\u0027",
      "wordCount": 7,
      "order": 23,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind looks back and says, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind looks back and says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, looks-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, says-5)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(looks-2, back-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(looks-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(looks-2, says-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "RB": "back"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "looks"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind looks back and says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind looks back and says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Why steal?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why steal?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steal-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "steal"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Why steal?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Why steal?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Why steal?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind pants and says a few times, \u0027\u0027...Why...Steal...\u0027\u0027\u0027",
      "wordCount": 9,
      "order": 24,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind pants and says a few times, DIALOG_OBJECT_1",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind pants and says a few times, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pants",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "few",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "times",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pants-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pants",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pants"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-4, pants-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pants",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pants"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-4, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-4, times-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "times"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(times-7, a-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "times"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(times-7, few-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "few",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "few"
                },
                "gov": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "times"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(times-7, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "times"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(times-7, DIALOG_OBJECT_1-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "times"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "pants"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node": {
                  "JJ": "few"
                },
                "s_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_0_node_2_node": {
                  "NNS": "times"
                },
                "s_node_0_node_0_node_0_node": {
                  "VBD": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind pants and says a few times, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind pants and says a few times, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027...Why...Steal...\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...Why...Steal...",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "Steal",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Why-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-2, ...-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              },
              {
                "reln": {
                  "string": "dep(Why-2, Steal-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Steal"
                },
                "gov": {
                  "index": "2",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Why-2, ...-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_0_node_1_node": {
                  "COLON": "..."
                },
                "s_node_1_node_1_node": {
                  "VBZ": "Steal"
                },
                "s_node_1_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "PERIOD": "..."
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_0_node_0_node": {
                  "VB": "Why"
                },
                "s_node_0_node": {
                  "COLON": "..."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "S"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u0027\u0027...Why...Steal...\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027...Why...Steal...\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027...Why...Steal...\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027...Why...Steal...\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "\u0027",
            "coreAnnotations": [
              {
                "pos": "\u0027\u0027",
                "text": "\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, \u0027-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027",
                  "ner": "O",
                  "tag": "\u0027\u0027",
                  "word": "\u0027"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "UH": "\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027"
          },
          "jazzyState": {
            "text": "\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Why Brom steal?\u0027\u0027",
      "wordCount": 5,
      "order": 25,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why Brom steal?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why Brom steal?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steal-3, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(steal-3, Brom-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "VB": "steal"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why Brom steal?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why Brom steal?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Why Brom steal?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, \u0027\u0027Rind sleep outside. Tom\u0027s tent stolen.\u0027\u0027",
      "wordCount": 8,
      "order": 26,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rind sleep outside.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind sleep outside.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sleep",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "outside",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, outside-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "outside",
                  "ner": "O",
                  "tag": "NN",
                  "word": "outside"
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(outside-3, sleep-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                },
                "gov": {
                  "index": "3",
                  "lemma": "outside",
                  "ner": "O",
                  "tag": "NN",
                  "word": "outside"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "outside"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "sleep"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "outside."
                ]
              }
            },
            "sentence": "\u0027\u0027Rind sleep outside."
          },
          "jazzyState": {
            "text": "\u0027\u0027Rind sleep outside.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rind sleep outside.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Tom\u0027s tent stolen.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Tom\u0027s tent stolen.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Tom",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tent",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "stolen",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stolen-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stolen"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Tom-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Tom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(tent-3, Tom-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Tom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tent"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stolen-4, tent-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tent"
                },
                "gov": {
                  "index": "4",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stolen"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stolen-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stolen"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBN": "stolen"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tent"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Tom"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "stolen.\u0027\u0027"
                ]
              }
            },
            "sentence": "Tom\u0027s tent stolen.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Tom\u0027s tent stolen.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Tom\u0027s tent stolen.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Why Brom steal a bad tent?\u0027\u0027 says Rind.",
      "wordCount": 8,
      "order": 27,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Why Brom steal a bad tent?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why Brom steal a bad tent?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bad",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tent",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steal-3, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(steal-3, Brom-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(steal-3, tent-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tent"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-3, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tent-6, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tent-6, bad-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bad"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tent"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "tent"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "bad"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "steal"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why Brom steal a bad tent?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why Brom steal a bad tent?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Why Brom steal a bad tent?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "says Rind."
          },
          "jazzyState": {
            "text": "says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says as Brom nears sleep, ,,Why Brom steal?\u0027\u0027",
      "wordCount": 9,
      "order": 28,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says as Brom nears sleep, DIALOG_OBJECT_1",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says as Brom nears sleep, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "nears",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sleep",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(says-2, nears-5)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "nears"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(nears-5, as-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "5",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "nears"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(nears-5, Brom-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "brom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Brom"
                },
                "gov": {
                  "index": "5",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "nears"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(nears-5, sleep-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                },
                "gov": {
                  "index": "5",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "nears"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sleep-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(sleep-6, DIALOG_OBJECT_1-8)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleep"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_0_node": {
                  "NN": "sleep"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VBZ": "nears"
                },
                "s_node_0_node": {
                  "JJ": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says as Brom nears sleep, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says as Brom nears sleep, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why Brom steal?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why Brom steal?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steal-3, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(steal-3, Brom-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "VB": "steal"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why Brom steal?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why Brom steal?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Why Brom steal?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Why Brom steal?\u0027\u0027 says Rind",
      "wordCount": 5,
      "order": 29,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Why Brom steal?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why Brom steal?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "steal",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steal-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(steal-3, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(steal-3, Brom-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steal-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "steal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "VB": "steal"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why Brom steal?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why Brom steal?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Why Brom steal?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-1, Rind-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "says Rind"
          },
          "jazzyState": {
            "text": "says Rind",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,My mace?\u0027\u0027",
      "wordCount": 4,
      "order": 30,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,My mace?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "My mace?",
            "coreAnnotations": [
              {
                "pos": "PRP$",
                "text": "My",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mace",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mace-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mace"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(mace-2, My-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "My"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mace"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mace-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mace"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "NN": "mace"
                },
                "s_node_0_node_0_node": {
                  "PRP$": "My"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,My mace?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,My mace?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,My mace?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Barony?\u0027\u0027 says Rind.",
      "wordCount": 3,
      "order": 31,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Barony?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Barony?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Barony",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Barony-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Barony",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Barony"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Barony-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Barony",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Barony"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Barony"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Barony?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Barony?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Barony?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "says Rind."
          },
          "jazzyState": {
            "text": "says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind whispers, ,,Tie with rope. No kill Joe, Ross. They earn. Let fate and animals trial. No kill sleeping.\u0027\u0027",
      "wordCount": 19,
      "order": 32,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind whispers, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind whispers, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "whispers",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, whispers-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "whispers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(whispers-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "whispers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whispers-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "whispers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(whispers-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "whispers"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "whispers"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind whispers, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind whispers, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Tie with rope.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Tie with rope.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Tie",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rope",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Tie-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Tie"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(Tie-1, rope-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "3",
                  "lemma": "rope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rope"
                },
                "gov": {
                  "index": "1",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Tie"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Tie-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Tie"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rope-3, with-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "3",
                  "lemma": "rope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rope"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "rope"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Tie"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "with"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rope."
                ]
              }
            },
            "sentence": ",,Tie with rope."
          },
          "jazzyState": {
            "text": ",,Tie with rope.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Tie with rope.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No kill Joe, Ross.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "No kill Joe, Ross.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Joe",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Ross",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, kill-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(kill-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "string": "dep(kill-2, Ross-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Ross",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ross"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(kill-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Ross-5, Joe-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Joe",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Joe"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Ross",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ross"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Ross-5, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "Ross",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ross"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Ross"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "UH": "No"
                },
                "s_node_1_node_0_node": {
                  "VB": "kill"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Joe"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Ross."
                ]
              }
            },
            "sentence": "No kill Joe, Ross."
          },
          "jazzyState": {
            "text": "No kill Joe, Ross.",
            "misspelledWords": {
              "Joe": [
                "joy",
                "toe",
                "roe",
                "hoe",
                "foe",
                "woe",
                "joke",
                "jot",
                "job",
                "jog"
              ],
              "Ross": [
                "roes",
                "rose",
                "rosy",
                "rows",
                "boss",
                "loss",
                "toss",
                "moss",
                "roses",
                "cross",
                "gross",
                "rods",
                "rots",
                "robs"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They earn.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They earn.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, earn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earn-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earn-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "earn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "earn"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "earn."
                ]
              }
            },
            "sentence": "They earn."
          },
          "jazzyState": {
            "text": "They earn.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Let fate and animals trial.",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Let fate and animals trial.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Let",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "fate",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "animals",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trial",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Let-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Let"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Let-1, trial-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "trial",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trial"
                },
                "gov": {
                  "index": "1",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Let"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Let-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Let"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(fate-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fate"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(fate-2, animals-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "animal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "animals"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fate"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(trial-5, fate-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fate"
                },
                "gov": {
                  "index": "5",
                  "lemma": "trial",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trial"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(trial-5, animals-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "animal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "animals"
                },
                "gov": {
                  "index": "5",
                  "lemma": "trial",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trial"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_2_node": {
                  "NNS": "animals"
                },
                "s_node_0_node_1_node_3_node": {
                  "NN": "trial"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Let"
                },
                "s_node_0_node_1_node_0_node": {
                  "NN": "fate"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "trial."
                ]
              }
            },
            "sentence": "Let fate and animals trial."
          },
          "jazzyState": {
            "text": "Let fate and animals trial.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No kill sleeping.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "No kill sleeping.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sleeping",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, kill-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(kill-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "string": "dep(kill-2, sleeping-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sleeping",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleeping"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(kill-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_1_node_1_node": {
                  "VBG": "sleeping"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                },
                "s_node_1_node_0_node": {
                  "VB": "kill"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "sleeping.\u0027\u0027"
                ]
              }
            },
            "sentence": "No kill sleeping.\u0027\u0027"
          },
          "jazzyState": {
            "text": "No kill sleeping.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "No kill sleeping.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Brom murder before?\u0027\u0027",
      "wordCount": 5,
      "order": 33,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Brom murder before?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Brom murder before?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "murder",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, murder-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(murder-2, Brom-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(murder-2, before-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(murder-2, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "RB": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "NN": "murder"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Brom"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Brom murder before?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Brom murder before?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Brom murder before?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind holds throbbing bicep and rubs cold shoulder, says, ,,Yes, Brom.\u0027\u0027",
      "wordCount": 11,
      "order": 34,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind holds throbbing bicep and rubs cold shoulder, says, DIALOG_OBJECT_1",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind holds throbbing bicep and rubs cold shoulder, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "holds",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "throbbing",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bicep",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "rubs",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "cold",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shoulder",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holds-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holds-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holds-2, bicep-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bicep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bicep"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(holds-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(holds-2, rubs-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bicep-4, throbbing-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "throbbing",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "throbbing"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bicep",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bicep"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rubs-6, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "6",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "iobj(rubs-6, cold-7)",
                  "name": "indirect object",
                  "tag": "iobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "cold",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "cold"
                },
                "gov": {
                  "index": "6",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(rubs-6, shoulder-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                },
                "gov": {
                  "index": "6",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoulder-8, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              },
              {
                "reln": {
                  "string": "dep(shoulder-8, says-10)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "10",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "8",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoulder-8, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(shoulder-8, DIALOG_OBJECT_1-12)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "12",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "8",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_0_node_1_node_5_node": {
                  "NN": "shoulder"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "VBG": "throbbing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_3_node": {
                  "NN": "rubs"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "holds"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "bicep"
                },
                "s_node_1_node_0_node_1_node_4_node": {
                  "JJ": "cold"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind holds throbbing bicep and rubs cold shoulder, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind holds throbbing bicep and rubs cold shoulder, says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "bicep": [
                "biceps"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Yes, Brom.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Yes, Brom.",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Brom-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "discourse(Brom-3, Yes-1)",
                  "name": "discourse element",
                  "tag": "discourse"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "NNP": "Brom"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "UH": "Yes"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Brom.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Yes, Brom.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Yes, Brom.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Yes, Brom.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027",
      "wordCount": 8,
      "order": 35,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How Brom get Krak Tak\u0027s crossbow?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "get",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Krak",
                "net": "PERSON"
              },
              {
                "pos": "NNP",
                "text": "Tak",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "crossbow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, get-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(get-3, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(get-3, Brom-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(get-3, crossbow-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "crossbow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "crossbow"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(get-3, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Tak-5, Krak-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Krak",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Krak"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Tak",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tak"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Tak-5, \u0027s-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Tak",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tak"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(crossbow-7, Tak-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Tak",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tak"
                },
                "gov": {
                  "index": "7",
                  "lemma": "crossbow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "crossbow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Krak"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "crossbow"
                },
                "s_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "get"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNP": "Tak"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ],
              "Krak": [
                "crack",
                "creak",
                "croak"
              ],
              "crossbow": [
                "crisp"
              ],
              "Tak\u0027s": [
                "tag\u0027s",
                "takes",
                "tap\u0027s"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,How Brom get Krak Tak\u0027s crossbow?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Brom murder before?\u0027\u0027",
      "wordCount": 5,
      "order": 36,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Brom murder before?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Brom murder before?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "murder",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, murder-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(murder-2, Brom-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(murder-2, before-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(murder-2, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "murder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "RB": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "NN": "murder"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Brom"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Brom murder before?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Brom murder before?\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Brom murder before?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Rest,\u0027\u0027 says Rind.",
      "wordCount": 3,
      "order": 37,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rest,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rest,",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Rest",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rest-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rest",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Rest"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rest-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "rest",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Rest"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Rest"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Rest,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Rest,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rest,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind feel new. New...new.\u0027\u0027",
      "wordCount": 6,
      "order": 38,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind feel new.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind feel new.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "new",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VB",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VB",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(feel-2, new-3)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "new",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "new"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VB",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VB",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "new"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "new."
                ]
              }
            },
            "sentence": ",,Rind feel new."
          },
          "jazzyState": {
            "text": ",,Rind feel new.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind feel new.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "New...new.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "New...new.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "New",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "new",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, New-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "New",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "New"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(New-1, ...-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "1",
                  "lemma": "New",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "New"
                }
              },
              {
                "reln": {
                  "string": "dep(New-1, new-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "new",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "new"
                },
                "gov": {
                  "index": "1",
                  "lemma": "New",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "New"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(New-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "New",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "New"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "JJ": "new"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "New"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "New...new.\u0027\u0027"
                ]
              }
            },
            "sentence": "New...new.\u0027\u0027"
          },
          "jazzyState": {
            "text": "New...new.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "New...new.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Feeling of Mom Hug mend cloak. Maybe things,\u0027\u0027 says Rind.",
      "wordCount": 10,
      "order": 39,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Feeling of Mom Hug mend cloak.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Feeling of Mom Hug mend cloak.",
            "coreAnnotations": [
              {
                "pos": "VBG",
                "text": "Feeling",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Mom",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Hug",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mend",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cloak",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mend-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mend"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Feeling-1, Hug-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hug"
                },
                "gov": {
                  "index": "1",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Feeling"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Hug-4, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hug"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Hug-4, Mom-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mom"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Hug"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(mend-5, Feeling-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Feeling"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mend"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(mend-5, cloak-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mend"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mend-5, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mend"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "NNP": "Mom"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "cloak"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNP": "Hug"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBD": "mend"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Feeling"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cloak."
                ]
              }
            },
            "sentence": ",,Feeling of Mom Hug mend cloak."
          },
          "jazzyState": {
            "text": ",,Feeling of Mom Hug mend cloak.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Feeling of Mom Hug mend cloak.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Maybe things,\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Maybe things,",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Maybe",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "things",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, things-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "thing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "things"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(things-2, Maybe-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "maybe",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Maybe"
                },
                "gov": {
                  "index": "2",
                  "lemma": "thing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "things"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(things-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "thing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "things"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node": {
                  "NNS": "things"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Maybe"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Maybe things,\u0027\u0027"
          },
          "jazzyState": {
            "text": "Maybe things,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Maybe things,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Bait for thieves.\u0027\u0027",
      "wordCount": 5,
      "order": 40,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Bait for thieves.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Bait for thieves.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Bait",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "thieves",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Bait-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bait",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Bait"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(Bait-1, thieves-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "3",
                  "lemma": "thief",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "thieves"
                },
                "gov": {
                  "index": "1",
                  "lemma": "bait",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Bait"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Bait-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "bait",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Bait"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(thieves-3, for-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "3",
                  "lemma": "thief",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "thieves"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NNS": "thieves"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Bait"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "for"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "thieves.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Bait for thieves.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Bait for thieves.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Bait for thieves.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Sold.\u0027\u0027",
      "wordCount": 3,
      "order": 41,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Sold.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Sold.",
            "coreAnnotations": [
              {
                "pos": "VBN",
                "text": "Sold",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sold-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sell",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "Sold"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sold-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "sell",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "Sold"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBN": "Sold"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Sold.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Sold.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Sold.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Sold.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Dutchy? Scimitars?\u0027\u0027 says Rind",
      "wordCount": 4,
      "order": 42,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Dutchy?",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Dutchy?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Dutchy",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Dutchy-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Dutchy",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Dutchy"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Dutchy-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Dutchy",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Dutchy"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Dutchy"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Dutchy?"
          },
          "jazzyState": {
            "text": ",,Dutchy?",
            "misspelledWords": {
              "Dutchy": [
                "duchy"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Dutchy?",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Scimitars?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Scimitars?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Scimitars",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Scimitars-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Scimitars",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Scimitars"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Scimitars-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Scimitars",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Scimitars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "NNS": "Scimitars"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Scimitars?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Scimitars?\u0027\u0027",
            "misspelledWords": {
              "Scimitars": [
                "cemeteries",
                "cemetery\u0027s"
              ]
            }
          },
          "dialogState": {
            "sentence": "Scimitars?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-1, Rind-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "says Rind"
          },
          "jazzyState": {
            "text": "says Rind",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, ,,Rind have pouches, caltrops and scroll case. Waterskins.\u0027\u0027",
      "wordCount": 26,
      "order": 43,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, DIALOG_OBJECT_1",
          "wordCount": 18,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "grabs",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "parchment",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "scroll",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "case",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shoves",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "scroll",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "case",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "backpack",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "while",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "whispering",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, grabs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grabs-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(grabs-2, parchment-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "parchment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "parchment"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(grabs-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(grabs-2, slides-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(grabs-2, shoves-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "shove",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoves"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(parchment-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "parchment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "parchment"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slides-6, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(slides-6, it-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(slides-6, case-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "10",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(slides-6, and-11)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "11",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(slides-6, shoves-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "shove",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoves"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(case-10, into-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "10",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(case-10, scroll-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "scroll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "scroll"
                },
                "gov": {
                  "index": "10",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:while(shoves-12, whispering-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:while"
                },
                "dep": {
                  "index": "18",
                  "lemma": "whispering",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whispering"
                },
                "gov": {
                  "index": "12",
                  "lemma": "shove",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoves"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shoves-12, case-14)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "14",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "12",
                  "lemma": "shove",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoves"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(case-14, backpack-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "16",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                },
                "gov": {
                  "index": "14",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(case-14, scroll-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "scroll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "scroll"
                },
                "gov": {
                  "index": "14",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(backpack-16, in-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "16",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(whispering-18, while-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "while",
                  "ner": "O",
                  "tag": "IN",
                  "word": "while"
                },
                "gov": {
                  "index": "18",
                  "lemma": "whispering",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whispering"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whispering-18, ,-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "18",
                  "lemma": "whispering",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whispering"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(whispering-18, DIALOG_OBJECT_1-20)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "20",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "18",
                  "lemma": "whispering",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whispering"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_0_node_2_node_1_node_1_node": {
                  "NN": "case"
                },
                "s_node_1_node_2_node_2_node_2_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_2_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "VBZ": "shoves"
                },
                "s_node_1_node_2_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_node_2_node": {
                  "NN": "whispering"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NN": "case"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_node": {
                  "PRP": "it"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "grabs"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "parchment"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_node_0_node": {
                  "NN": "backpack"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "VBZ": "slides"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_2_node_0_node_2_node_1_node_0_node": {
                  "JJ": "scroll"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_node_1_node": {
                  "NN": "while"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "JJ": "scroll"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind grabs the parchment and slides it into scroll case and shoves scroll case in backpack while whispering, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind have pouches, caltrops and scroll case.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind have pouches, caltrops and scroll case.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pouches",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "caltrops",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "scroll",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "case",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, have-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-2, pouches-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-2, caltrops-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "caltrop",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "caltrops"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-2, case-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(have-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pouches-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pouches-3, caltrops-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "caltrop",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "caltrops"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pouches-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pouches-3, case-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(case-8, scroll-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "scroll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "scroll"
                },
                "gov": {
                  "index": "8",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "JJ": "caltrops"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "case"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "JJ": "pouches"
                },
                "s_node_1_node_1_node_0_node_4_node": {
                  "JJ": "scroll"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "have"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "case."
                ]
              }
            },
            "sentence": ",,Rind have pouches, caltrops and scroll case."
          },
          "jazzyState": {
            "text": ",,Rind have pouches, caltrops and scroll case.",
            "misspelledWords": {
              "caltrops": []
            }
          },
          "dialogState": {
            "sentence": ",,Rind have pouches, caltrops and scroll case.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Waterskins.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Waterskins.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Waterskins",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Waterskins-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "waterskin",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Waterskins"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Waterskins-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "waterskin",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Waterskins"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Waterskins"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Waterskins.\u0027\u0027"
                ]
              }
            },
            "sentence": "Waterskins.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Waterskins.\u0027\u0027",
            "misspelledWords": {
              "Waterskins": []
            }
          },
          "dialogState": {
            "sentence": "Waterskins.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind mumbles, ,,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027",
      "wordCount": 10,
      "order": 44,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind mumbles, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mumbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(mumbles-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mumbles-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "mumbles"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind mumbles, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Stealing worse than killing...Murder bad or good...Kolosh kill...",
            "coreAnnotations": [
              {
                "pos": "VBG",
                "text": "Stealing",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "worse",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "than",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "killing",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Murder",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bad",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "good",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Kolosh",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Stealing-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Stealing"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(Stealing-1, kill-12)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                },
                "gov": {
                  "index": "1",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Stealing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Stealing-1, ...-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "1",
                  "lemma": "steal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Stealing"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(worse-2, killing-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "worse",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "worse"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(killing-4, than-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "than",
                  "ner": "O",
                  "tag": "IN",
                  "word": "than"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killing-4, ...-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "string": "dep(killing-4, Murder-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Murder"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killing-4, ...-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Murder-6, bad-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bad"
                },
                "gov": {
                  "index": "6",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Murder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Murder-6, good-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "good",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "good"
                },
                "gov": {
                  "index": "6",
                  "lemma": "murder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Murder"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(bad-7, or-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "7",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bad"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:or(bad-7, good-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:or"
                },
                "dep": {
                  "index": "9",
                  "lemma": "good",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "good"
                },
                "gov": {
                  "index": "7",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bad"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(kill-12, worse-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "worse",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "worse"
                },
                "gov": {
                  "index": "12",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(kill-12, Kolosh-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "kolosh",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "12",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "than"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_2_node_1_node": {
                  "VB": "kill"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "VBG": "killing"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_0_node": {
                  "NN": "Murder"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_1_node_1_node": {
                  "CC": "or"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_2_node_0_node": {
                  "VBP": "Kolosh"
                },
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_1_node_0_node": {
                  "JJ": "bad"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_1_node_2_node": {
                  "JJ": "good"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_node_0_node": {
                  "VBG": "Stealing"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJR": "worse"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ELLIPSIS": [
                  "killing...Murder",
                  "good...Kolosh"
                ],
                "ANTI": [
                  "kill...\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Stealing worse than killing...Murder bad or good...Kolosh kill...\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Scrollcase!\u0027\u0027 says Rind and shakes backpack.",
      "wordCount": 6,
      "order": 45,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Scrollcase!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Scrollcase!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Scrollcase",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Scrollcase-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "scrollcase",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Scrollcase"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Scrollcase-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "scrollcase",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Scrollcase"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Scrollcase"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Scrollcase!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Scrollcase!\u0027\u0027",
            "misspelledWords": {
              "Scrollcase": [
                "skulks"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Scrollcase!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind and shakes backpack.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind and shakes backpack.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "backpack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-1, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(says-1, shakes-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shakes-4, backpack-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_1_node": {
                  "NN": "backpack"
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_0_node_2_node_0_node": {
                  "VBZ": "shakes"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNP": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "backpack."
                ]
              }
            },
            "sentence": "says Rind and shakes backpack."
          },
          "jazzyState": {
            "text": "says Rind and shakes backpack.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind looks at the tall stone towers and smiles, ,,WOW!\u0027\u0027 and says, \u0027\u0027Those towers tall.\u0027\u0027",
      "wordCount": 15,
      "order": 46,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind looks at the tall stone towers and smiles, DIALOG_OBJECT_1",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind looks at the tall stone towers and smiles, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tall",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stone",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "towers",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "smiles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, looks-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, smiles-9)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "9",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-11)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(looks-2, towers-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "7",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(looks-2, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(looks-2, smiles-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(towers-7, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(towers-7, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(towers-7, tall-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(towers-7, stone-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stone"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "stone"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_2_node": {
                  "NNS": "smiles"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "tall"
                },
                "s_node_0_node": {
                  "JJ": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "looks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_2_node_0_node_0_node": {
                  "NNS": "towers"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind looks at the tall stone towers and smiles, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind looks at the tall stone towers and smiles, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,WOW!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "WOW!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "WOW",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, WOW-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "WOW",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "WOW"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(WOW-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "WOW",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "WOW"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "WOW"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,WOW!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,WOW!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,WOW!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "and says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "and says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-2, and-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "string": "dep(says-2, DIALOG_OBJECT_1-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "and"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "and says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "and says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Those towers tall.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Those towers tall.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "Those",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "towers",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, tall-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(towers-2, Those-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "those",
                  "ner": "O",
                  "tag": "DT",
                  "word": "Those"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                }
              },
              {
                "reln": {
                  "string": "dep(tall-3, towers-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tower",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "towers"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tall-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "tall"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "Those"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "towers"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "tall.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Those towers tall.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Those towers tall.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Those towers tall.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind drops backpack and puts waterskins inside backpack while saying, ,,Got pouches, cal-trops. Where scroll case?\u0027\u0027",
      "wordCount": 16,
      "order": 47,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind drops backpack and puts waterskins inside backpack while saying, DIALOG_OBJECT_1",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind drops backpack and puts waterskins inside backpack while saying, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drops",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "backpack",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "puts",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "waterskins",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "inside",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "backpack",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "while",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "saying",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drops-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drops-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(drops-2, backpack-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(drops-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(drops-2, puts-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puts"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(puts-5, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(puts-5, waterskins-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "waterskin",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waterskins"
                },
                "gov": {
                  "index": "5",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puts"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(puts-5, backpack-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "8",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                },
                "gov": {
                  "index": "5",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(backpack-8, inside-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "inside",
                  "ner": "O",
                  "tag": "IN",
                  "word": "inside"
                },
                "gov": {
                  "index": "8",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              },
              {
                "reln": {
                  "string": "dep(backpack-8, saying-10)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "10",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "saying"
                },
                "gov": {
                  "index": "8",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(backpack-8, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(backpack-8, DIALOG_OBJECT_1-12)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "12",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "8",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(saying-10, while-9)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "9",
                  "lemma": "while",
                  "ner": "O",
                  "tag": "IN",
                  "word": "while"
                },
                "gov": {
                  "index": "10",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "saying"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "puts"
                },
                "s_node_1_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_1_node": {
                  "NN": "while"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_2_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "drops"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "inside"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_2_node": {
                  "NN": "saying"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node": {
                  "NNS": "waterskins"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_0_node": {
                  "NN": "backpack"
                },
                "s_node_1_node_2_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBP": "backpack"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind drops backpack and puts waterskins inside backpack while saying, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind drops backpack and puts waterskins inside backpack while saying, DIALOG_OBJECT_1",
            "misspelledWords": {
              "waterskins": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Got pouches, cal-trops.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Got pouches, cal-trops.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Got",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pouches",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "cal-trops",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pouches-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pouches-2, Got-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Got",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Got"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pouches-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(pouches-2, cal-trops-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cal-trop",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cal-trops"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pouches-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pouch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pouches"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "NNS": "cal-trops"
                },
                "s_node_0_node_1_node": {
                  "NNS": "pouches"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Got"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "cal-trops."
                ]
              }
            },
            "sentence": ",,Got pouches, cal-trops."
          },
          "jazzyState": {
            "text": ",,Got pouches, cal-trops.",
            "misspelledWords": {
              "trops": [
                "troops",
                "drops",
                "traps",
                "trips",
                "tops",
                "props",
                "trots",
                "crops"
              ],
              "cal": [
                "call",
                "coal",
                "calm",
                "calf",
                "pal",
                "caw",
                "cad",
                "cat",
                "car",
                "cab",
                "cap",
                "can"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Got pouches, cal-trops.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Where scroll case?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Where scroll case?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "scroll",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "case",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, case-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(case-3, Where-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "where",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "3",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(case-3, scroll-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scroll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "scroll"
                },
                "gov": {
                  "index": "3",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(case-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "NN": "case"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Where"
                },
                "s_node_1_node_0_node": {
                  "JJ": "scroll"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Where scroll case?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Where scroll case?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Where scroll case?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,How much money did we earn?\u0027\u0027 while holding the short bow and arrows following Brom between carts hanging furs and pelts.",
      "wordCount": 23,
      "order": 48,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How much money did we earn?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How much money did we earn?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "much",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "money",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, earn-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(much-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "much",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "much"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(money-3, much-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "much",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "much"
                },
                "gov": {
                  "index": "3",
                  "lemma": "money",
                  "ner": "O",
                  "tag": "NN",
                  "word": "money"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(earn-6, money-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "money",
                  "ner": "O",
                  "tag": "NN",
                  "word": "money"
                },
                "gov": {
                  "index": "6",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(earn-6, did-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "6",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earn-6, we-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "6",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earn-6, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "6",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "earn"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "we"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "NN": "money"
                },
                "s_node_0_node_0_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "much"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How much money did we earn?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How much money did we earn?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,How much money did we earn?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "while holding the short bow and arrows following Brom between carts hanging furs and pelts.",
          "wordCount": 15,
          "orderParagraph": 2,
          "tense": [
            "PresentParticiple",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "while holding the short bow and arrows following Brom between carts hanging furs and pelts.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "while",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "holding",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "short",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bow",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "arrows",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "following",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "carts",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "hanging",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "furs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pelts",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holding-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(holding-2, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(holding-2, while-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "while",
                  "ner": "O",
                  "tag": "IN",
                  "word": "while"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holding-2, bow-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bow"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holding-2, arrows-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "arrow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arrows"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:following(holding-2, Brom-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:following"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bow-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bow"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bow-5, short-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "short",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "short"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(bow-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bow"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(bow-5, arrows-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "arrow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arrows"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bow"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Brom-9, following-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "following"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(Brom-9, carts-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "11",
                  "lemma": "cart",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "carts"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(carts-11, between-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "between",
                  "ner": "O",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "11",
                  "lemma": "cart",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "carts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(carts-11, hanging-12)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "12",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "hanging"
                },
                "gov": {
                  "index": "11",
                  "lemma": "cart",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "carts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hanging-12, furs-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "fur",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "furs"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "hanging"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hanging-12, pelts-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "pelt",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pelts"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "hanging"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(furs-13, and-14)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "14",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "13",
                  "lemma": "fur",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "furs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(furs-13, pelts-15)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "15",
                  "lemma": "pelt",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pelts"
                },
                "gov": {
                  "index": "13",
                  "lemma": "fur",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "furs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "between"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_2_node": {
                  "NNS": "pelts"
                },
                "s_node_1_node_1_node_6_node": {
                  "NN": "Brom"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "bow"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "NNS": "furs"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_4_node": {
                  "NNS": "arrows"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNS": "carts"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "JJ": "short"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBG": "hanging"
                },
                "s_node_1_node_1_node_5_node": {
                  "VBG": "following"
                },
                "s_node_0_node": {
                  "NN": "while"
                },
                "s_node_1_node_0_node": {
                  "VBG": "holding"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pelts."
                ]
              }
            },
            "sentence": "while holding the short bow and arrows following Brom between carts hanging furs and pelts."
          },
          "jazzyState": {
            "text": "while holding the short bow and arrows following Brom between carts hanging furs and pelts.",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,How much money?\u0027\u0027",
      "wordCount": 5,
      "order": 49,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How much money?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "How much money?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "much",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "money",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, money-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "money",
                  "ner": "O",
                  "tag": "NN",
                  "word": "money"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(much-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "much",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "much"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(money-3, much-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "much",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "much"
                },
                "gov": {
                  "index": "3",
                  "lemma": "money",
                  "ner": "O",
                  "tag": "NN",
                  "word": "money"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(money-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "money",
                  "ner": "O",
                  "tag": "NN",
                  "word": "money"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "SBARQ"
                },
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_0_node_1_node": {
                  "NN": "money"
                },
                "s_node_0_node_0_node_0_node": {
                  "WRB": "How"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "much"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How much money?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How much money?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,How much money?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind shouts, ,,WE GET FIFTY GOLD!\u0027\u0027",
      "wordCount": 6,
      "order": 50,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind shouts, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, shouts-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "shouts"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,WE GET FIFTY GOLD!\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "WE GET FIFTY GOLD!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "WE",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "GET",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "FIFTY",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "GOLD",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, GET-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "GET"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(GET-2, WE-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "WE",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "WE"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "GET"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(GET-2, GOLD-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "GOLD"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "GET"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(GET-2, !-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "GET"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(GOLD-4, FIFTY-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fifty",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "FIFTY"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "GOLD"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "GET"
                },
                "s_node_3_node": {
                  "NNP": "GOLD"
                },
                "s_node_2_node": {
                  "NNP": "FIFTY"
                },
                "s_node_0_node": {
                  "NNP": "WE"
                },
                "s_node_4_node": {
                  "PERIOD": "!"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,WE GET FIFTY GOLD!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,WE GET FIFTY GOLD!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,WE GET FIFTY GOLD!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,We sleep here with elves. They like Fey.\u0027\u0027",
      "wordCount": 10,
      "order": 51,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,We sleep here with elves.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "We sleep here with elves.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "sleep",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "here",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "elves",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sleep-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "sleep"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sleep-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sleep-2, here-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "here",
                  "ner": "O",
                  "tag": "RB",
                  "word": "here"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(sleep-2, elves-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "elves"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sleep-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "sleep",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "sleep"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(elves-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "elves"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNS": "elves"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "RB": "here"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "sleep"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "elves."
                ]
              }
            },
            "sentence": ",,We sleep here with elves."
          },
          "jazzyState": {
            "text": ",,We sleep here with elves.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,We sleep here with elves.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They like Fey.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They like Fey.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "like",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Fey",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, like-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "like"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(like-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "like"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(like-2, Fey-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Fey",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Fey"
                },
                "gov": {
                  "index": "2",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "like"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(like-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "like"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Fey"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "like"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Fey.\u0027\u0027"
                ]
              }
            },
            "sentence": "They like Fey.\u0027\u0027"
          },
          "jazzyState": {
            "text": "They like Fey.\u0027\u0027",
            "misspelledWords": {
              "Fey": [
                "fee",
                "few",
                "key",
                "hey",
                "fed",
                "fry",
                "fen",
                "fly"
              ]
            }
          },
          "dialogState": {
            "sentence": "They like Fey.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind swallows potatoes, licks lips, says and points to chest, ,,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027",
      "wordCount": 18,
      "order": 52,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind swallows potatoes, licks lips, says and points to chest, DIALOG_OBJECT_1",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind swallows potatoes, licks lips, says and points to chest, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "swallows",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "potatoes",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "licks",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lips",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "points",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "chest",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, swallows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "swallows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(swallows-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "swallows"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(swallows-2, says-8)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "swallows"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(swallows-2, points-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "points"
                },
                "gov": {
                  "index": "2",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "swallows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(potatoes-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "potato",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "potatoes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(potatoes-3, lips-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "lip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lips"
                },
                "gov": {
                  "index": "3",
                  "lemma": "potato",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "potatoes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(potatoes-3, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "potato",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "potatoes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(lips-6, licks-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "lick",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "licks"
                },
                "gov": {
                  "index": "6",
                  "lemma": "lip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lips"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-8, potatoes-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "potato",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "potatoes"
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-8, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(says-8, points-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "points"
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(says-8, chest-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "12",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(points-10, potatoes-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "potato",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "potatoes"
                },
                "gov": {
                  "index": "10",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "points"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(chest-12, to-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "12",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(chest-12, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "12",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(chest-12, DIALOG_OBJECT_1-14)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "14",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "12",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_2_node": {
                  "NNS": "potatoes"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "NN": "chest"
                },
                "s_node_1_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "swallows"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "points"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_node_1_node": {
                  "NNS": "lips"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_0_node": {
                  "JJ": "Rind"
                },
                "s_node_0_node_2_node_0_node": {
                  "JJ": "licks"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind swallows potatoes, licks lips, says and points to chest, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind swallows potatoes, licks lips, says and points to chest, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind of Crack Mountain Clan of Lord Kolosh.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Crack",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mountain",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Clan",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Rind-1, Clan-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Rind-1, Kolosh-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Clan-5, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-5, Crack-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Crack",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Crack"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-5, Mountain-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Mountain",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mountain"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kolosh-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-8, Lord-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Crack"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_2_node": {
                  "NNP": "Clan"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Kolosh"
                },
                "s_node_0_node_1_node_1_node_0_node_1_node": {
                  "NNP": "Mountain"
                },
                "s_node_0_node_0_node": {
                  "VBN": "Rind"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Kolosh.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind of Crack Mountain Clan of Lord Kolosh.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind wants to go to Kelten. Mom wants Rind to earn way. Kelten is the way. Brom says, Brom says we go. To trust him and earn hood only in Kelten. We go. In Penalbre, twenty gold spent. No gold earned by hand. All acting, and acting a joke.\u0027\u0027",
      "wordCount": 51,
      "order": 53,
      "sentenceCount": 9,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind wants to go to Kelten.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind wants to go to Kelten.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "wants",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "go",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kelten",
                "net": "LOCATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wants-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wants-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(wants-2, go-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wants-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(go-4, to-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(go-4, Kelten-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Kelten",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Kelten"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kelten-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Kelten",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Kelten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VB": "go"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "wants"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Kelten"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Kelten."
                ]
              }
            },
            "sentence": ",,Rind wants to go to Kelten."
          },
          "jazzyState": {
            "text": ",,Rind wants to go to Kelten.",
            "misspelledWords": {
              "Kelten": [
                "gelatin"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind wants to go to Kelten.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Mom wants Rind to earn way.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Mom wants Rind to earn way.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Mom",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "wants",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "LOCATION"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "way",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wants-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wants-2, Mom-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Mom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wants-2, Rind-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Rind",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(wants-2, earn-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wants-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wants"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(earn-5, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(earn-5, way-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "earn"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node": {
                  "NN": "Mom"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "wants"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "way"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "way."
                ]
              }
            },
            "sentence": "Mom wants Rind to earn way."
          },
          "jazzyState": {
            "text": "Mom wants Rind to earn way.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Kelten is the way.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Kelten is the way.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Kelten",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "way",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, way-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(way-4, Kelten-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Kelten",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kelten"
                },
                "gov": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(way-4, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(way-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(way-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "way"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Kelten"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "way."
                ]
              }
            },
            "sentence": "Kelten is the way."
          },
          "jazzyState": {
            "text": "Kelten is the way.",
            "misspelledWords": {
              "Kelten": [
                "gelatin"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Brom says, Brom says we go.",
          "wordCount": 6,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Brom says, Brom says we go.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "go",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Brom-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(says-5, says-2)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-5, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-5, Brom-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(says-5, go-7)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "go"
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-5, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(go-7, we-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "7",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "go"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_1_node_0_node": {
                  "PRP": "we"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "Brom"
                },
                "s_node_0_node_1_node": {
                  "VBZ": "says"
                },
                "s_node_3_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_3_node_1_node_1_node": {
                  "VBP": "go"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Brom"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "go."
                ]
              }
            },
            "sentence": "Brom says, Brom says we go."
          },
          "jazzyState": {
            "text": "Brom says, Brom says we go.",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "To trust him and earn hood only in Kelten.",
          "wordCount": 9,
          "orderParagraph": 5,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "To trust him and earn hood only in Kelten.",
            "coreAnnotations": [
              {
                "pos": "TO",
                "text": "To",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "trust",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "him",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "earn",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hood",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "only",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kelten",
                "net": "LOCATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, trust-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(trust-2, To-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "To"
                },
                "gov": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(trust-2, him-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "he",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "him"
                },
                "gov": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(trust-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(trust-2, earn-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trust-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(earn-5, hood-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hood"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(earn-5, only-7)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "only",
                  "ner": "O",
                  "tag": "RB",
                  "word": "only"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(earn-5, Kelten-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Kelten",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Kelten"
                },
                "gov": {
                  "index": "5",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "earn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kelten-9, in-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Kelten",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Kelten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_0_node_0_node": {
                  "VB": "trust"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node_3_node_1_node": {
                  "NNP": "Kelten"
                },
                "s_node_0_node_1_node_2_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_1_node": {
                  "NN": "hood"
                },
                "s_node_0_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_node_1_node": {
                  "PRP": "him"
                },
                "s_node_0_node_1_node_2_node_2_node": {
                  "RB": "only"
                },
                "s_node_0_node_1_node_2_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_2_node_3_node_0_node": {
                  "IN": "in"
                },
                "s_node_0_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_0_node": {
                  "VB": "earn"
                },
                "s_node_0_node_0_node": {
                  "TO": "To"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Kelten."
                ]
              }
            },
            "sentence": "To trust him and earn hood only in Kelten."
          },
          "jazzyState": {
            "text": "To trust him and earn hood only in Kelten.",
            "misspelledWords": {
              "Kelten": [
                "gelatin"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "We go.",
          "wordCount": 2,
          "orderParagraph": 6,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "We go.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "go",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, go-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "go"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(go-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(go-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "go"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "go"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "go."
                ]
              }
            },
            "sentence": "We go."
          },
          "jazzyState": {
            "text": "We go.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "In Penalbre, twenty gold spent.",
          "wordCount": 5,
          "orderParagraph": 7,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "In Penalbre, twenty gold spent.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "In",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Penalbre",
                "net": "LOCATION"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "twenty",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "gold",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "spent",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spent-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spend",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spent"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Penalbre-2, In-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "In"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Penalbre",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Penalbre"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(gold-5, twenty-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "twenty",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "twenty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gold"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(spent-6, Penalbre-2)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Penalbre",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Penalbre"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spend",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spent-6, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "spend",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spent"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spent-6, gold-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gold"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spend",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spent-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "spend",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spent"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node": {
                  "VBD": "spent"
                },
                "s_node_2_node_1_node": {
                  "NN": "gold"
                },
                "s_node_2_node_0_node": {
                  "CD": "twenty"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Penalbre"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "In"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "spent."
                ]
              }
            },
            "sentence": "In Penalbre, twenty gold spent."
          },
          "jazzyState": {
            "text": "In Penalbre, twenty gold spent.",
            "misspelledWords": {
              "Penalbre": []
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No gold earned by hand.",
          "wordCount": 5,
          "orderParagraph": 8,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "No gold earned by hand.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "gold",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "earned",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, earned-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "earned"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(gold-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gold"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(earned-3, gold-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gold"
                },
                "gov": {
                  "index": "3",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "earned"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(earned-3, hand-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "3",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "earned"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(earned-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "earned"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-5, by-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "gold"
                },
                "s_node_1_node_0_node": {
                  "VBD": "earned"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hand."
                ]
              }
            },
            "sentence": "No gold earned by hand."
          },
          "jazzyState": {
            "text": "No gold earned by hand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "All acting, and acting a joke.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 9,
          "tense": [
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "All acting, and acting a joke.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "All",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "acting",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "acting",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "joke",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, acting-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(acting-2, All-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "All"
                },
                "gov": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(acting-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(acting-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(acting-2, acting-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                },
                "gov": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(acting-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(acting-5, All-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "All"
                },
                "gov": {
                  "index": "5",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(acting-5, joke-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "joke",
                  "ner": "O",
                  "tag": "NN",
                  "word": "joke"
                },
                "gov": {
                  "index": "5",
                  "lemma": "act",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "acting"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(joke-7, a-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "7",
                  "lemma": "joke",
                  "ner": "O",
                  "tag": "NN",
                  "word": "joke"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "VBG": "acting"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "joke"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "DT": "All"
                },
                "s_node_1_node_0_node": {
                  "VBG": "acting"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "joke.\u0027\u0027"
                ]
              }
            },
            "sentence": "All acting, and acting a joke.\u0027\u0027"
          },
          "jazzyState": {
            "text": "All acting, and acting a joke.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "All acting, and acting a joke.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind tremors and mutters, ,,Valarie elf find. Find Rind. Rind run. Brom. Mace.\u0027\u0027",
      "wordCount": 13,
      "order": 54,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind tremors and mutters, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind tremors and mutters, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "tremors",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mutters",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, tremors-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tremors-2, Rind-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(tremors-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(tremors-2, mutters-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mutter",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mutters"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tremors-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(tremors-2, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tremor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tremors"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "mutters"
                },
                "s_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "tremors"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind tremors and mutters, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind tremors and mutters, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Valarie elf find.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Valarie elf find.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Valarie",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "elf",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "find",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, find-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "find"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(elf-2, Valarie-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Valarie",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Valarie"
                },
                "gov": {
                  "index": "2",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "elf"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(find-3, elf-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "elf",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "elf"
                },
                "gov": {
                  "index": "3",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(find-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "find"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "find"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "elf"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Valarie"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "find."
                ]
              }
            },
            "sentence": ",,Valarie elf find."
          },
          "jazzyState": {
            "text": ",,Valarie elf find.",
            "misspelledWords": {
              "Valarie": [
                "flare"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Valarie elf find.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Find Rind.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Find Rind.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Find",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Find-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Find"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Find-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Find"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Find-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Find"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Find"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "Find Rind."
          },
          "jazzyState": {
            "text": "Find Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind run.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Rind run.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "run",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, run-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "run"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "run"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "run."
                ]
              }
            },
            "sentence": "Rind run."
          },
          "jazzyState": {
            "text": "Rind run.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Brom.",
          "wordCount": 1,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Brom.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Brom-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Brom"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Brom."
                ]
              }
            },
            "sentence": "Brom."
          },
          "jazzyState": {
            "text": "Brom.",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Mace.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "Mace.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mace",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Mace-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mace",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mace"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mace-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Mace",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mace"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Mace"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Mace.\u0027\u0027"
                ]
              }
            },
            "sentence": "Mace.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Mace.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Mace.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind mumbles, ,,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027",
      "wordCount": 8,
      "order": 55,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind mumbles, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mumbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(mumbles-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mumbles-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "mumbles"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind mumbles, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "One of Kolosh\u0027s Valarie Elf Scouts.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "One",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Valarie",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Elf",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "Scouts",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, One-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(One-1, Scouts-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "scout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Scouts"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kolosh-3, \u0027s-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Scouts-7, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "scout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Scouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(Scouts-7, Kolosh-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "7",
                  "lemma": "scout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Scouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Scouts-7, Valarie-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Valarie",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Valarie"
                },
                "gov": {
                  "index": "7",
                  "lemma": "scout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Scouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Scouts-7, Elf-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Elf",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Elf"
                },
                "gov": {
                  "index": "7",
                  "lemma": "scout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Scouts"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Valarie"
                },
                "s_node_1_node_1_node_3_node": {
                  "NNP": "Scouts"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Kolosh"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Elf"
                },
                "s_node_0_node": {
                  "CD": "One"
                },
                "s_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Scouts.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027",
            "misspelledWords": {
              "Kolosh\u0027s": [
                "clashes",
                "gulch\u0027s"
              ],
              "Valarie": [
                "flare"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,One of Kolosh\u0027s Valarie Elf Scouts.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Yes. Rind know.\u0027\u0027",
      "wordCount": 5,
      "order": 56,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Yes.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Yes.",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Yes-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Yes-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "Yes"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Yes."
                ]
              }
            },
            "sentence": ",,Yes."
          },
          "jazzyState": {
            "text": ",,Yes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Yes.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind know.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind know.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "know"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "know.\u0027\u0027"
                ]
              }
            },
            "sentence": "Rind know.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Rind know.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Rind know.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Lord Kolosh gives Rind mission!\u0027\u0027",
      "wordCount": 7,
      "order": 57,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Lord Kolosh gives Rind mission!\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Lord Kolosh gives Rind mission!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "gives",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mission",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, gives-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gives"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-2, Lord-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(gives-3, Kolosh-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gives"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "iobj(gives-3, Rind-4)",
                  "name": "indirect object",
                  "tag": "iobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gives"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(gives-3, mission-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gives"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(gives-3, !-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gives"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NN": "mission"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Kolosh"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "gives"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Lord Kolosh gives Rind mission!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Lord Kolosh gives Rind mission!\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Lord Kolosh gives Rind mission!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind stands and shouts, \u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027",
      "wordCount": 15,
      "order": 58,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind stands and shouts, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind stands and shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "stands",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stands-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(stands-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(stands-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(stands-2, shouts-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shouts"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stands-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(stands-2, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stands"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "shouts"
                },
                "s_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "stands"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind stands and shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind stands and shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "LORD",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "KOLOSH",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "GIVES",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "RIND",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "MISSION",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "GO",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "TO",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "KELTEN",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "TO",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "EARN",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "HOOD",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, GIVES-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "GIVES"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(KOLOSH-2, LORD-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "LORD",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "LORD"
                },
                "gov": {
                  "index": "2",
                  "lemma": "KOLOSH",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "KOLOSH"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(GIVES-3, KOLOSH-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "KOLOSH",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "KOLOSH"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "GIVES"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(GIVES-3, GO-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "GO",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "GO"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "GIVES"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(GIVES-3, KELTEN-8)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "KELTEN",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "KELTEN"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "GIVES"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(GIVES-3, !-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "3",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "GIVES"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(GO-6, RIND-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "RIND",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "RIND"
                },
                "gov": {
                  "index": "6",
                  "lemma": "GO",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "GO"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(GO-6, MISSION-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "MISSION",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "MISSION"
                },
                "gov": {
                  "index": "6",
                  "lemma": "GO",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "GO"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(KELTEN-8, TO-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                },
                "gov": {
                  "index": "8",
                  "lemma": "KELTEN",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "KELTEN"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(KELTEN-8, EARN-10)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "10",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "EARN"
                },
                "gov": {
                  "index": "8",
                  "lemma": "KELTEN",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "KELTEN"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(EARN-10, TO-9)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "9",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                },
                "gov": {
                  "index": "10",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "EARN"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(EARN-10, HOOD-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "hood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "HOOD"
                },
                "gov": {
                  "index": "10",
                  "lemma": "earn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "EARN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node_1_node": {
                  "NNP": "KOLOSH"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "KELTEN"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "TO"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NNP": "GO"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "HOOD"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "TO"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNP": "RIND"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "EARN"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "GIVES"
                },
                "s_node_0_node_0_node": {
                  "NNP": "LORD"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNP": "MISSION"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027LORD KOLOSH GIVES RIND MISSION GO TO KELTEN TO EARN HOOD!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says with mouth and neck muscles taut to control the says loud, ,,Rind gets a gift from Lord Kolosh!\u0027\u0027",
      "wordCount": 20,
      "order": 59,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says with mouth and neck muscles taut to control the says loud, DIALOG_OBJECT_1",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says with mouth and neck muscles taut to control the says loud, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mouth",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "neck",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "muscles",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "taut",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "control",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "loud",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(says-2, muscles-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(mouth-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(mouth-4, neck-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "neck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "neck"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(muscles-7, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(muscles-7, mouth-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(muscles-7, neck-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "neck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "neck"
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(muscles-7, taut-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "taut",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "taut"
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(muscles-7, ,-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(muscles-7, DIALOG_OBJECT_1-15)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "15",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "7",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(taut-8, control-10)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "control",
                  "ner": "O",
                  "tag": "VB",
                  "word": "control"
                },
                "gov": {
                  "index": "8",
                  "lemma": "taut",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "taut"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(control-10, to-9)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "9",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "10",
                  "lemma": "control",
                  "ner": "O",
                  "tag": "VB",
                  "word": "control"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(control-10, says-12)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "10",
                  "lemma": "control",
                  "ner": "O",
                  "tag": "VB",
                  "word": "control"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-12, the-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(says-12, loud-13)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "loud",
                  "ner": "O",
                  "tag": "RB",
                  "word": "loud"
                },
                "gov": {
                  "index": "12",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_3_node": {
                  "NNS": "muscles"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_0_node": {
                  "NN": "mouth"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_0_node": {
                  "JJ": "taut"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_0_node": {
                  "VB": "control"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_2_node": {
                  "NN": "neck"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "loud"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says with mouth and neck muscles taut to control the says loud, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says with mouth and neck muscles taut to control the says loud, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind gets a gift from Lord Kolosh!\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind gets a gift from Lord Kolosh!",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "gets",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "gift",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, gets-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(gets-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(gets-2, gift-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "gift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gift"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(gets-2, Kolosh-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(gets-2, !-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(gift-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gift"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kolosh-7, from-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-7, Lord-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Kolosh",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "gift"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Kolosh"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "gets"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Rind gets a gift from Lord Kolosh!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind gets a gift from Lord Kolosh!\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind gets a gift from Lord Kolosh!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says with toothy smile, ,,Rind gets a bottle of wine for all.\u0027\u0027",
      "wordCount": 13,
      "order": 60,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says with toothy smile, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says with toothy smile, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "toothy",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "smile",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(says-2, smile-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smile"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(smile-5, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(smile-5, toothy-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "toothy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "toothy"
                },
                "gov": {
                  "index": "5",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smile"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(smile-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(smile-5, DIALOG_OBJECT_1-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "5",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smile"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "JJ": "toothy"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "smile"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says with toothy smile, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says with toothy smile, DIALOG_OBJECT_1",
            "misspelledWords": {
              "toothy": [
                "tooth"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind gets a bottle of wine for all.\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind gets a bottle of wine for all.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "gets",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bottle",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wine",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "all",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, gets-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(gets-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(gets-2, bottle-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(gets-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "gets"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bottle-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(bottle-4, wine-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wine"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wine-6, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wine"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(wine-6, all-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "8",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "all"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(all-8, for-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "8",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "all"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "wine"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "DT": "all"
                },
                "s_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "gets"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "bottle"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "all.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Rind gets a bottle of wine for all.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind gets a bottle of wine for all.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind gets a bottle of wine for all.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, \u0027\u0027Rind want one bottle of wine.\u0027\u0027",
      "wordCount": 8,
      "order": 61,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rind want one bottle of wine.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind want one bottle of wine.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "want",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "bottle",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wine",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(want-2, bottle-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(bottle-4, one-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(bottle-4, wine-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wine"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wine-6, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wine"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "CD": "one"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wine"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBP": "want"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "bottle"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "wine.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Rind want one bottle of wine.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Rind want one bottle of wine.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rind want one bottle of wine.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, \u0027\u0027Talk with Brom.\u0027\u0027",
      "wordCount": 5,
      "order": 62,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Talk with Brom.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Talk with Brom.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Talk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Talk-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(Talk-1, Brom-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "3",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                },
                "gov": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Talk-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Brom-3, with-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "3",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Brom"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Talk"
                },
                "s_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Brom.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Talk with Brom.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Talk with Brom.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Talk with Brom.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind pushes on wood door and says, ,,Brom and Rind\u0027s room.\u0027\u0027",
      "wordCount": 11,
      "order": 63,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind pushes on wood door and says, DIALOG_OBJECT_1",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind pushes on wood door and says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wood",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, pushes-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, says-7)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(pushes-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pushes-2, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pushes-2, says-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-5, wood-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wood"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_0_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_node_0_node": {
                  "NN": "wood"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind pushes on wood door and says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind pushes on wood door and says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Brom and Rind\u0027s room.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Brom and Rind\u0027s room.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "room",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Brom-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Brom-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Brom-1, room-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "room",
                  "ner": "O",
                  "tag": "NN",
                  "word": "room"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Brom-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Brom",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-3, \u0027s-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(room-5, Rind-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "room",
                  "ner": "O",
                  "tag": "NN",
                  "word": "room"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_1_node": {
                  "NN": "room"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Brom"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "room.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Brom and Rind\u0027s room.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Brom and Rind\u0027s room.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Brom and Rind\u0027s room.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind hangs head and says, ,,Rind half-orc. And name is Rind.\u0027\u0027",
      "wordCount": 11,
      "order": 64,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind hangs head and says, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind hangs head and says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hangs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, hangs-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(Rind-1, says-5)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hangs-2, head-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(hangs-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(hangs-2, says-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "NN": "head"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "hangs"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind hangs head and says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind hangs head and says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind half-orc.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind half-orc.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "half-orc",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, half-orc-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "half-orc",
                  "ner": "O",
                  "tag": "NN",
                  "word": "half-orc"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "JJ": "half-orc"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "half-orc."
                ]
              }
            },
            "sentence": ",,Rind half-orc."
          },
          "jazzyState": {
            "text": ",,Rind half-orc.",
            "misspelledWords": {
              "orc": [
                "arc",
                "or",
                "orb",
                "ore"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind half-orc.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "And name is Rind.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "And name is Rind.",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "name",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Rind-4, And-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Rind-4, name-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "name",
                  "ner": "O",
                  "tag": "NN",
                  "word": "name"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Rind-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node": {
                  "NN": "name"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "JJ": "Rind"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Rind.\u0027\u0027"
                ]
              }
            },
            "sentence": "And name is Rind.\u0027\u0027"
          },
          "jazzyState": {
            "text": "And name is Rind.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "And name is Rind.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, ,,It\u0027s as big as mom\u0027s soddy.\u0027\u0027",
      "wordCount": 37,
      "order": 65,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, DIALOG_OBJECT_1",
          "wordCount": 31,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple",
            "PresentParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "row",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "spears",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "sticking",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Duke",
                "net": "ORGANIZATION"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Road",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "rotting",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lizardmen",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "heads",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "bigger",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "than",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "an",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "orc",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "points",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wood",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shack",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, looks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(looks-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(looks-2, row-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(row-5, ,-34)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "34",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(row-5, along-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(row-5, DIALOG_OBJECT_1-35)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "35",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(row-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(row-5, spears-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "spear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spears"
                },
                "gov": {
                  "index": "5",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(spears-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "spear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spears"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(spears-8, long-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                },
                "gov": {
                  "index": "8",
                  "lemma": "spear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spears"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(spears-8, sticking-9)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "9",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "sticking"
                },
                "gov": {
                  "index": "8",
                  "lemma": "spear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spears"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(sticking-9, rotting-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                },
                "gov": {
                  "index": "9",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "sticking"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(sticking-9, side-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "11",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "9",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "sticking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(side-11, and-16)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "16",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(side-11, rotting-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                },
                "gov": {
                  "index": "11",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(side-11, from-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "11",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(side-11, Road-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "15",
                  "lemma": "Road",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Road"
                },
                "gov": {
                  "index": "11",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Duke-13, \u0027s-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Duke",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Duke"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Road-15, of-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "15",
                  "lemma": "Road",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Road"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(Road-15, Duke-13)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Duke",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Duke"
                },
                "gov": {
                  "index": "15",
                  "lemma": "Road",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Road"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(rotting-18, ,-32)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "32",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(rotting-18, into-17)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "17",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "string": "dep(rotting-18, says-33)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "33",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(rotting-18, bigger-21)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "21",
                  "lemma": "bigger",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "bigger"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(rotting-18, head-25)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(rotting-18, points-27)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "27",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(rotting-18, shack-31)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "31",
                  "lemma": "shack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shack"
                },
                "gov": {
                  "index": "18",
                  "lemma": "rot",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "rotting"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(heads-20, lizardmen-19)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "19",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lizardmen"
                },
                "gov": {
                  "index": "20",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(bigger-21, heads-20)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "20",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                },
                "gov": {
                  "index": "21",
                  "lemma": "bigger",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "bigger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(head-25, than-22)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "22",
                  "lemma": "than",
                  "ner": "O",
                  "tag": "IN",
                  "word": "than"
                },
                "gov": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(head-25, an-23)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "23",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "an"
                },
                "gov": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(head-25, orc-24)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "24",
                  "lemma": "orc",
                  "ner": "O",
                  "tag": "NN",
                  "word": "orc"
                },
                "gov": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(head-25, and-26)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "26",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(head-25, points-27)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "27",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                },
                "gov": {
                  "index": "25",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(shack-31, at-28)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "28",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "31",
                  "lemma": "shack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(shack-31, the-29)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "29",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "31",
                  "lemma": "shack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shack-31, wood-30)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "30",
                  "lemma": "wood",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wood"
                },
                "gov": {
                  "index": "31",
                  "lemma": "shack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shack"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node_1_node": {
                  "NN": "wood"
                },
                "s_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "orc"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Road"
                },
                "s_node_0_node_2_node_0_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "NN": "head"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "JJR": "bigger"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "looks"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_0_node_1_node": {
                  "NN": "row"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "side"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Duke"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_2_node_1_node_0_node": {
                  "VBG": "rotting"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_0_node_0_node": {
                  "JJ": "long"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "sticking"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_2_node_1_node_1_node": {
                  "NN": "lizardmen"
                },
                "s_node_0_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "heads"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNS": "spears"
                },
                "s_node_0_node_0_node": {
                  "VBN": "Rind"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "than"
                },
                "s_node_0_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node_2_node": {
                  "NN": "shack"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "an"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node": {
                  "NNS": "points"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_node_0_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind looks along the row of long spears sticking from side of Duke\u0027s Road and into rotting lizardmen heads bigger than an orc head and points at the wood shack, says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "orc": [
                "arc",
                "or",
                "orb",
                "ore"
              ],
              "rotting": [
                "rooting",
                "routing",
                "rotating",
                "jotting",
                "potting",
                "dotting"
              ],
              "lizardmen": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,It\u0027s as big as mom\u0027s soddy.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "It\u0027s as big as mom\u0027s soddy.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mom",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "soddy",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, big-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(big-4, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(big-4, \u0027s-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(big-4, as-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "RB",
                  "word": "as"
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(big-4, soddy-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "8",
                  "lemma": "soddy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "soddy"
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(big-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mom-6, \u0027s-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(soddy-8, as-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "8",
                  "lemma": "soddy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "soddy"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(soddy-8, mom-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "8",
                  "lemma": "soddy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "soddy"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "soddy"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "JJ": "big"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_0_node": {
                  "NN": "mom"
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_1_node_1_node_0_node": {
                  "RB": "as"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "soddy.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,It\u0027s as big as mom\u0027s soddy.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,It\u0027s as big as mom\u0027s soddy.\u0027\u0027",
            "misspelledWords": {
              "soddy": [
                "sod"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,It\u0027s as big as mom\u0027s soddy.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind radiates Fey Mirth says, \u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027",
      "wordCount": 11,
      "order": 66,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind radiates Fey Mirth says, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind radiates Fey Mirth says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "radiates",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Fey",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mirth",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, radiates-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(radiates-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "parataxis(radiates-2, says-5)",
                  "name": "parataxis",
                  "tag": "parataxis"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(radiates-2, DIALOG_OBJECT_1-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Mirth-4, Fey-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Fey",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Fey"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Mirth",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mirth"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-5, Mirth-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Mirth",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mirth"
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Fey"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "radiates"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNP": "Mirth"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind radiates Fey Mirth says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind radiates Fey Mirth says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Fey": [
                "fee",
                "few",
                "key",
                "hey",
                "fed",
                "fry",
                "fen",
                "fly"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind of the Crack Mountain Clan.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Crack",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mountain",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Clan",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Rind-1, Clan-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Clan-6, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Clan-6, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-6, Crack-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Crack",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Crack"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-6, Mountain-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Mountain",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mountain"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NNP": "Mountain"
                },
                "s_node_0_node_1_node_1_node_3_node": {
                  "NNP": "Clan"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNP": "Crack"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VBN": "Rind"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Clan.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rind of the Crack Mountain Clan.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,How big?\u0027\u0027 as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind.",
      "wordCount": 16,
      "order": 67,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How big?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "How big?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, big-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(big-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(big-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node_1_node": {
                  "JJ": "big"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How big?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How big?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,How big?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind.",
          "wordCount": 12,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "breast-plated",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sentry",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "breast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "plate",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "straps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "LOCATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pulls-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sentry-4, as-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sentry-4, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(sentry-4, breast-plated-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "breast-plated",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "breast-plated"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(pulls-5, sentry-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-5, straps-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "straps"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-5, steps-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pulls-5, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(plate-7, breast-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "breast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "breast"
                },
                "gov": {
                  "index": "7",
                  "lemma": "plate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "plate"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(plate-7, \u0027s-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "7",
                  "lemma": "plate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "plate"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(straps-9, plate-7)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "7",
                  "lemma": "plate",
                  "ner": "O",
                  "tag": "NN",
                  "word": "plate"
                },
                "gov": {
                  "index": "9",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "straps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(straps-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "straps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(straps-9, steps-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "9",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "straps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(straps-9, Rind-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Rind",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "9",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "straps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-13, behind-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Rind",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "sentry"
                },
                "s_node_1_node_1_node_0_node_0_node_0_node": {
                  "NN": "breast"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "behind"
                },
                "s_node_1_node_1_node_0_node_3_node": {
                  "NNS": "steps"
                },
                "s_node_0_node_2_node": {
                  "JJ": "breast-plated"
                },
                "s_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_0_node_1_node": {
                  "NN": "plate"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_0_node_0_node": {
                  "RB": "as"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "straps"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind."
          },
          "jazzyState": {
            "text": "as the breast-plated sentry pulls breast plate\u0027s straps and steps behind Rind.",
            "misspelledWords": {
              "plate\u0027s": [
                "palate\u0027s",
                "plates",
                "platen\u0027s",
                "platens",
                "platers",
                "plane\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Are they along road?\u0027\u0027 as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard.",
      "wordCount": 21,
      "order": 68,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Are they along road?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Are they along road?",
            "coreAnnotations": [
              {
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "road",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Are-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Are-1, they-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(Are-1, road-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "4",
                  "lemma": "road",
                  "ner": "O",
                  "tag": "NN",
                  "word": "road"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Are-1, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(road-4, along-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "4",
                  "lemma": "road",
                  "ner": "O",
                  "tag": "NN",
                  "word": "road"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "they"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "NN": "road"
                },
                "s_node_2_node_0_node": {
                  "IN": "along"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "VBP": "Are"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Are they along road?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Are they along road?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Are they along road?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard.",
          "wordCount": 15,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "breast-plated",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sentry",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lays",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hands",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sword",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hilt",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "rubs",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "jaw",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "beard",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lays-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sentry-4, as-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sentry-4, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(sentry-4, breast-plated-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "breast-plated",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "breast-plated"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lays-5, beard-17)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "17",
                  "lemma": "beard",
                  "ner": "O",
                  "tag": "NN",
                  "word": "beard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lays-5, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(lays-5, sentry-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sentry"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lays-5, hands-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(lays-5, hilt-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "11",
                  "lemma": "hilt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hilt"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lays-5, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lays-5, rubs-13)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "13",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(sword-9, long-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sword",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sword"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sword-9, \u0027s-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sword",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sword"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hilt-11, on-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "11",
                  "lemma": "hilt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hilt"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(hilt-11, sword-9)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "9",
                  "lemma": "sword",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sword"
                },
                "gov": {
                  "index": "11",
                  "lemma": "hilt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hilt"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rubs-13, beard-17)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "17",
                  "lemma": "beard",
                  "ner": "O",
                  "tag": "NN",
                  "word": "beard"
                },
                "gov": {
                  "index": "13",
                  "lemma": "rub",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rubs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(jaw-15, \u0027s-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "15",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(jaw-15, big-14)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "15",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(beard-17, jaw-15)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "15",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                },
                "gov": {
                  "index": "17",
                  "lemma": "beard",
                  "ner": "O",
                  "tag": "NN",
                  "word": "beard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_2_node": {
                  "NN": "sentry"
                },
                "s_node_1_node_2_node_1_node_3_node": {
                  "NNS": "rubs"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "sword"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "jaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "hilt"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lays"
                },
                "s_node_2_node_0_node_0_node": {
                  "JJ": "big"
                },
                "s_node_0_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node": {
                  "NN": "beard"
                },
                "s_node_1_node_1_node": {
                  "NNS": "hands"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node": {
                  "JJ": "breast-plated"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "JJ": "long"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "beard."
                ]
              }
            },
            "sentence": "as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard."
          },
          "jazzyState": {
            "text": "as the breast-plated sentry lays hands on long sword\u0027s hilt and rubs big jaw\u0027s beard.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,How fast can lizardman run?\u0027\u0027 says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack.",
      "wordCount": 22,
      "order": 69,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,How fast can lizardman run?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How fast can lizardman run?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "fast",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "can",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "lizardman",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "run",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lizardman-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lizardman"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(fast-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fast",
                  "ner": "O",
                  "tag": "RB",
                  "word": "fast"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(lizardman-4, fast-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fast",
                  "ner": "O",
                  "tag": "RB",
                  "word": "fast"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lizardman"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(lizardman-4, can-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "can"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lizardman"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(lizardman-4, run-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VB",
                  "word": "run"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lizardman"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lizardman-4, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lizardman"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "run"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "NN": "lizardman"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "JJ": "fast"
                },
                "s_node_1_node_0_node": {
                  "MD": "can"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How fast can lizardman run?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How fast can lizardman run?\u0027\u0027",
            "misspelledWords": {
              "lizardman": []
            }
          },
          "dialogState": {
            "sentence": ",,How fast can lizardman run?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack.",
          "wordCount": 17,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hands",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hang",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hips",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mace",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hangs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "backpack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hang-9)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(Rind-2, hands-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-4, \u0027-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hands-8, as-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(hands-8, Rind-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hands-8, big-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hands-8, green-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "csubj(hang-9, says-1)",
                  "name": "clausal subject",
                  "tag": "csubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(hang-9, hangs-17)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "17",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                },
                "gov": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hang-9, .-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(hang-9, hips-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "12",
                  "lemma": "hip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hips"
                },
                "gov": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(hang-9, and-13)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "13",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hips-12, by-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hips-12, big-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-14, \u0027s-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(mace-16, Rind-14)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "16",
                  "lemma": "mace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mace"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hangs-17, mace-16)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "mace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mace"
                },
                "gov": {
                  "index": "17",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(hangs-17, backpack-19)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "19",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                },
                "gov": {
                  "index": "17",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hangs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(backpack-19, from-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "19",
                  "lemma": "backpack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "backpack"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "mace"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_0_node_0_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_2_node_0_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_2_node": {
                  "JJ": "green"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBP": "hang"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBZ": "hangs"
                },
                "s_node_0_node_0_node_1_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_3_node": {
                  "NNS": "hands"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "JJ": "big"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NN": "backpack"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_1_node": {
                  "JJ": "big"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "NNS": "hips"
                },
                "s_node_0_node_0_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "backpack."
                ]
              }
            },
            "sentence": "says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack."
          },
          "jazzyState": {
            "text": "says Rind as Rind\u0027 big green hands hang by big hips and Rind\u0027s mace hangs from backpack.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind mumbles, ,,Elf shoot Rind?\u0027\u0027",
      "wordCount": 5,
      "order": 70,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind mumbles, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mumbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(mumbles-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(mumbles-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "mumbles"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind mumbles, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind mumbles, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Elf shoot Rind?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Elf shoot Rind?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Elf",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shoot",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shoot-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoot"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shoot-2, Elf-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Elf",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Elf"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(shoot-2, Rind-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoot-2, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoot"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "NNP": "Elf"
                },
                "s_node_1_node_0_node": {
                  "VBP": "shoot"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Elf shoot Rind?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Elf shoot Rind?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Elf shoot Rind?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,What if lizardmen kill Rind?\u0027\u0027 says Rind as the giant vulture flies away.",
      "wordCount": 13,
      "order": 71,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,What if lizardmen kill Rind?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What if lizardmen kill Rind?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "if",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lizardmen",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, kill-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(kill-4, What-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(kill-4, if-2)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "2",
                  "lemma": "if",
                  "ner": "O",
                  "tag": "IN",
                  "word": "if"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(kill-4, lizardmen-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "lizardman",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lizardmen"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-4, Rind-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(kill-4, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node": {
                  "WDT": "What"
                },
                "s_node_1_node_0_node": {
                  "IN": "if"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "lizardmen"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBP": "kill"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What if lizardmen kill Rind?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What if lizardmen kill Rind?\u0027\u0027",
            "misspelledWords": {
              "lizardmen": []
            }
          },
          "dialogState": {
            "sentence": ",,What if lizardmen kill Rind?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "says Rind as the giant vulture flies away.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "says Rind as the giant vulture flies away.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "giant",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "vulture",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flies",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flies-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "fly",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flies"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Rind-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(Rind-2, vulture-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "6",
                  "lemma": "vulture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "vulture"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(vulture-6, as-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "ner": "O",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "6",
                  "lemma": "vulture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "vulture"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(vulture-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "vulture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "vulture"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(vulture-6, giant-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "giant",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "giant"
                },
                "gov": {
                  "index": "6",
                  "lemma": "vulture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "vulture"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "csubj(flies-7, says-1)",
                  "name": "clausal subject",
                  "tag": "csubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "7",
                  "lemma": "fly",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flies"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(flies-7, away-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "7",
                  "lemma": "fly",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flies"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flies-7, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "fly",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flies"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "away"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node": {
                  "NN": "vulture"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flies"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "JJ": "giant"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_0_node_1_node_0_node": {
                  "NNP": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "away."
                ]
              }
            },
            "sentence": "says Rind as the giant vulture flies away."
          },
          "jazzyState": {
            "text": "says Rind as the giant vulture flies away.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Rind trust Lord Kolosh more than Rind,\u0027\u0027 and walks after Lalious snagging shrubs and branches.",
      "wordCount": 17,
      "order": 72,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1, and walks after Lalious snagging shrubs and branches.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1, and walks after Lalious snagging shrubs and branches.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "walks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "after",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Lalious",
                "net": "MISC"
              },
              {
                "pos": "VBG",
                "text": "snagging",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shrubs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "branches",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "string": "dep(says-2, DIALOG_OBJECT_1-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-2, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(says-2, walks-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-4, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walks-7, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:after(walks-7, shrubs-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:after"
                },
                "dep": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:after(walks-7, branches-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:after"
                },
                "dep": {
                  "index": "13",
                  "lemma": "branch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "branches"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(shrubs-11, after-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "after",
                  "ner": "O",
                  "tag": "IN",
                  "word": "after"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shrubs-11, Lalious-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "lalious",
                  "ner": "MISC",
                  "tag": "JJ",
                  "word": "Lalious"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shrubs-11, snagging-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "snag",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "snagging"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shrubs-11, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(shrubs-11, branches-13)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "13",
                  "lemma": "branch",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "branches"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shrub",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shrubs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_5_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_5_node_2_node_0_node": {
                  "VBG": "snagging"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_4_node": {
                  "CC": "and"
                },
                "s_node_1_node_5_node_0_node": {
                  "VBZ": "walks"
                },
                "s_node_1_node_5_node_1_node_0_node": {
                  "IN": "after"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_5_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_5_node_2_node_1_node_0_node": {
                  "NNS": "shrubs"
                },
                "s_node_1_node_5_node_1_node_1_node": {
                  "NNP": "Lalious"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_5_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_5_node_2_node_1_node_2_node": {
                  "NNS": "branches"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_5_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_5_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_5_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "branches."
                ]
              }
            },
            "sentence": "Rind says, DIALOG_OBJECT_1, and walks after Lalious snagging shrubs and branches."
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1, and walks after Lalious snagging shrubs and branches.",
            "misspelledWords": {
              "Lalious": [
                "lilies"
              ],
              "snagging": [
                "singing"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind trust Lord Kolosh more than Rind,\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind trust Lord Kolosh more than Rind,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trust",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": "JJR",
                "text": "more",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "than",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Kolosh-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-4, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-4, trust-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "trust",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trust"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Kolosh-4, Lord-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "string": "dep(Kolosh-4, more-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "more"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(more-5, Rind-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "more"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Rind-7, than-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "than",
                  "ner": "O",
                  "tag": "IN",
                  "word": "than"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-7, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_3_node": {
                  "NNP": "Kolosh"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Lord"
                },
                "s_node_1_node_1_node": {
                  "IN": "than"
                },
                "s_node_2_node": {
                  "VBD": "Rind"
                },
                "s_node_0_node_1_node": {
                  "NN": "trust"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "RBR": "more"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Rind trust Lord Kolosh more than Rind,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Rind trust Lord Kolosh more than Rind,\u0027\u0027",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind trust Lord Kolosh more than Rind,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Rind. \u0027\u0027Rind. Rind, talk. We talk Kolosh. Talk Lord Oterces and mom.\u0027\u0027",
      "wordCount": 14,
      "order": 73,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Rind.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Rind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Rind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rind.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Rind.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBN": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u0027\u0027Rind."
                ]
              }
            },
            "sentence": "\u0027\u0027Rind."
          },
          "jazzyState": {
            "text": "\u0027\u0027Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rind.",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind, talk.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Rind, talk.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "talk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, talk-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "talk"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "VB": "talk"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "talk."
                ]
              }
            },
            "sentence": "Rind, talk."
          },
          "jazzyState": {
            "text": "Rind, talk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "We talk Kolosh.",
          "wordCount": 3,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "We talk Kolosh.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "talk",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kolosh",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, talk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "talk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(talk-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(talk-2, Kolosh-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Kolosh",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kolosh"
                },
                "gov": {
                  "index": "2",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(talk-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "talk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Kolosh"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "talk"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Kolosh."
                ]
              }
            },
            "sentence": "We talk Kolosh."
          },
          "jazzyState": {
            "text": "We talk Kolosh.",
            "misspelledWords": {
              "Kolosh": [
                "clash"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Talk Lord Oterces and mom.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "Talk Lord Oterces and mom.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Talk",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Lord",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Oterces",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mom",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Talk-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Talk-1, Oterces-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Oterces",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Oterces"
                },
                "gov": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                }
              },
              {
                "reln": {
                  "string": "dep(Talk-1, mom-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Talk-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Oterces-3, Lord-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Lord",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Lord"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Oterces",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Oterces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Oterces-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Oterces",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Oterces"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Oterces-3, mom-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Oterces",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Oterces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_0_node_1_node": {
                  "NNP": "Oterces"
                },
                "s_node_1_node_2_node": {
                  "NN": "mom"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "NNP": "Lord"
                },
                "s_node_0_node": {
                  "NN": "Talk"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "mom.\u0027\u0027"
                ]
              }
            },
            "sentence": "Talk Lord Oterces and mom.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Talk Lord Oterces and mom.\u0027\u0027",
            "misspelledWords": {
              "Oterces": [
                "waitresses"
              ]
            }
          },
          "dialogState": {
            "sentence": "Talk Lord Oterces and mom.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, \u0027\u0027Lalious hold weapons. We eat with people.\u0027\u0027",
      "wordCount": 9,
      "order": 74,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Lalious hold weapons.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Lalious hold weapons.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Lalious",
                "net": "MISC"
              },
              {
                "pos": "NN",
                "text": "hold",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "weapons",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hold-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hold-2, Lalious-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "lalious",
                  "ner": "MISC",
                  "tag": "JJ",
                  "word": "Lalious"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              },
              {
                "reln": {
                  "string": "dep(hold-2, weapons-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "weapon",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "weapons"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hold-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "weapons"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Lalious"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hold"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "weapons."
                ]
              }
            },
            "sentence": "\u0027\u0027Lalious hold weapons."
          },
          "jazzyState": {
            "text": "\u0027\u0027Lalious hold weapons.",
            "misspelledWords": {
              "Lalious": [
                "lilies"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Lalious hold weapons.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "We eat with people.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "We eat with people.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "eat",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, eat-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "eat"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(eat-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(eat-2, people-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "4",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "2",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eat-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(people-4, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "4",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "people"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "eat"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "people.\u0027\u0027"
                ]
              }
            },
            "sentence": "We eat with people.\u0027\u0027"
          },
          "jazzyState": {
            "text": "We eat with people.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "We eat with people.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind wipes mouth with sleeve and swallows, stumbles to say, ,,Rind going to Kelten. Rind performs play with Brom.\u0027\u0027",
      "wordCount": 19,
      "order": 75,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind wipes mouth with sleeve and swallows, stumbles to say, DIALOG_OBJECT_1",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind wipes mouth with sleeve and swallows, stumbles to say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "wipes",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mouth",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sleeve",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "swallows",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stumbles",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipes-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(wipes-2, DIALOG_OBJECT_1-13)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "13",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wipes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(mouth-3, sleeve-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sleeve",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleeve"
                },
                "gov": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(mouth-3, swallows-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swallows"
                },
                "gov": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mouth-3, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "string": "dep(mouth-3, stumbles-9)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "9",
                  "lemma": "stumble",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stumbles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mouth-3, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sleeve-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sleeve",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleeve"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sleeve-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sleeve",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleeve"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sleeve-5, swallows-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swallows"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sleeve",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sleeve"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(stumbles-9, say-11)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "11",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VB",
                  "word": "say"
                },
                "gov": {
                  "index": "9",
                  "lemma": "stumble",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(say-11, to-10)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "10",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VB",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(DIALOG_OBJECT_1-13, mouth-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                },
                "gov": {
                  "index": "13",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_4_node_0_node": {
                  "JJ": "stumbles"
                },
                "s_node_0_node_4_node_1_node_1_node": {
                  "VB": "say"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_4_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_4_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_5_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_2_node": {
                  "NNS": "swallows"
                },
                "s_node_1_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "mouth"
                },
                "s_node_0_node_4_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "NN": "sleeve"
                },
                "s_node_0_node_0_node": {
                  "VB": "Rind"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "wipes"
                },
                "s_node_0_node_4_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind wipes mouth with sleeve and swallows, stumbles to say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind wipes mouth with sleeve and swallows, stumbles to say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind going to Kelten.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Rind going to Kelten.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "going",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Kelten",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(Rind-1, going-2)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "going"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(going-2, Kelten-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Kelten",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kelten"
                },
                "gov": {
                  "index": "2",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Kelten-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Kelten",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Kelten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Kelten"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBG": "going"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Kelten."
                ]
              }
            },
            "sentence": ",,Rind going to Kelten."
          },
          "jazzyState": {
            "text": ",,Rind going to Kelten.",
            "misspelledWords": {
              "Kelten": [
                "gelatin"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Rind going to Kelten.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rind performs play with Brom.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind performs play with Brom.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "performs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "play",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, performs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "perform",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "performs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(performs-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "perform",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "performs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(performs-2, play-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "play",
                  "ner": "O",
                  "tag": "NN",
                  "word": "play"
                },
                "gov": {
                  "index": "2",
                  "lemma": "perform",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "performs"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(performs-2, Brom-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "perform",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "performs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(performs-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "perform",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "performs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Brom-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Brom"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "performs"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "play"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Brom.\u0027\u0027"
                ]
              }
            },
            "sentence": "Rind performs play with Brom.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Rind performs play with Brom.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ]
            }
          },
          "dialogState": {
            "sentence": "Rind performs play with Brom.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind shouts, ,,I WANT TO RUN.\u0027\u0027",
      "wordCount": 6,
      "order": 76,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind shouts, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, shouts-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "shouts"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I WANT TO RUN.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I WANT TO RUN.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "WANT",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "TO",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "RUN",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, WANT-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "WANT"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(WANT-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "WANT"
                }
              },
              {
                "reln": {
                  "string": "dep(WANT-2, TO-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "WANT"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(WANT-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "WANT"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(TO-3, RUN-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "RUN",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "RUN"
                },
                "gov": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "TO"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VB": "RUN"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "WANT"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "TO"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "RUN.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I WANT TO RUN.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I WANT TO RUN.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I WANT TO RUN.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind slur-shouts, ,,I GIVE YOU COINS,\u0027\u0027",
      "wordCount": 6,
      "order": 77,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind slur-shouts, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind slur-shouts, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "slur-shouts",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slur-shouts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slur-shout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slur-shouts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slur-shouts-2, Rind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slur-shout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slur-shouts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slur-shouts-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "slur-shout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slur-shouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(slur-shouts-2, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slur-shout",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slur-shouts"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNS": "slur-shouts"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind slur-shouts, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind slur-shouts, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I GIVE YOU COINS,\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I GIVE YOU COINS,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "GIVE",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "YOU",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "COINS",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, GIVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "GIVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(GIVE-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "GIVE"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(GIVE-2, COINS-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "coin",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "COINS"
                },
                "gov": {
                  "index": "2",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "GIVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(GIVE-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "GIVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(COINS-4, YOU-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "YOU"
                },
                "gov": {
                  "index": "4",
                  "lemma": "coin",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "COINS"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBZ": "COINS"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "GIVE"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "YOU"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,I GIVE YOU COINS,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I GIVE YOU COINS,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I GIVE YOU COINS,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind smiles, looks-up, says, ,,Rind, I, thanks you. Good day.\u0027\u0027",
      "wordCount": 10,
      "order": 78,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind smiles, looks-up, says, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind smiles, looks-up, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "smiles",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "looks-up",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, smiles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(smiles-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(smiles-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(smiles-2, looks-up-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "looks-up",
                  "ner": "O",
                  "tag": "NN",
                  "word": "looks-up"
                },
                "gov": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(looks-up-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "looks-up",
                  "ner": "O",
                  "tag": "NN",
                  "word": "looks-up"
                }
              },
              {
                "reln": {
                  "string": "dep(looks-up-4, says-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "4",
                  "lemma": "looks-up",
                  "ner": "O",
                  "tag": "NN",
                  "word": "looks-up"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(looks-up-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "looks-up",
                  "ner": "O",
                  "tag": "NN",
                  "word": "looks-up"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(looks-up-4, DIALOG_OBJECT_1-8)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "looks-up",
                  "ner": "O",
                  "tag": "NN",
                  "word": "looks-up"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_node_1_node": {
                  "NNP": "smiles"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_2_node": {
                  "NN": "looks-up"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind smiles, looks-up, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind smiles, looks-up, says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Rind, I, thanks you.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind, I, thanks you.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "thanks",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, I-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, thanks-5)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "5",
                  "lemma": "thanks",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "thanks"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "string": "dep(thanks-5, you-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "5",
                  "lemma": "thanks",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "thanks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node": {
                  "PRP": "you"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "thanks"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "you."
                ]
              }
            },
            "sentence": ",,Rind, I, thanks you."
          },
          "jazzyState": {
            "text": ",,Rind, I, thanks you.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind, I, thanks you.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Good day.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Good day.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Good",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "day",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, day-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "day",
                  "ner": "O",
                  "tag": "NN",
                  "word": "day"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(day-2, Good-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "good",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Good"
                },
                "gov": {
                  "index": "2",
                  "lemma": "day",
                  "ner": "O",
                  "tag": "NN",
                  "word": "day"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(day-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "day",
                  "ner": "O",
                  "tag": "NN",
                  "word": "day"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "day"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "Good"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "day.\u0027\u0027"
                ]
              }
            },
            "sentence": "Good day.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Good day.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Good day.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,PARENTS MEND CLOAKS,\u0027\u0027",
      "wordCount": 5,
      "order": 79,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,PARENTS MEND CLOAKS,\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "PARENTS MEND CLOAKS,",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "PARENTS",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "MEND",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "CLOAKS",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MEND-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "MEND"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MEND-2, PARENTS-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "PARENTS"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "MEND"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(MEND-2, CLOAKS-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "CLOAKS"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "MEND"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MEND-2, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mend",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "MEND"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "CLOAKS"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNP": "MEND"
                },
                "s_node_0_node_0_node": {
                  "NNP": "PARENTS"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,PARENTS MEND CLOAKS,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,PARENTS MEND CLOAKS,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,PARENTS MEND CLOAKS,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,What about the trail by the river?\u0027\u0027",
      "wordCount": 9,
      "order": 80,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,What about the trail by the river?\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "What about the trail by the river?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trail",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "river",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, What-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(What-1, trail-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "4",
                  "lemma": "trail",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trail"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(What-1, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(trail-4, about-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "about",
                  "ner": "O",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trail",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trail"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(trail-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trail",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trail"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(trail-4, river-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "7",
                  "lemma": "river",
                  "ner": "O",
                  "tag": "NN",
                  "word": "river"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trail",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trail"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(river-7, by-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "7",
                  "lemma": "river",
                  "ner": "O",
                  "tag": "NN",
                  "word": "river"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(river-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "river",
                  "ner": "O",
                  "tag": "NN",
                  "word": "river"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node": {
                  "WDT": "What"
                },
                "s_node_1_node_0_node": {
                  "IN": "about"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "river"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "trail"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What about the trail by the river?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What about the trail by the river?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,What about the trail by the river?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Rind. I. I don\u0027t know,\u0027\u0027 says Rind holding arms under cloak and looking at Tommy.",
      "wordCount": 15,
      "order": 81,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Rind.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Rind.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBN": "Rind"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Rind."
                ]
              }
            },
            "sentence": ",,Rind."
          },
          "jazzyState": {
            "text": ",,Rind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Rind.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "I."
                ]
              }
            },
            "sentence": "I."
          },
          "jazzyState": {
            "text": "I.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Rind holding arms under cloak and looking at Tommy.",
          "wordCount": 10,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Rind holding arms under cloak and looking at Tommy.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBG",
                "text": "holding",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "arms",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "under",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cloak",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "looking",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Tommy",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(says-3, holding-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(says-3, looking-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "looking"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holding-5, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holding-5, arms-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arms"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:under(holding-5, cloak-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:under"
                },
                "dep": {
                  "index": "8",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(holding-5, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(holding-5, looking-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "looking"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cloak-8, under-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "under",
                  "ner": "O",
                  "tag": "IN",
                  "word": "under"
                },
                "gov": {
                  "index": "8",
                  "lemma": "cloak",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cloak"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(looking-10, Rind-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "10",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "looking"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(looking-10, Tommy-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "12",
                  "lemma": "Tommy",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tommy"
                },
                "gov": {
                  "index": "10",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "looking"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Tommy-12, at-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "12",
                  "lemma": "Tommy",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Tommy"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_node_1_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node_1_node": {
                  "NN": "cloak"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Tommy"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node_0_node": {
                  "IN": "under"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "VBG": "holding"
                },
                "s_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "VBG": "looking"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNS": "arms"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Tommy."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Rind holding arms under cloak and looking at Tommy."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Rind holding arms under cloak and looking at Tommy.",
            "misspelledWords": {
              "Tommy": [
                "dummy",
                "tom"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I don\u0027t know,\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I don\u0027t know,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(know-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(know-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "know"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I don\u0027t know,\u0027\u0027"
          },
          "jazzyState": {
            "text": "I don\u0027t know,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "I don\u0027t know,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Only ten. Thought there more. Thought it a clan. Typhius will take us?\u0027\u0027",
      "wordCount": 15,
      "order": 82,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Only ten.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Only ten.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Only",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ten-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(ten-2, Only-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "only",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Only"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ten-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "CD": "ten"
                },
                "s_node_0_node_0_node": {
                  "RB": "Only"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ten."
                ]
              }
            },
            "sentence": ",,Only ten."
          },
          "jazzyState": {
            "text": ",,Only ten.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Only ten.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Thought there more.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Thought there more.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Thought",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "there",
                "net": "O"
              },
              {
                "pos": "RBR",
                "text": "more",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, more-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "RBR",
                  "word": "more"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(more-3, Thought-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Thought",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thought"
                },
                "gov": {
                  "index": "3",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "RBR",
                  "word": "more"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(more-3, there-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "RB",
                  "word": "there"
                },
                "gov": {
                  "index": "3",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "RBR",
                  "word": "more"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(more-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "RBR",
                  "word": "more"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "JJR": "more"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_node": {
                  "VB": "Thought"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_node_0_node": {
                  "EX": "there"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "more."
                ]
              }
            },
            "sentence": "Thought there more."
          },
          "jazzyState": {
            "text": "Thought there more.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Thought it a clan.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Thought it a clan.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Thought",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "clan",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Thought-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Thought",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thought"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Thought-1, it-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Thought",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thought"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Thought-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Thought",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thought"
                }
              },
              {
                "reln": {
                  "string": "dep(it-2, clan-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "clan",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clan"
                },
                "gov": {
                  "index": "2",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(clan-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "clan",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clan"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "clan"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_node": {
                  "VB": "Thought"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "PRP": "it"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "clan."
                ]
              }
            },
            "sentence": "Thought it a clan."
          },
          "jazzyState": {
            "text": "Thought it a clan.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Typhius will take us?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 4,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Typhius will take us?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Typhius",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "take",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "us",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, take-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VB",
                  "word": "take"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(take-3, Typhius-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Typhius",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Typhius"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VB",
                  "word": "take"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(take-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VB",
                  "word": "take"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(take-3, us-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "us"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VB",
                  "word": "take"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(take-3, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VB",
                  "word": "take"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "PRP": "us"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "NNS": "Typhius"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "take"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Typhius will take us?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Typhius will take us?\u0027\u0027",
            "misspelledWords": {
              "Typhius": [
                "types",
                "typos"
              ]
            }
          },
          "dialogState": {
            "sentence": "Typhius will take us?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,We got three-\u0027\u0027",
      "wordCount": 5,
      "order": 83,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,We got three-\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "We got three-",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "got",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": ":",
                "text": "-",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, got-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "got"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(got-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(got-2, three-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(got-2, --4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "-",
                  "ner": "O",
                  "tag": ":",
                  "word": "-"
                },
                "gov": {
                  "index": "2",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "got"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CD": "three"
                },
                "s_node_2_node": {
                  "COLON": "-"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBD": "got"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,We got three-\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,We got three-\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,We got three-\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind whips head about, says, ,,If you fight bear, kill bear, would you eat bear?\u0027\u0027",
      "wordCount": 15,
      "order": 84,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind whips head about, says, DIALOG_OBJECT_1",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind whips head about, says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "whips",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, whips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(whips-2, Rind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(whips-2, head-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(whips-2, DIALOG_OBJECT_1-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-6, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(DIALOG_OBJECT_1-8, about-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "about",
                  "ner": "O",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "string": "dep(DIALOG_OBJECT_1-8, says-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "NN": "head"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "whips"
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "IN": "about"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind whips head about, says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind whips head about, says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,If you fight bear, kill bear, would you eat bear?\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "If you fight bear, kill bear, would you eat bear?",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "If",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "fight",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bear",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bear",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "would",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "eat",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bear",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, eat-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(fight-3, If-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "if",
                  "ner": "O",
                  "tag": "IN",
                  "word": "If"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fight-3, you-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(fight-3, bear-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bear"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fight-3, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                }
              },
              {
                "reln": {
                  "string": "dep(fight-3, kill-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-6, bear-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bear"
                },
                "gov": {
                  "index": "6",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(eat-11, fight-3)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fight",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fight"
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eat-11, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(eat-11, would-9)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "9",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(eat-11, you-10)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(eat-11, bear-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bear"
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eat-11, ?-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "11",
                  "lemma": "eat",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eat"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node": {
                  "NN": "bear"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "VBP": "fight"
                },
                "s_node_0_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_3_node": {
                  "PRP": "you"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "MD": "would"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "VB": "bear"
                },
                "s_node_0_node_1_node_1_node_1_node_3_node": {
                  "NN": "bear"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node_0_node": {
                  "VB": "eat"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_1_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node": {
                  "VB": "kill"
                },
                "s_node_5_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "If"
                },
                "s_node_0_node_1_node_0_node": {
                  "PRP": "you"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,If you fight bear, kill bear, would you eat bear?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,If you fight bear, kill bear, would you eat bear?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,If you fight bear, kill bear, would you eat bear?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,Lalious killed friend Brom with arrows.\u0027\u0027",
      "wordCount": 8,
      "order": 85,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Lalious killed friend Brom with arrows.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Lalious killed friend Brom with arrows.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Lalious",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "friend",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Brom",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "arrows",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, Lalious-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "lalious",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Lalious"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-2, Brom-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(killed-2, arrows-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "6",
                  "lemma": "arrow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arrows"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Brom-4, friend-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "friend",
                  "ner": "O",
                  "tag": "NN",
                  "word": "friend"
                },
                "gov": {
                  "index": "4",
                  "lemma": "brom",
                  "ner": "PERSON",
                  "tag": "NN",
                  "word": "Brom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(arrows-6, with-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "6",
                  "lemma": "arrow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arrows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "Brom"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNS": "arrows"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNS": "Lalious"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "friend"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "arrows.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Lalious killed friend Brom with arrows.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Lalious killed friend Brom with arrows.\u0027\u0027",
            "misspelledWords": {
              "Brom": [
                "broom",
                "brim",
                "from",
                "brow",
                "boom",
                "ROM"
              ],
              "Lalious": [
                "lilies"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Lalious killed friend Brom with arrows.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rind says, ,,I am Rind of Crack Mountain Clan.\u0027\u0027",
      "wordCount": 9,
      "order": 86,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rind says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rind says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rind",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rind-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Rind-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rind",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Rind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Rind says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Rind says, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I am Rind of Crack Mountain Clan.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am Rind of Crack Mountain Clan.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Rind",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Crack",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mountain",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Clan",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rind-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Rind-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Rind-3, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "3",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Rind-3, Clan-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                },
                "gov": {
                  "index": "3",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rind-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "rind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Clan-7, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-7, Crack-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Crack",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Crack"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Clan-7, Mountain-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Mountain",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mountain"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Clan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Clan"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Crack"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Clan"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Rind"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Mountain"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Clan.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I am Rind of Crack Mountain Clan.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I am Rind of Crack Mountain Clan.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I am Rind of Crack Mountain Clan.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    }
  ]
}