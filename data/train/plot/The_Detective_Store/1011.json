{
  "file": "/gitbox/Word/Prostitute/Product/Goods/Words/The_Detective_Store/1011.wpml",
  "version": "0.0.5",
  "gitSha": "30edb575085b45266571fd12f3b14e086963ece2",
  "localDateTime": "2017-09-16T11:01:08.329",
  "copyright": "",
  "writers": [
    "Kalab J. Oster"
  ],
  "editors": [
    "Kalab J. Oster"
  ],
  "publishers": [
    "Word ProstituteÂ®"
  ],
  "fileState": "\u003cTerrorists killed Mustang,\u003e I think.\n\n,,Secret Sentry killed Mustang,\u0027\u0027 says Psycho.\n\nRain falls. \n\nThe rain splashes upon the ground. \n\nBright white light illuminates the rain. \n\nThe bright white light illuminates K. \n\nI stand. \n\n,,Congov.\u0027\u0027 I stare at Psycho, say, \u0027\u0027I,\u0027\u0027 turn my back to Psycho and walk away.\n\n\u003c|I killed Mustang.\u003e\n\nI feel it true.\n\nNothing is.\n\nWhite light casts night to shadows.\n\n\u0027\u0027How?\u0027\u0027\n\nRain falls.\n\nPsycho says, ,,Secret Sentry detained your parents at your parents\u0027 apartment. Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered. Mustang disarmed and detained all Secret Sentry. A Gee Forty-three killed Mustang.\u0027\u0027\n\nRain pours. \n\nFeet pound pavement. \n\n\u003c|No.\u003e \n\nLegs stride. \n\n\u003c|Can\u0027t be. A lie. Not true.\u003e \n\n,,This is some death test,\u0027\u0027 I say. \n\n\u003c|Could be.\u003e \n\nBody shakes. \n\nNothing is.\n\nPure burn spreads from chest to face. \u0027\u0027I was thinking this.\u0027\u0027\n\nRain flows over face. \n\nWater flows over body. \n\nPsycho scurries behind. ,,Dick, this is not a death test.\u0027\u0027 \n\nRain reflects white lights.\n\nCity\u0027s sump pumps and subpumps bang.\n\nPsycho scurries over street then sidewalk. \n\nNothing is.\n\nFeet splash through water puddles.\n\n\u003c|A test.\u003e\n\n\u0027\u0027I am unaware of the test,\u0027\u0027 says Psycho. \u0027\u0027I am sorry.\u0027\u0027\n\n\u003c|I.\u003e\n\nBody is hollow. \n\nI feel empty. \n\nI say, ,,Sorry. You can\u0027t understand I.\u0027\u0027\n\nPsycho says, ,,I felt the death of Mustang.\u0027\u0027\n\nI walk. \n\nKnees are loose. \n\nStomach is heavy. \n\n\u003c|Mustang is alive.\u003e \n\nHead is dim. \n\n\u003c|Or Mustang is dead.\u003e \n\n,,Why would?\u0027\u0027 I stand. \n\nNothing is.\n\nRain soaks soul.\n\n\u003c|I.\u003e\n\nNothing is.\n\nPsycho lurks with the night.\n\n\u003c|Ploy. Or a play.\u003e \u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027\n\n,,You didn\u0027t ask,\u0027\u0027 says Psycho.\n\nI walk from the light and Psycho. ,,Are my parents dead?\u0027\u0027\n\nPsycho says, ,,Your parents are beyond Psycho\u0027s range. They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027\n\nEyelids slide over eyes. \n\nI walk.\n\nPsycho says, \u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027\n\n\u003c|Enter reason.\u003e \n\nBuildings are windows, doors and stone. \n\nWord and picture signs hang on stone.\n\n\u003c|For revenge. Knowledge.\u003e \n\nFeet stop. \n\nBody is. \n\nWater flows over body.\n\nBright white light shines behind.\n\n\u003c|I killed them.\u003e\n\nI feel it true.\n\nNothing is.\n\nHollow pain fills body then empties.\n\n\u0027\u0027I am sorry,\u0027\u0027 says Psycho to mind. \n\nI focus forward. \n\n,,Sorry.\u0027\u0027 \n\nLegs pull and push body along sidewalk into the night. \n\nI think, \u003c|I.\u003e \n\nI wipe face with hand, shake head. \n\n,,Mustang had higher death probability not knowing of Psycho,\u0027\u0027 says Psycho. \u0027\u0027Your parents would be confirmed killed.\u0027\u0027\n\nI splash through puddles. \n\n\u003c|Now forgiven.\u003e \n\nI pivot head side to side.\n\nRain reflects the white light.\n\nHeart beats. \n\nMind feels burning thought. \n\nEyes focus upon rain and see nothing.\n\nI think and feel, \u003c|They want Psycho or me in.\u003e\n\nThe jaw bone pulses. \n\nNose flares and inhales.\n\nPsycho extends limbs and wraps limbs and creates a coil umbrella.\n\nNo rain hits body.\n\n\u003c|Where to go?\u003e \n\nJaw pulses. \n\n\u003c|In the building. Information. Protection to think.\u003e \n\nI inhale. \n\nI exhale. \n\n,,No.\u0027\u0027 \n\nI walk away from the white light. \n\n\u003c|Where to go?\u003e \n\nI stand on sidewalk corner before a street pool. \n\nI feel and think, \u003c|Mom, dad.\u003e \n\nNothing is.\n\nI stand. \n\nI pull tie knot. I pull tie from neck. I pivot head side to side.\n\nRain falls.\n\nI inhale. \u003c|Truth?\u003e I exhale. \u003c|Only information.\u003e I walk.\n\nNo rain falls upon body. Water pool splashes.\n\nPsycho follows and holds limb umbrella over body.\n\n\u003c|I am the puppet.\u003e\n\nNo people or machines are visible. Light shines from one window of one building.\n\n,,Richard and Betty are riding in rickshaw,\u0027\u0027 says Psycho. \u0027\u0027Rickshaw approaches.\u0027\u0027\n\nRain hits body.\n\nI walk and look behind to K.\n\nPsycho scurries to the white light of K.\n\nI stop. \u003e|Another way you kill?\u003c I wrap tie around palm and fingers. \n\nPsycho says, \u0027\u0027No.\u0027\u0027\n\nI say, ,,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027\n\n,,Yes,\u0027\u0027 says Psycho. Psycho scurries across street.\n\nK glows white.\n\nRain falls from the sky.\n\n\u003e|When?\u003c\n\n\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027 says Psycho. Psycho scurries over sidewalk to K white light.\n\nI inhale.\n\nI exhale.\n\n\u003c|Two minutes. Can\u0027t go to mom and dad.\u003e I think to Psycho, \u003e|Stop. Psycho.\u003c\n\nPsycho stops.\n\nThe K sump pumps pump and clank.\n\nI walk to Psycho.\n\nShoe soles squish with step. Fists clench.\n\nRain falls. Rain river flows over the sidewalks to the curbs, the drains, the pipes. \u003c|The sump pumps and beyond the Watergate.\u003e\n\nShoulders stiffen and muscles tense.\n\nWater flows along streets and into intersection pools.\n\nJaw clenches.\n\nRain washes Democratic and Republic signs in New Roman Times.\n\nJaw joints pulse.\n\nRain falls on body.\n\nPsycho says, \u0027\u0027Are you taking my case?\u0027\u0027\n\nNeck muscles tighten. Hands clench fists. \n\nI stand and look at Psycho. ,,No.\u0027\u0027\n\nHeart pounds.\n\n,,No,\u0027\u0027 says Psycho. Psycho\u0027s limbs hang. \u003c|Looks like a phallic.\u003e\n\nI feel and think, \u003c|I\u0027m getting fucked.\u003e I holler above rain and the sump pump motors\u0027 putter. ,,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027 \n\n,,No,\u0027\u0027 says Psycho.\n\nI raise a fist and point index finger at Psycho. ,,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027 bass bellows. \n\n,,You do not need to yell,\u0027\u0027 says Psycho. \u0027\u0027I can hear you when you whisper.\u0027\u0027 Psycho scurries toward K.\n\nI walk toward the bright white light. \n\nFeet splash water.\n\nI splash, splash, splash through intersection pool. \u003c|What form...Water. Water, don\u0027t, let the. Water.\u003e Feet stride along sidewalk. Feet pace with distant quick engine knock of a Watergate subpump engine. I think, \u003c|Water.\u003e I clear throat, swallow. \n\nPsycho scurries along building wall.\n\n\u0027\u0027I am on a mission for freedom,\u0027\u0027 says Psycho.\n\n\u003c|I.\u003e I grin. ,,You are a killing machine.\u0027\u0027\n\n,,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027 says Psycho.\n\n\u003c|They are reading.\u003e I think, wipe face with tie wrapped hand. \n\nThe K sump pumps stop white noise talk.\n\n\u003c|I. I.\u003e I nod. \u003c|...Been shown have taught Psycho I.\u003e I walk slow. \u003e|Hello, everyone reading my mind record. This thought I see to you.\u003c\n\n\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027 says Psycho.\n\n\u003c|No hope of life beyond Psycho.\u003e I walk across intersection. ,,How tapped am I?\u0027\u0027\n\nPsycho says, ,,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027\n\nI look left and right along the cross street. \n\nDarkness and rain are.\n\nPsycho scurries before.\n\nI stride corner to curb to sidewalk.\n\nNo rain falls upon body. \n\nHeat radiates above.\n\nI look up.\n\nPsycho\u0027s limb coil covers.\n\n\u003c|Path, reason to enter building.\u003e I think. I look forward, say, ,,Do Betty and Richard know?\u0027\u0027 \u003c|They are watched,\u003e I think.\n\n,,Richard and Betty are unaware their records are being read,\u0027\u0027 says Psycho. Psycho lowers limbs from limb coil.\n\nRain falls upon body.\n\n,,Read,\u0027\u0027 I say. I stare upon Psycho\u0027s core. I see to Psycho, \u003e|Abuse.\u003c I look to the bright white light. \n\nA rickshaw rolls along K. \n\nRain falls.\n\nI look up.\n\nPsycho crawls on building wall. ,,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027 says Psycho.\n\nWater falls from face. \n\n\u003e|You want to me to enter.\u003c I stand and stare at K.\n\n\u0027\u0027Dick, please.\u0027\u0027 A limb tip opens and forms a tiny radar. \u0027\u0027Dick, we have no time to waste. Richard and Betty are near the K Street building.\u0027\u0027\n \nThe sump pumps of K and the subpump of Watergate clank and spirt.\n\n\u003c|They want Psycho to enter.\u003e I wipe face with hand. I stand.\n\nI think, \u003c|No shadow. No people. No bikes. No cars. No lit street diodes at corners.\u003e I look at building tops. \n\nFrontal lobescans, wave guns, body scanners on buildings point to K. \n\nI feel and think, \u003c|Mustang.\u003e \n\nThe rain stops.\n\nWater drips from nose, drips from shirt cuff, drips from collar.\n\n\u0027\u0027Sorry, Dick.\u0027\u0027 Psycho\u0027s tiny radar dish closes. Psycho leaps from building wall and lands before me. Limbs splash water upon sidewalk. Limbs lift, twist, form arms and spread. \u003c|For a hug.\u003e\n\n,,Sorry.\u0027\u0027 I look at Psycho\u0027s core.\n\nCore glows a dim blue. The limbs are still. \n\n\u0027\u0027Do you know what sorry means?\u0027\u0027\n\n,,Yes,\u0027\u0027 says Psycho.\n\nA breeze becomes a gust then a breeze. \n\nWater drops from eves and awnings. Rain puddles flow way.\n\n\u003c|A machine sorry.\u003e\n\nPsycho is motionless. Water drips from limbs.\n\n\u003c|Another puppet born.\u003e\n\nBig bright white light shines.\n\n\u003e|We are the same,\u003c I see. \u003c|I killed Mustang.\u003e\n\nNothing is.\n\nI walk toward the white light, say, ,,Which building?\u0027\u0027\n\n,,The window wall building in our current path is the building we will enter,\u0027\u0027 says Psycho.\n\nI feel and think, \u003c|Truth will not be found.\u003e\n\nK\u0027s white light glows.\n\n\u003c|I will create it.\u003e I think, \u003c|Looking for Psycho.\u003e I step back.\n\nA rickshaw rolls on K.\n\n\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027 says Psycho.\n\nI leer from building\u0027s corner and step under an awning and by potted roses. I think, \u003c|Is Psycho killing us?\u003e I stand. \n\nAcross the street is a building with window walls.\n\nI say, ,,What transmits in or out of building?\u0027\u0027 \n\n,,Mind reading transmits into the building,\u0027\u0027 says Psycho. \u0027\u0027Mind reading transmits from the building.\u0027\u0027\n\nThe white light is a step away.\n\nI look right.\n\n\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027 says Psycho. \n\nThe building is the city block. Steel frame outlines three levels of window walls. The revolving door rotates.\n\n\u003c|That\u0027s big revolving door.\u003e \n\n\u0027\u0027We will enter with Richard and Betty,\u0027\u0027 says Psycho.\n\nI think, \u003c|Why not the wall?\u003e I say, ,,Why not enter through the wall?\u0027\u0027\n\nPsycho says, ,,The wall is a deterrent. It deters direct assault to give time to one of three guards to press a red button. The red button lowers the secure seal. The secure seal will prevent us from entering the secure tunnel. The secure tunnel leads to the lift. The lift descends to the womb.\u0027\u0027\n\n\u003c|The womb.\u003e\n\nA rickshaw\u0027s blue and red wheels roll. \n\nThe mover is a child. Child\u0027s face is covered with sweat and water. Tuxedo, shirt and tie hang from body. Shiny rubber boots slop and splash through water.\n\nThe rickshaw\u0027s color wheels spin fast. Red and blue glowing spokes spin purple.\n\nPsycho is above on building wall.\n\nThe air is dry and cool. K Sump Pumps hums.\n\nThe rickshaw stops. The child lowers rickshaw poles. The rickshaw pivots forward.\n\nShit then piss smells are.\n\nI step upon street and into white light. \u003c|Betty and Richard,\u003e I think. I feel the Friction Ray.\n\n\u0027\u0027It is Richard and Betty,\u0027\u0027 says Psycho.\n\nRay burn warms body.\n\nI holler, ,,LEAVE!\u0027\u0027 I hear nothing.\n\nTwo hands split rickshaw curtains and push them apart revealing Richard then Betty.\n\nI walk.\n\nRichard\u0027s leg reaches for street. Richard steps from rickshaw, pivots to Betty.\n\nI holler, \u0027\u0027LEAVE!\u0027\u0027 I hear nothing.\n\nBetty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side.\n\nI run. \u0027\u0027LEAVE!\u0027\u0027\n\nRay burn stings.\n\nA ring pierces mind.\n\nI holler, \u0027\u0027RUN,\u0027\u0027 and shout, \u0027\u0027RUN!\u0027\u0027\n\nRichard holds out hand to Betty. \n\n\u0027\u0027GO!\u0027\u0027\n\nBetty slaps Richard\u0027s hand away and pulls out a pen.\n\nI run.\n\nThe ring increases.\n\nThe child opens right hand to expose palm. \n\nThe ring increases.\n\nBetty points pen tip at child\u0027s palm.\n\nThe ring increases.\n\nBetty says something and clicks pen button.\n\nThe ring increases.\n\nRay burn burns.\n\nA pain pierces ears.\n\nI close eyes. \u0027\u0027RUN!\u0027\u0027 I holler, \u0027\u0027RUN!\u0027\u0027\n\nThe lights shine through eyelids. Legs step, step, stride.\n\nI open eyelids.\n\nThe rickshaw rolls away.\n\nPain pierces ear.\n\nThe sonus warning rod sees to mind, \u003eMOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c\n\nSharp tone pierces mind.\n\nBody burns.\n\nBetty\u0027s elbow pokes Richard\u0027s stomach. Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door. Richard smiles. Betty takes palm and waves it before revolving door.\n\nI shout, \u0027\u0027LEAVE!\u0027\u0027 and, \u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027\n\n\u003e|...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c\n\n\u003cFocus. Betty. Alive. Focus. Betty. Alive...\u003e I run from street to sidewalk to revolving door.\n\nRay burn burns.\n\n\u003e...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c\n\nPain pierces head.\n\nBetty steps into quarter section of revolving door. Richard steps into quarter section of revolving door. \n\n\u003e|...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c\n\nI step between revolving door, reach and grab Richard.\n\nRichard slows step.\n\nI stand between revolving door.\n\nPsycho flows between legs and into the quarter section of revolving door.\n\n\u003cFocus. Betty. Alive.\u003e\n\n\u003e...MOVE AWAY! MOVE AWAY!...\u003c\n",
  "wordCount": 2050,
  "paragraphStates": [
    {
      "paragraph": "\u003cTerrorists killed Mustang,\u003e I think.",
      "wordCount": 5,
      "order": 1,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I think.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I think.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "think"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "think."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I think."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I think.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cTerrorists killed Mustang,\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Terrorists killed Mustang,",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Terrorists",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, Terrorists-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "terrorist",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Terrorists"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-2, Mustang-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNS": "Terrorists"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003cTerrorists killed Mustang,\u003e"
          },
          "jazzyState": {
            "text": "\u003cTerrorists killed Mustang,\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003cTerrorists killed Mustang,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Secret Sentry killed Mustang,\u0027\u0027 says Psycho.",
      "wordCount": 6,
      "order": 2,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Secret Sentry killed Mustang,\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Secret Sentry killed Mustang,",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-2, Secret-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-3, Sentry-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-3, Mustang-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Mustang",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-3, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Secret Sentry killed Mustang,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Secret Sentry killed Mustang,\u0027\u0027",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Secret Sentry killed Mustang,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls.",
      "wordCount": 2,
      "order": 3,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "falls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "falls."
                ]
              }
            },
            "sentence": "Rain falls."
          },
          "jazzyState": {
            "text": "Rain falls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The rain splashes upon the ground.",
      "wordCount": 6,
      "order": 4,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The rain splashes upon the ground.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The rain splashes upon the ground.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "splashes",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, splashes-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(splashes-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(splashes-3, rain-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(splashes-3, ground-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splashes-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-6, upon-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ground-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rain"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "ground"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "splashes"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ground."
                ]
              }
            },
            "sentence": "The rain splashes upon the ground."
          },
          "jazzyState": {
            "text": "The rain splashes upon the ground.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Bright white light illuminates the rain.",
      "wordCount": 6,
      "order": 5,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Bright white light illuminates the rain.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Bright white light illuminates the rain.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-3, Bright-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Bright"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-3, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-4, light-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(illuminates-4, rain-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rain-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "rain"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "illuminates"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Bright"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rain."
                ]
              }
            },
            "sentence": "Bright white light illuminates the rain."
          },
          "jazzyState": {
            "text": "Bright white light illuminates the rain.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The bright white light illuminates K.",
      "wordCount": 6,
      "order": 6,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The bright white light illuminates K.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The bright white light illuminates K.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-4, bright-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-4, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-5, light-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(illuminates-5, K.-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "light"
                },
                "s_node_0_node_2_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "illuminates"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "The bright white light illuminates K."
          },
          "jazzyState": {
            "text": "The bright white light illuminates K.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand.",
      "wordCount": 2,
      "order": 7,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Congov.\u0027\u0027 I stare at Psycho, say, \u0027\u0027I,\u0027\u0027 turn my back to Psycho and walk away.",
      "wordCount": 15,
      "order": 8,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Congov.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Congov.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Congov",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Congov-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Congov",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Congov"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Congov-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Congov",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Congov"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Congov"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Congov.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Congov.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Congov.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Congov.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stare at Psycho, say, DIALOG_OBJECT_1, turn my back to Psycho and walk away.",
          "wordCount": 13,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I stare at Psycho, say, DIALOG_OBJECT_1, turn my back to Psycho and walk away.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stare",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "turn",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "back",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stare-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(stare-2, walk-16)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "16",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stare-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stare-2, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(stare-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stare-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "string": "dep(stare-2, say-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stare-2, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(stare-2, turn-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(turn-10, walk-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(turn-10, DIALOG_OBJECT_1-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(turn-10, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(turn-10, back-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "NN",
                  "word": "back"
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(turn-10, Psycho-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Psycho",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(turn-10, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "10",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(back-12, my-11)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "11",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "12",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "NN",
                  "word": "back"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-14, to-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Psycho",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(walk-16, away-17)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "17",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "16",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-16, DIALOG_OBJECT_1-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "16",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node_0_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "back"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "VB": "say"
                },
                "s_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node": {
                  "VB": "turn"
                },
                "s_node_1_node_4_node_0_node": {
                  "VB": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PRN"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node_0_node": {
                  "VB": "stare"
                },
                "s_node_1_node_0_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_1_node": {
                  "RP": "away"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_1_node_0_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node": {
                  "PRP": "I"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "away."
                ]
              }
            },
            "sentence": "I stare at Psycho, say, DIALOG_OBJECT_1, turn my back to Psycho and walk away."
          },
          "jazzyState": {
            "text": "I stare at Psycho, say, DIALOG_OBJECT_1, turn my back to Psycho and walk away.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "I,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ,-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(,-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027I,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I killed Mustang.\u003e",
      "wordCount": 3,
      "order": 9,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I killed Mustang.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "I killed Mustang.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-2, Mustang-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Mustang.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I killed Mustang.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I killed Mustang.\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|I killed Mustang.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel it true.",
      "wordCount": 4,
      "order": 10,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I feel it true.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel it true.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "true",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(feel-2, true-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "true",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "true"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(true-4, it-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "4",
                  "lemma": "true",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "true"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "true"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "it"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "true."
                ]
              }
            },
            "sentence": "I feel it true."
          },
          "jazzyState": {
            "text": "I feel it true.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 11,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "White light casts night to shadows.",
      "wordCount": 6,
      "order": 12,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "White light casts night to shadows.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "White light casts night to shadows.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "White",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "casts",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "night",
                "net": "TIME"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shadows",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, casts-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "cast",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "casts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(White-1, light-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(casts-3, White-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cast",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "casts"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:tmod(casts-3, night-4)",
                  "name": "temporal modifier",
                  "tag": "nmod:tmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cast",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "casts"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(casts-3, shadows-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shadows"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cast",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "casts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(casts-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "cast",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "casts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(shadows-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shadows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNS": "shadows"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "night"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "light"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "casts"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "White"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shadows."
                ]
              }
            },
            "sentence": "White light casts night to shadows."
          },
          "jazzyState": {
            "text": "White light casts night to shadows.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027How?\u0027\u0027",
      "wordCount": 1,
      "order": 13,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027How?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "How?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, How-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(How-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "SBARQ"
                },
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node": {
                  "WRB": "How"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027How?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027How?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027How?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls.",
      "wordCount": 2,
      "order": 14,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "falls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "falls."
                ]
              }
            },
            "sentence": "Rain falls."
          },
          "jazzyState": {
            "text": "Rain falls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,Secret Sentry detained your parents at your parents\u0027 apartment. Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered. Mustang disarmed and detained all Secret Sentry. A Gee Forty-three killed Mustang.\u0027\u0027",
      "wordCount": 34,
      "order": 15,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Secret Sentry detained your parents at your parents\u0027 apartment.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Secret Sentry detained your parents at your parents\u0027 apartment.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "detained",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "apartment",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, detained-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-2, Secret-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(detained-3, Sentry-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "3",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(detained-3, parents-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "3",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(detained-3, apartment-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "10",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                },
                "gov": {
                  "index": "3",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(detained-3, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(parents-5, your-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "5",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(parents-8, your-7)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "7",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "8",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(parents-8, \u0027-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027"
                },
                "gov": {
                  "index": "8",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(apartment-10, at-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "10",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(apartment-10, parents-8)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "8",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "10",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "POS": "\u0027"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "PRP$": "your"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "apartment"
                },
                "s_node_1_node_0_node": {
                  "VBD": "detained"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP$": "your"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Secret"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "apartment."
                ]
              }
            },
            "sentence": ",,Secret Sentry detained your parents at your parents\u0027 apartment."
          },
          "jazzyState": {
            "text": ",,Secret Sentry detained your parents at your parents\u0027 apartment.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Secret Sentry detained your parents at your parents\u0027 apartment.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered.",
          "wordCount": 11,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": "VBD",
                "text": "entered",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "apartment",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "after",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "VBP",
                "text": "knock",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "incidences",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "being",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "returned",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "unanswered",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, entered-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "entered"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(entered-2, Mustang-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "entered"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(entered-2, knock-8)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                },
                "gov": {
                  "index": "2",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "entered"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(entered-2, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "entered"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(parents-3, \u0027-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(apartment-5, parents-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "5",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:after(apartment-5, three-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:after"
                },
                "dep": {
                  "index": "7",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(three-7, after-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "after",
                  "ner": "O",
                  "tag": "IN",
                  "word": "after"
                },
                "gov": {
                  "index": "7",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(knock-8, apartment-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "apartment",
                  "ner": "O",
                  "tag": "NN",
                  "word": "apartment"
                },
                "gov": {
                  "index": "8",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(knock-8, incidences-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "incidence",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "incidences"
                },
                "gov": {
                  "index": "8",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(incidences-9, returned-11)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "return",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "returned"
                },
                "gov": {
                  "index": "9",
                  "lemma": "incidence",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "incidences"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(returned-11, being-10)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "10",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "being"
                },
                "gov": {
                  "index": "11",
                  "lemma": "return",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "returned"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(returned-11, unanswered-12)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "unanswered",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unanswered"
                },
                "gov": {
                  "index": "11",
                  "lemma": "return",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "returned"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "after"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "NNS": "incidences"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBN": "returned"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "knock"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "apartment"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNS": "parents"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "JJ": "unanswered"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBG": "being"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "CD": "three"
                },
                "s_node_0_node": {
                  "NNP": "Mustang"
                },
                "s_node_1_node_0_node": {
                  "VBD": "entered"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "unanswered."
                ]
              }
            },
            "sentence": "Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered."
          },
          "jazzyState": {
            "text": "Mustang entered parents\u0027 apartment after three knock incidences being returned unanswered.",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Mustang disarmed and detained all Secret Sentry.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "Past"
          ],
          "nlpState": {
            "sentence": "Mustang disarmed and detained all Secret Sentry.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": "VBD",
                "text": "disarmed",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "detained",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "all",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, disarmed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "disarmed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(disarmed-2, Mustang-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "disarmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(disarmed-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "disarmed"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(disarmed-2, detained-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                },
                "gov": {
                  "index": "2",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "disarmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(disarmed-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "disarmed"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(detained-4, Mustang-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "4",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(detained-4, Sentry-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "4",
                  "lemma": "detain",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "detained"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Sentry-7, all-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "all"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-7, Secret-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBD": "detained"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "Sentry"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "all"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "Secret"
                },
                "s_node_0_node": {
                  "NNP": "Mustang"
                },
                "s_node_1_node_0_node": {
                  "VBD": "disarmed"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Sentry."
                ]
              }
            },
            "sentence": "Mustang disarmed and detained all Secret Sentry."
          },
          "jazzyState": {
            "text": "Mustang disarmed and detained all Secret Sentry.",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "A Gee Forty-three killed Mustang.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "A Gee Forty-three killed Mustang.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, Forty-three-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-4, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-4, Mustang-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Mustang.\u0027\u0027"
                ]
              }
            },
            "sentence": "A Gee Forty-three killed Mustang.\u0027\u0027"
          },
          "jazzyState": {
            "text": "A Gee Forty-three killed Mustang.\u0027\u0027",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ],
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "A Gee Forty-three killed Mustang.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain pours.",
      "wordCount": 2,
      "order": 16,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain pours.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain pours.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pours",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pours-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pour",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pours"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pours-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pour",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pours"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pours-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pour",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pours"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "pours"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pours."
                ]
              }
            },
            "sentence": "Rain pours."
          },
          "jazzyState": {
            "text": "Rain pours.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Feet pound pavement.",
      "wordCount": 3,
      "order": 17,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Feet pound pavement.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Feet pound pavement.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pound",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pavement",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Feet-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Feet-1, pavement-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pavement",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pavement"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Feet-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pavement-3, pound-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pound"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pavement",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pavement"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "pavement"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "pound"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Feet"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pavement."
                ]
              }
            },
            "sentence": "Feet pound pavement."
          },
          "jazzyState": {
            "text": "Feet pound pavement.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|No.\u003e",
      "wordCount": 1,
      "order": 18,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|No.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|No.\u003e"
                ]
              }
            },
            "sentence": "\u003c|No.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|No.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|No.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Legs stride.",
      "wordCount": 2,
      "order": 19,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Legs stride.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Legs stride.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Legs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stride",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Legs-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Legs-1, stride-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                },
                "gov": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Legs-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "stride"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Legs"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stride."
                ]
              }
            },
            "sentence": "Legs stride."
          },
          "jazzyState": {
            "text": "Legs stride.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Can\u0027t be. A lie. Not true.\u003e",
      "wordCount": 6,
      "order": 20,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Can\u0027t be.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Can\u0027t be.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Ca",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, be-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(be-3, Ca-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ca",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Ca"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(be-3, n\u0027t-2)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(be-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node": {
                  "VB": "be"
                },
                "s_node_0_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_0_node_0_node": {
                  "MD": "Ca"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "be."
                ]
              }
            },
            "sentence": "\u003c|Can\u0027t be."
          },
          "jazzyState": {
            "text": "\u003c|Can\u0027t be.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Can\u0027t be.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "A lie.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "A lie.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lie",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lie-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lie"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lie-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lie"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lie-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lie"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "lie"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lie."
                ]
              }
            },
            "sentence": "A lie."
          },
          "jazzyState": {
            "text": "A lie.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Not true.\u003e",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Not true.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Not",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "true",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Not-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Not"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Not-1, true-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "true",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "true"
                },
                "gov": {
                  "index": "1",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Not"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Not-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Not"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "JJ": "true"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "RB": "Not"
                },
                "s_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "true.\u003e"
                ]
              }
            },
            "sentence": "Not true.\u003e"
          },
          "jazzyState": {
            "text": "Not true.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Not true.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,This is some death test,\u0027\u0027 I say.",
      "wordCount": 7,
      "order": 21,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I say.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I say.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, say-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "say"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "say."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I say."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I say.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,This is some death test,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "This is some death test,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "This",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "some",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "death",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, test-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(test-5, This-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "This"
                },
                "gov": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(test-5, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-5, some-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "some",
                  "ner": "O",
                  "tag": "DT",
                  "word": "some"
                },
                "gov": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(test-5, death-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                },
                "gov": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(test-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "death"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "test"
                },
                "s_node_0_node": {
                  "DT": "This"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "some"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,This is some death test,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,This is some death test,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,This is some death test,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Could be.\u003e",
      "wordCount": 2,
      "order": 22,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Could be.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Could be.",
            "coreAnnotations": [
              {
                "pos": "MD",
                "text": "Could",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, be-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(be-2, Could-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "could",
                  "ner": "O",
                  "tag": "MD",
                  "word": "Could"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(be-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "VB": "be"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "MD": "Could"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "be.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Could be.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Could be.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Could be.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Body shakes.",
      "wordCount": 2,
      "order": 23,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Body shakes.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Body shakes.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shakes-2, Body-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shakes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Body"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shakes."
                ]
              }
            },
            "sentence": "Body shakes."
          },
          "jazzyState": {
            "text": "Body shakes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 24,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Pure burn spreads from chest to face. \u0027\u0027I was thinking this.\u0027\u0027",
      "wordCount": 11,
      "order": 25,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Pure burn spreads from chest to face.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Pure burn spreads from chest to face.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Pure",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "spreads",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "chest",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "face",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-2, Pure-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "pure",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Pure"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-2, spreads-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spreads"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(burn-2, chest-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(burn-2, face-7)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "VB",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burn-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(chest-5, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "chest",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chest"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(face-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "VB",
                  "word": "face"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "spreads"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "chest"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node": {
                  "VB": "face"
                },
                "s_node_0_node": {
                  "NNP": "Pure"
                },
                "s_node_1_node_0_node": {
                  "VBP": "burn"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "face."
                ]
              }
            },
            "sentence": "Pure burn spreads from chest to face."
          },
          "jazzyState": {
            "text": "Pure burn spreads from chest to face.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I was thinking this.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I was thinking this.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "was",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "thinking",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "this",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, thinking-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "thinking"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(thinking-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "thinking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(thinking-3, was-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "was"
                },
                "gov": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "thinking"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(thinking-3, this-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "thinking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(thinking-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "thinking"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "DT": "this"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "was"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBG": "thinking"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "this.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027I was thinking this.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I was thinking this.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I was thinking this.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain flows over face.",
      "wordCount": 4,
      "order": 26,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain flows over face.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain flows over face.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(flows-2, face-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(face-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "face"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "face."
                ]
              }
            },
            "sentence": "Rain flows over face."
          },
          "jazzyState": {
            "text": "Rain flows over face.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water flows over body.",
      "wordCount": 4,
      "order": 27,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water flows over body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water flows over body.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(flows-2, body-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Water flows over body."
          },
          "jazzyState": {
            "text": "Water flows over body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho scurries behind. ,,Dick, this is not a death test.\u0027\u0027",
      "wordCount": 10,
      "order": 28,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho scurries behind.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries behind.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, behind-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(behind-3, scurries-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(behind-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "Psycho scurries behind."
          },
          "jazzyState": {
            "text": "Psycho scurries behind.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Dick, this is not a death test.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Dick, this is not a death test.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Dick",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "this",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "death",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, test-8)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(test-8, Dick-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(test-8, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(test-8, this-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(test-8, is-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(test-8, not-5)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "5",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-8, a-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(test-8, death-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(test-8, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_2_node_0_node": {
                  "DT": "a"
                },
                "s_node_2_node": {
                  "DT": "this"
                },
                "s_node_3_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_2_node_2_node": {
                  "NN": "test"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_1_node": {
                  "NN": "death"
                },
                "s_node_0_node": {
                  "RB": "Dick"
                },
                "s_node_3_node_1_node": {
                  "RB": "not"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "test.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Dick, this is not a death test.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Dick, this is not a death test.\u0027\u0027",
            "misspelledWords": {
              "Dick": [
                "tick",
                "dicky",
                "deck",
                "dock",
                "duck",
                "pick",
                "sick",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick",
                "disk"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Dick, this is not a death test.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain reflects white lights.",
      "wordCount": 4,
      "order": 29,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain reflects white lights.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain reflects white lights.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "reflects",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lights",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reflects-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reflects-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(reflects-2, lights-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reflects-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(lights-4, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "lights"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "reflects"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lights."
                ]
              }
            },
            "sentence": "Rain reflects white lights."
          },
          "jazzyState": {
            "text": "Rain reflects white lights.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "City\u0027s sump pumps and subpumps bang.",
      "wordCount": 6,
      "order": 30,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "City\u0027s sump pumps and subpumps bang.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "City\u0027s sump pumps and subpumps bang.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "City",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pumps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "subpumps",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bang",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sump-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(City-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "City",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "City"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(sump-3, City-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "City",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "City"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "string": "dep(sump-3, pumps-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "string": "dep(sump-3, subpumps-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "subpumps"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sump-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pumps-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pumps-4, subpumps-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "subpumps"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "string": "dep(pumps-4, bang-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bang"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "bang"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNS": "pumps"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "sump"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "City"
                },
                "s_node_0_node_4_node": {
                  "NNS": "subpumps"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bang."
                ]
              }
            },
            "sentence": "City\u0027s sump pumps and subpumps bang."
          },
          "jazzyState": {
            "text": "City\u0027s sump pumps and subpumps bang.",
            "misspelledWords": {
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ],
              "subpumps": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho scurries over street then sidewalk.",
      "wordCount": 6,
      "order": 31,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho scurries over street then sidewalk.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries over street then sidewalk.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sidewalk-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(scurries-2, street-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sidewalk-6, scurries-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sidewalk-6, then-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sidewalk-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "RB": "then"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sidewalk."
                ]
              }
            },
            "sentence": "Psycho scurries over street then sidewalk."
          },
          "jazzyState": {
            "text": "Psycho scurries over street then sidewalk.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 32,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Feet splash through water puddles.",
      "wordCount": 5,
      "order": 33,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Feet splash through water puddles.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Feet splash through water puddles.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puddles",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, splash-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(splash-2, Feet-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(splash-2, puddles-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(puddles-5, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(puddles-5, water-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "5",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "puddles"
                },
                "s_node_0_node": {
                  "NNP": "Feet"
                },
                "s_node_1_node_0_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "water"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puddles."
                ]
              }
            },
            "sentence": "Feet splash through water puddles."
          },
          "jazzyState": {
            "text": "Feet splash through water puddles.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|A test.\u003e",
      "wordCount": 2,
      "order": 34,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|A test.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A test.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, test-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(test-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "test"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "A"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "test.\u003e"
                ]
              }
            },
            "sentence": "\u003c|A test.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|A test.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|A test.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027I am unaware of the test,\u0027\u0027 says Psycho. \u0027\u0027I am sorry.\u0027\u0027",
      "wordCount": 11,
      "order": 35,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I am unaware of the test,\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am unaware of the test,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "unaware",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, unaware-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(unaware-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(unaware-3, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "3",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(unaware-3, test-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "3",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(unaware-3, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(test-6, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "test",
                  "ner": "O",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "unaware"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "test"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027I am unaware of the test,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I am unaware of the test,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I am unaware of the test,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I am sorry.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am sorry.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "sorry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sorry-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sorry-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(sorry-3, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sorry-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "sorry"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "sorry.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027I am sorry.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I am sorry.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I am sorry.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I.\u003e",
      "wordCount": 1,
      "order": 36,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|I.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Body is hollow.",
      "wordCount": 3,
      "order": 37,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Body is hollow.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Body is hollow.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "hollow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hollow-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "hollow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hollow"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hollow-3, Body-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hollow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hollow"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(hollow-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hollow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hollow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hollow-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "hollow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hollow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "hollow"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Body"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hollow."
                ]
              }
            },
            "sentence": "Body is hollow."
          },
          "jazzyState": {
            "text": "Body is hollow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel empty.",
      "wordCount": 3,
      "order": 38,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I feel empty.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel empty.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "empty",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(feel-2, empty-3)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "empty",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "empty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "empty"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "empty."
                ]
              }
            },
            "sentence": "I feel empty."
          },
          "jazzyState": {
            "text": "I feel empty.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I say, ,,Sorry. You can\u0027t understand I.\u0027\u0027",
      "wordCount": 7,
      "order": 39,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Sorry.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Sorry.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Sorry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sorry-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sorry-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Sorry"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Sorry."
                ]
              }
            },
            "sentence": ",,Sorry."
          },
          "jazzyState": {
            "text": ",,Sorry.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Sorry.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "You can\u0027t understand I.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "You can\u0027t understand I.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "ca",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "understand",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, understand-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "understand",
                  "ner": "O",
                  "tag": "VB",
                  "word": "understand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(understand-4, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "4",
                  "lemma": "understand",
                  "ner": "O",
                  "tag": "VB",
                  "word": "understand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(understand-4, ca-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "ca"
                },
                "gov": {
                  "index": "4",
                  "lemma": "understand",
                  "ner": "O",
                  "tag": "VB",
                  "word": "understand"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(understand-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "understand",
                  "ner": "O",
                  "tag": "VB",
                  "word": "understand"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(understand-4, I.-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "4",
                  "lemma": "understand",
                  "ner": "O",
                  "tag": "VB",
                  "word": "understand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "understand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "I."
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_node_0_node": {
                  "MD": "ca"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "I.\u0027\u0027"
                ]
              }
            },
            "sentence": "You can\u0027t understand I.\u0027\u0027"
          },
          "jazzyState": {
            "text": "You can\u0027t understand I.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "You can\u0027t understand I.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,I felt the death of Mustang.\u0027\u0027",
      "wordCount": 8,
      "order": 40,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I felt the death of Mustang.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "I felt the death of Mustang.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "felt",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "death",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, felt-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "felt"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(felt-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "felt"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(felt-2, death-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "felt"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(felt-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "felt"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(death-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(death-4, Mustang-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "4",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mustang-6, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "felt"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "death"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Mustang.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I felt the death of Mustang.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I felt the death of Mustang.\u0027\u0027",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,I felt the death of Mustang.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk.",
      "wordCount": 2,
      "order": 41,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walk."
                ]
              }
            },
            "sentence": "I walk."
          },
          "jazzyState": {
            "text": "I walk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Knees are loose.",
      "wordCount": 3,
      "order": 42,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Knees are loose.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Knees are loose.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Knees",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "loose",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, loose-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "loose",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loose"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(loose-3, Knees-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "knee",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Knees"
                },
                "gov": {
                  "index": "3",
                  "lemma": "loose",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loose"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(loose-3, are-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "3",
                  "lemma": "loose",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loose"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(loose-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "loose",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loose"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "loose"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Knees"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "loose."
                ]
              }
            },
            "sentence": "Knees are loose."
          },
          "jazzyState": {
            "text": "Knees are loose.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Stomach is heavy.",
      "wordCount": 3,
      "order": 43,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Stomach is heavy.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Stomach is heavy.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Stomach",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "heavy",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, heavy-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "heavy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "heavy"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(heavy-3, Stomach-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "stomach",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Stomach"
                },
                "gov": {
                  "index": "3",
                  "lemma": "heavy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "heavy"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(heavy-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "heavy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "heavy"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(heavy-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "heavy",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "heavy"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "heavy"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Stomach"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "heavy."
                ]
              }
            },
            "sentence": "Stomach is heavy."
          },
          "jazzyState": {
            "text": "Stomach is heavy.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Mustang is alive.\u003e",
      "wordCount": 3,
      "order": 44,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Mustang is alive.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Mustang is alive.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "alive",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, alive-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "alive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(alive-3, Mustang-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "3",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "alive"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(alive-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "alive"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(alive-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "alive"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "alive"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Mustang"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "alive.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Mustang is alive.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Mustang is alive.\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Mustang is alive.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Head is dim.",
      "wordCount": 3,
      "order": 45,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Head is dim.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Head is dim.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Head",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dim",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dim-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dim"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dim-3, Head-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Head",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Head"
                },
                "gov": {
                  "index": "3",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dim"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dim-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dim"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dim-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dim"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "dim"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Head"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "dim."
                ]
              }
            },
            "sentence": "Head is dim."
          },
          "jazzyState": {
            "text": "Head is dim.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Or Mustang is dead.\u003e",
      "wordCount": 4,
      "order": 46,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Or Mustang is dead.\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Or Mustang is dead.",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "Or",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dead",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dead-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(dead-4, Or-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "Or"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dead-4, Mustang-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Mustang",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dead-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dead-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "JJ": "dead"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "Or"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "dead.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Or Mustang is dead.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Or Mustang is dead.\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Or Mustang is dead.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Why would?\u0027\u0027 I stand.",
      "wordCount": 4,
      "order": 47,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Why would?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Why would?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "would",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, would-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(would-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(would-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "MD": "would"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why would?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why would?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why would?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 48,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain soaks soul.",
      "wordCount": 3,
      "order": 49,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain soaks soul.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain soaks soul.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "soaks",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "soul",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, soaks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "soak",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "soaks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(soaks-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "soak",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "soaks"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(soaks-2, soul-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "soul",
                  "ner": "O",
                  "tag": "NN",
                  "word": "soul"
                },
                "gov": {
                  "index": "2",
                  "lemma": "soak",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "soaks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(soaks-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "soak",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "soaks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "soul"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "soaks"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "soul."
                ]
              }
            },
            "sentence": "Rain soaks soul."
          },
          "jazzyState": {
            "text": "Rain soaks soul.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I.\u003e",
      "wordCount": 1,
      "order": 50,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|I.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 51,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho lurks with the night.",
      "wordCount": 5,
      "order": 52,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho lurks with the night.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho lurks with the night.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lurks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "night",
                "net": "TIME"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lurks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lurk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lurks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lurks-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lurk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lurks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(lurks-2, night-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lurk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lurks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lurks-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lurk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lurks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(night-5, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(night-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "night"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lurks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "night."
                ]
              }
            },
            "sentence": "Psycho lurks with the night."
          },
          "jazzyState": {
            "text": "Psycho lurks with the night.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Ploy. Or a play.\u003e \u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027",
      "wordCount": 10,
      "order": 53,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Ploy.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Ploy.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Ploy",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Ploy-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ploy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Ploy"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Ploy-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "ploy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Ploy"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Ploy"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Ploy."
                ]
              }
            },
            "sentence": "\u003c|Ploy."
          },
          "jazzyState": {
            "text": "\u003c|Ploy.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Ploy.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Or a play.\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Or a play.",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "Or",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "play",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, play-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "play",
                  "ner": "O",
                  "tag": "NN",
                  "word": "play"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(play-3, Or-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "Or"
                },
                "gov": {
                  "index": "3",
                  "lemma": "play",
                  "ner": "O",
                  "tag": "NN",
                  "word": "play"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(play-3, a-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "3",
                  "lemma": "play",
                  "ner": "O",
                  "tag": "NN",
                  "word": "play"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(play-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "play",
                  "ner": "O",
                  "tag": "NN",
                  "word": "play"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node": {
                  "NN": "play"
                },
                "s_node_0_node": {
                  "CC": "Or"
                },
                "s_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "play.\u003e"
                ]
              }
            },
            "sentence": "Or a play.\u003e"
          },
          "jazzyState": {
            "text": "Or a play.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Or a play.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Why wouldn\u0027t you report and warn?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "would",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "report",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "warn",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, report-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(would-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(would-2, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(report-5, would-2)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                },
                "gov": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(report-5, you-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(report-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(report-5, warn-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "warn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "warn"
                },
                "gov": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(report-5, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "report",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "report"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(warn-7, you-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "7",
                  "lemma": "warn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "warn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "PRP": "you"
                },
                "s_node_1_node_3_node_0_node": {
                  "VB": "report"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "MD": "would"
                },
                "s_node_1_node_3_node_2_node": {
                  "VB": "warn"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Why wouldn\u0027t you report and warn?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,You didn\u0027t ask,\u0027\u0027 says Psycho.",
      "wordCount": 5,
      "order": 54,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,You didn\u0027t ask,\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "You didn\u0027t ask,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "ask",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ask-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "ask",
                  "ner": "O",
                  "tag": "VB",
                  "word": "ask"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(ask-4, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ask",
                  "ner": "O",
                  "tag": "VB",
                  "word": "ask"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(ask-4, did-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ask",
                  "ner": "O",
                  "tag": "VB",
                  "word": "ask"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(ask-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ask",
                  "ner": "O",
                  "tag": "VB",
                  "word": "ask"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ask-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "ask",
                  "ner": "O",
                  "tag": "VB",
                  "word": "ask"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "ask"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,You didn\u0027t ask,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,You didn\u0027t ask,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,You didn\u0027t ask,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk from the light and Psycho. ,,Are my parents dead?\u0027\u0027",
      "wordCount": 11,
      "order": 55,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I walk from the light and Psycho.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk from the light and Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(walk-2, light-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(walk-2, Psycho-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-5, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(light-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(light-5, Psycho-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "light"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I walk from the light and Psycho."
          },
          "jazzyState": {
            "text": "I walk from the light and Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Are my parents dead?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Are my parents dead?",
            "coreAnnotations": [
              {
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dead",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dead-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(my-2, parents-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "2",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dead-4, Are-1)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dead-4, my-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dead-4, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_2_node": {
                  "VBN": "dead"
                },
                "s_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node": {
                  "VBP": "Are"
                },
                "s_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Are my parents dead?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Are my parents dead?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Are my parents dead?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,Your parents are beyond Psycho\u0027s range. They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027",
      "wordCount": 23,
      "order": 56,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Your parents are beyond Psycho\u0027s range.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Your parents are beyond Psycho\u0027s range.",
            "coreAnnotations": [
              {
                "pos": "PRP$",
                "text": "Your",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "beyond",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "range",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, range-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(parents-2, Your-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "Your"
                },
                "gov": {
                  "index": "2",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-5, \u0027s-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(range-7, parents-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(range-7, are-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(range-7, beyond-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "beyond",
                  "ner": "O",
                  "tag": "IN",
                  "word": "beyond"
                },
                "gov": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(range-7, Psycho-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(range-7, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "range",
                  "ner": "O",
                  "tag": "NN",
                  "word": "range"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "range"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "beyond"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_node": {
                  "PRP$": "Your"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "range."
                ]
              }
            },
            "sentence": ",,Your parents are beyond Psycho\u0027s range."
          },
          "jazzyState": {
            "text": ",,Your parents are beyond Psycho\u0027s range.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Your parents are beyond Psycho\u0027s range.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027",
          "wordCount": 15,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "were",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "removed",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "location",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "beyond",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Beltway",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Wall",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, removed-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(removed-3, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(removed-3, They-1)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(removed-3, were-2)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "were"
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(removed-3, location-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "location",
                  "ner": "O",
                  "tag": "NN",
                  "word": "location"
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:beyond(removed-3, Wall-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:beyond"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Wall",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Wall"
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:agent(removed-3, Sentry-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:agent"
                },
                "dep": {
                  "index": "12",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "3",
                  "lemma": "remove",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "removed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(location-5, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "location",
                  "ner": "O",
                  "tag": "NN",
                  "word": "location"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Wall-9, beyond-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "beyond",
                  "ner": "O",
                  "tag": "IN",
                  "word": "beyond"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Wall",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Wall-9, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Wall",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Wall-9, Beltway-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Beltway",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Beltway"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Wall",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Sentry-12, by-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "12",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-12, Secret-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "12",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(Sentry-12, Gee-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "14",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "12",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-14, with-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "14",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-14, Forty-three-15)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "14",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Beltway"
                },
                "s_node_1_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "beyond"
                },
                "s_node_1_node_1_node_3_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "location"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "VBD": "were"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "removed"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node_1_node_2_node": {
                  "NNP": "Wall"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_3_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node_3_node_1_node_0_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node_1_node_3_node_1_node_0_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_3_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_node_3_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Forty-three.\u0027\u0027"
                ]
              }
            },
            "sentence": "They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027"
          },
          "jazzyState": {
            "text": "They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ],
              "Beltway": [
                "belt"
              ]
            }
          },
          "dialogState": {
            "sentence": "They were removed to location beyond the Beltway Wall by Secret Sentry with Gee Forty-three.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Eyelids slide over eyes.",
      "wordCount": 4,
      "order": 57,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Eyelids slide over eyes.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Eyelids slide over eyes.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Eyelids",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "slide",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eyes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slide-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slide-2, Eyelids-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "eyelid",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Eyelids"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(slide-2, eyes-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slide-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(eyes-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NNS": "eyes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "over"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Eyelids"
                },
                "s_node_1_node_0_node": {
                  "VB": "slide"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eyes."
                ]
              }
            },
            "sentence": "Eyelids slide over eyes."
          },
          "jazzyState": {
            "text": "Eyelids slide over eyes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk.",
      "wordCount": 2,
      "order": 58,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walk."
                ]
              }
            },
            "sentence": "I walk."
          },
          "jazzyState": {
            "text": "I walk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, \u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027",
      "wordCount": 19,
      "order": 59,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027",
          "wordCount": 17,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Inside",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Street",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "can",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "show",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "information",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mom",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "dad",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, show-10)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-7, Inside-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "inside",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Inside"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-7, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-7, K-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-7, Street-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Street",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Street"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(building-7, Secret-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-7, Sentry-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(show-10, .-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(show-10, building-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(show-10, I-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(show-10, can-9)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "9",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "can"
                },
                "gov": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(show-10, information-12)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                },
                "gov": {
                  "index": "10",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VB",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(information-12, mom-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "16",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "12",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(information-12, dad-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "18",
                  "lemma": "dad",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dad"
                },
                "gov": {
                  "index": "12",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(information-12, you-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "12",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(information-12, Mustang-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "12",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Mustang-14, mom-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Mustang-14, and-17)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "17",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Mustang-14, dad-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "dad",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dad"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mustang-14, about-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "about",
                  "ner": "O",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mustang-14, ,-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "14",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "MD": "can"
                },
                "s_node_0_node_1_node_2_node": {
                  "NNP": "Street"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_4_node": {
                  "NN": "dad"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_4_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_3_node": {
                  "NNP": "Secret"
                },
                "s_node_0_node_0_node": {
                  "IN": "Inside"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_2_node_1_node_0_node": {
                  "VB": "show"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "Mustang"
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "NN": "information"
                },
                "s_node_0_node_1_node_1_node": {
                  "NNP": "K"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "mom"
                },
                "s_node_2_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "about"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_5_node": {
                  "NN": "building"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "dad.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Inside the K Street Secret Sentry building I can show you information about Mustang, mom and dad.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Enter reason.\u003e",
      "wordCount": 2,
      "order": 60,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Enter reason.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Enter reason.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Enter",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reason",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Enter-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Enter"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Enter-1, reason-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reason",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reason"
                },
                "gov": {
                  "index": "1",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Enter-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NN": "reason"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Enter"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "reason.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Enter reason.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Enter reason.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Enter reason.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Buildings are windows, doors and stone.",
      "wordCount": 6,
      "order": 61,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Buildings are windows, doors and stone.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Buildings are windows, doors and stone.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Buildings",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "windows",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "doors",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stone",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, windows-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(windows-3, Buildings-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Buildings"
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(windows-3, are-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(windows-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(windows-3, doors-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(windows-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(windows-3, stone-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "stone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stone"
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(windows-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "windows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNS": "doors"
                },
                "s_node_0_node": {
                  "NNS": "Buildings"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNS": "windows"
                },
                "s_node_1_node_1_node_4_node": {
                  "NN": "stone"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stone."
                ]
              }
            },
            "sentence": "Buildings are windows, doors and stone."
          },
          "jazzyState": {
            "text": "Buildings are windows, doors and stone.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Word and picture signs hang on stone.",
      "wordCount": 7,
      "order": 62,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Word and picture signs hang on stone.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Word and picture signs hang on stone.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Word",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "picture",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "signs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hang",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stone",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hang-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Word-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "word",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Word"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Word-1, picture-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "picture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "picture"
                },
                "gov": {
                  "index": "1",
                  "lemma": "word",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Word"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(signs-4, Word-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "word",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Word"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(signs-4, picture-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "picture",
                  "ner": "O",
                  "tag": "NN",
                  "word": "picture"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hang-5, signs-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(hang-5, stone-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "7",
                  "lemma": "stone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stone"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hang-5, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(stone-7, on-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "7",
                  "lemma": "stone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stone"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "stone"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "signs"
                },
                "s_node_0_node_2_node": {
                  "NN": "picture"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hang"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NN": "Word"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stone."
                ]
              }
            },
            "sentence": "Word and picture signs hang on stone."
          },
          "jazzyState": {
            "text": "Word and picture signs hang on stone.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|For revenge. Knowledge.\u003e",
      "wordCount": 3,
      "order": 63,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|For revenge.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "For revenge.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "For",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "revenge",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, revenge-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revenge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "revenge"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(revenge-2, For-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "For"
                },
                "gov": {
                  "index": "2",
                  "lemma": "revenge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "revenge"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(revenge-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "revenge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "revenge"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node": {
                  "NN": "revenge"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "For"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "revenge."
                ]
              }
            },
            "sentence": "\u003c|For revenge."
          },
          "jazzyState": {
            "text": "\u003c|For revenge.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|For revenge.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Knowledge.\u003e",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Knowledge.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Knowledge",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Knowledge-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "knowledge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Knowledge"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Knowledge-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "knowledge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Knowledge"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Knowledge"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Knowledge.\u003e"
                ]
              }
            },
            "sentence": "Knowledge.\u003e"
          },
          "jazzyState": {
            "text": "Knowledge.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Knowledge.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Feet stop.",
      "wordCount": 2,
      "order": 64,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Feet stop.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Feet stop.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Feet-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Feet-1, stop-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stop"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Feet-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stop"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Feet"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stop."
                ]
              }
            },
            "sentence": "Feet stop."
          },
          "jazzyState": {
            "text": "Feet stop.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Body is.",
      "wordCount": 2,
      "order": 65,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Body is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Body is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Body-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Body"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Body is."
          },
          "jazzyState": {
            "text": "Body is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water flows over body.",
      "wordCount": 4,
      "order": 66,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water flows over body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water flows over body.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(flows-2, body-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Water flows over body."
          },
          "jazzyState": {
            "text": "Water flows over body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Bright white light shines behind.",
      "wordCount": 5,
      "order": 67,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Bright white light shines behind.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Bright white light shines behind.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shines",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shines-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-4, Bright-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Bright"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-4, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-4, light-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(shines-4, behind-5)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shines-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_1_node_1_node": {
                  "RP": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shines"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Bright"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "Bright white light shines behind."
          },
          "jazzyState": {
            "text": "Bright white light shines behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I killed them.\u003e",
      "wordCount": 3,
      "order": 68,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I killed them.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "I killed them.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "them",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-2, them-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "them"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "them"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "them.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I killed them.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I killed them.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I killed them.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel it true.",
      "wordCount": 4,
      "order": 69,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I feel it true.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel it true.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "true",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(feel-2, true-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "true",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "true"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(true-4, it-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "4",
                  "lemma": "true",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "true"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "true"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "it"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "true."
                ]
              }
            },
            "sentence": "I feel it true."
          },
          "jazzyState": {
            "text": "I feel it true.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 70,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Hollow pain fills body then empties.",
      "wordCount": 6,
      "order": 71,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Hollow pain fills body then empties.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Hollow pain fills body then empties.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Hollow",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "fills",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "empties",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fills-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fill",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "fills"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(pain-2, Hollow-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hollow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Hollow"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fills-3, pain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fill",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "fills"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(fills-3, empties-6)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "empty",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "empties"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fill",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "fills"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fills-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "fill",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "fills"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(empties-6, body-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "6",
                  "lemma": "empty",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "empties"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(empties-6, then-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "6",
                  "lemma": "empty",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "empties"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "pain"
                },
                "s_node_1_node_1_node_2_node": {
                  "VBZ": "empties"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node_1_node": {
                  "RB": "then"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "fills"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "body"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Hollow"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "empties."
                ]
              }
            },
            "sentence": "Hollow pain fills body then empties."
          },
          "jazzyState": {
            "text": "Hollow pain fills body then empties.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027I am sorry,\u0027\u0027 says Psycho to mind.",
      "wordCount": 7,
      "order": 72,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho to mind.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho to mind.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-3, Psycho-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(says-3, mind-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(mind-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VB": "mind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho to mind."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho to mind.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I am sorry,\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am sorry,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "sorry",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sorry-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sorry-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(sorry-3, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sorry-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "sorry"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027I am sorry,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I am sorry,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I am sorry,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I focus forward.",
      "wordCount": 3,
      "order": 73,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I focus forward.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I focus forward.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "focus",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, focus-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(focus-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(focus-2, forward-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(focus-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "forward"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "focus"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forward."
                ]
              }
            },
            "sentence": "I focus forward."
          },
          "jazzyState": {
            "text": "I focus forward.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Sorry.\u0027\u0027",
      "wordCount": 1,
      "order": 74,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Sorry.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Sorry.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Sorry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sorry-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sorry-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Sorry"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Sorry.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Sorry.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Sorry.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Sorry.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Legs pull and push body along sidewalk into the night.",
      "wordCount": 10,
      "order": 75,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Legs pull and push body along sidewalk into the night.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Legs pull and push body along sidewalk into the night.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Legs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "night",
                "net": "TIME"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-2, Legs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pull-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pull-2, push-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-2, body-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(pull-2, night-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "10",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-4, Legs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(body-5, sidewalk-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-7, along-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(night-10, into-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "10",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(night-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "night",
                  "ner": "TIME",
                  "tag": "NN",
                  "word": "night"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "NN": "body"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_4_node_0_node": {
                  "IN": "into"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_4_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBP": "push"
                },
                "s_node_1_node_4_node_1_node_1_node": {
                  "NN": "night"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNS": "Legs"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "night."
                ]
              }
            },
            "sentence": "Legs pull and push body along sidewalk into the night."
          },
          "jazzyState": {
            "text": "Legs pull and push body along sidewalk into the night.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I think, \u003c|I.\u003e",
      "wordCount": 3,
      "order": 76,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|I.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|I.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I wipe face with hand, shake head.",
      "wordCount": 7,
      "order": 77,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I wipe face with hand, shake head.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I wipe face with hand, shake head.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wipe",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "shake",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipe-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipe-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wipe-2, face-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(wipe-2, hand-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipe-2, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "string": "dep(wipe-2, shake-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VB",
                  "word": "shake"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipe-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shake-7, head-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "7",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VB",
                  "word": "shake"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "face"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "hand"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node": {
                  "NN": "head"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_2_node_0_node": {
                  "NN": "shake"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "wipe"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "head."
                ]
              }
            },
            "sentence": "I wipe face with hand, shake head."
          },
          "jazzyState": {
            "text": "I wipe face with hand, shake head.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Mustang had higher death probability not knowing of Psycho,\u0027\u0027 says Psycho. \u0027\u0027Your parents would be confirmed killed.\u0027\u0027",
      "wordCount": 17,
      "order": 78,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Mustang had higher death probability not knowing of Psycho,\u0027\u0027",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Mustang had higher death probability not knowing of Psycho,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": "VBD",
                "text": "had",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "higher",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "death",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "probability",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "knowing",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, had-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "had"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(had-2, Mustang-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "had"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(had-2, probability-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "had"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(had-2, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "had"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(probability-5, higher-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "higher",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "higher"
                },
                "gov": {
                  "index": "5",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(probability-5, death-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "death",
                  "ner": "O",
                  "tag": "NN",
                  "word": "death"
                },
                "gov": {
                  "index": "5",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(probability-5, knowing-7)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "knowing"
                },
                "gov": {
                  "index": "5",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(knowing-7, not-6)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "6",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "7",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "knowing"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(knowing-7, Psycho-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "7",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "knowing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-9, of-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NN": "probability"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "RB": "not"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "JJR": "higher"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VBG": "knowing"
                },
                "s_node_0_node": {
                  "NNP": "Mustang"
                },
                "s_node_1_node_0_node": {
                  "VBD": "had"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "death"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Mustang had higher death probability not knowing of Psycho,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Mustang had higher death probability not knowing of Psycho,\u0027\u0027",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Mustang had higher death probability not knowing of Psycho,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Your parents would be confirmed killed.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Your parents would be confirmed killed.",
            "coreAnnotations": [
              {
                "pos": "PRP$",
                "text": "Your",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "would",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "confirmed",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, confirmed-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(parents-2, Your-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "Your"
                },
                "gov": {
                  "index": "2",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(confirmed-5, parents-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(confirmed-5, would-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "would",
                  "ner": "O",
                  "tag": "MD",
                  "word": "would"
                },
                "gov": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(confirmed-5, be-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                }
              },
              {
                "reln": {
                  "string": "dep(confirmed-5, killed-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                },
                "gov": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(confirmed-5, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "confirm",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "confirmed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VBN": "killed"
                },
                "s_node_1_node_0_node": {
                  "MD": "would"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "PRP$": "Your"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBN": "confirmed"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "killed.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Your parents would be confirmed killed.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Your parents would be confirmed killed.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Your parents would be confirmed killed.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I splash through puddles.",
      "wordCount": 4,
      "order": 79,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I splash through puddles.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I splash through puddles.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puddles",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, splash-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(splash-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(splash-2, puddles-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "4",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(puddles-4, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "4",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "puddles"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puddles."
                ]
              }
            },
            "sentence": "I splash through puddles."
          },
          "jazzyState": {
            "text": "I splash through puddles.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Now forgiven.\u003e",
      "wordCount": 2,
      "order": 80,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Now forgiven.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Now forgiven.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Now",
                "net": "DATE"
              },
              {
                "pos": "VBN",
                "text": "forgiven",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, forgiven-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forgive",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "forgiven"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(forgiven-2, Now-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "now",
                  "ner": "DATE",
                  "tag": "RB",
                  "word": "Now"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forgive",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "forgiven"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(forgiven-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "forgive",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "forgiven"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_1_node": {
                  "VBN": "forgiven"
                },
                "s_node_0_node_0_node": {
                  "RB": "Now"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "forgiven.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Now forgiven.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Now forgiven.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Now forgiven.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I pivot head side to side.",
      "wordCount": 6,
      "order": 81,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I pivot head side to side.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I pivot head side to side.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "pivot",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pivot-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pivot-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pivot-2, side-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pivot-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(side-4, head-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(side-4, side-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(side-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "side"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "side"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "pivot"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "head"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "side."
                ]
              }
            },
            "sentence": "I pivot head side to side."
          },
          "jazzyState": {
            "text": "I pivot head side to side.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain reflects the white light.",
      "wordCount": 5,
      "order": 82,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain reflects the white light.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain reflects the white light.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "reflects",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reflects-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reflects-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(reflects-2, light-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reflects-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "reflect",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reflects"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-5, white-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "white"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "light"
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "reflects"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "Rain reflects the white light."
          },
          "jazzyState": {
            "text": "Rain reflects the white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Heart beats.",
      "wordCount": 2,
      "order": 83,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Heart beats.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Heart beats.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Heart",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "beats",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Heart-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Heart-1, beats-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "beat",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "beats"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Heart-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "beats"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Heart"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "beats."
                ]
              }
            },
            "sentence": "Heart beats."
          },
          "jazzyState": {
            "text": "Heart beats.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Mind feels burning thought.",
      "wordCount": 4,
      "order": 84,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Mind feels burning thought.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Mind feels burning thought.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Mind",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "feels",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "burning",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "thought",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feels-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "feels"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feels-2, Mind-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "feels"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(feels-2, burning-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "burning"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "feels"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feels-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "feels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(burning-3, thought-4)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "thought"
                },
                "gov": {
                  "index": "3",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "burning"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBD": "thought"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Mind"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "feels"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "burning"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "thought."
                ]
              }
            },
            "sentence": "Mind feels burning thought."
          },
          "jazzyState": {
            "text": "Mind feels burning thought.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Eyes focus upon rain and see nothing.",
      "wordCount": 7,
      "order": 85,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Eyes focus upon rain and see nothing.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Eyes focus upon rain and see nothing.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Eyes",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "focus",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "see",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "nothing",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, focus-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(focus-2, Eyes-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Eyes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(focus-2, rain-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(focus-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(focus-2, see-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VB",
                  "word": "see"
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(focus-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "focus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rain-4, upon-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-6, Eyes-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Eyes"
                },
                "gov": {
                  "index": "6",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(see-6, nothing-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nothing"
                },
                "gov": {
                  "index": "6",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VB",
                  "word": "see"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "see"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "nothing"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VB": "focus"
                },
                "s_node_0_node": {
                  "NNS": "Eyes"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "rain"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "nothing."
                ]
              }
            },
            "sentence": "Eyes focus upon rain and see nothing."
          },
          "jazzyState": {
            "text": "Eyes focus upon rain and see nothing.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I think and feel, \u003c|They want Psycho or me in.\u003e",
      "wordCount": 10,
      "order": 86,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I think and feel, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I think and feel, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(think-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(think-2, feel-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think and feel, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think and feel, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|They want Psycho or me in.\u003e",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They want Psycho or me in.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "want",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(want-2, Psycho-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(want-2, me-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(want-2, in-6)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Psycho-3, or-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:or(Psycho-3, me-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:or"
                },
                "dep": {
                  "index": "5",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "PRP": "me"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "RP": "in"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "or"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "want"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "in.\u003e"
                ]
              }
            },
            "sentence": "\u003c|They want Psycho or me in.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|They want Psycho or me in.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|They want Psycho or me in.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The jaw bone pulses.",
      "wordCount": 4,
      "order": 87,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The jaw bone pulses.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The jaw bone pulses.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "jaw",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bone",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pulses",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, jaw-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(jaw-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                }
              },
              {
                "reln": {
                  "string": "dep(jaw-2, pulses-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pulses"
                },
                "gov": {
                  "index": "2",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(jaw-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "jaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pulses-4, bone-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bone"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pulses"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "pulses"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "bone"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "jaw"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pulses."
                ]
              }
            },
            "sentence": "The jaw bone pulses."
          },
          "jazzyState": {
            "text": "The jaw bone pulses.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nose flares and inhales.",
      "wordCount": 4,
      "order": 88,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nose flares and inhales.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nose flares and inhales.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nose",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "flares",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "inhales",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhales-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(flares-2, Nose-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nose",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nose"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flare",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flares"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhales-4, flares-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flare",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flares"
                },
                "gov": {
                  "index": "4",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(inhales-4, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(inhales-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "inhales"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "inhales"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Nose"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flares"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "inhales."
                ]
              }
            },
            "sentence": "Nose flares and inhales."
          },
          "jazzyState": {
            "text": "Nose flares and inhales.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho extends limbs and wraps limbs and creates a coil umbrella.",
      "wordCount": 11,
      "order": 89,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho extends limbs and wraps limbs and creates a coil umbrella.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho extends limbs and wraps limbs and creates a coil umbrella.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "extends",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "wraps",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "creates",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "coil",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "umbrella",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, extends-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(extends-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(extends-2, limbs-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(extends-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(extends-2, wraps-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(extends-2, creates-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(extends-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "extend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "extends"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wraps-5, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wraps-5, limbs-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wraps-5, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(wraps-5, creates-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wraps-5, umbrella-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(umbrella-11, a-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(umbrella-11, coil-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                },
                "gov": {
                  "index": "11",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node": {
                  "VBZ": "creates"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "VBZ": "wraps"
                },
                "s_node_1_node_2_node_3_node_1_node": {
                  "NN": "coil"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_2_node_3_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "extends"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_2_node_3_node_2_node": {
                  "NN": "umbrella"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "umbrella."
                ]
              }
            },
            "sentence": "Psycho extends limbs and wraps limbs and creates a coil umbrella."
          },
          "jazzyState": {
            "text": "Psycho extends limbs and wraps limbs and creates a coil umbrella.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "No rain hits body.",
      "wordCount": 4,
      "order": 90,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "No rain hits body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "No rain hits body.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hits",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hits-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(rain-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hits-3, rain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hits-3, body-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hits-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "hits"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "No rain hits body."
          },
          "jazzyState": {
            "text": "No rain hits body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Where to go?\u003e",
      "wordCount": 3,
      "order": 91,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Where to go?\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Where to go?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "go",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, go-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(go-3, Where-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "where",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(go-3, to-2)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(go-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node_1_node_1_node": {
                  "VB": "go"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "WRB": "Where"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Where to go?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Where to go?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Where to go?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jaw pulses.",
      "wordCount": 2,
      "order": 92,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jaw pulses.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Jaw pulses.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Jaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pulses",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pulses-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pulses"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pulses-2, Jaw-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Jaw"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pulses"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pulses-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pulses"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "pulses"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Jaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pulses."
                ]
              }
            },
            "sentence": "Jaw pulses."
          },
          "jazzyState": {
            "text": "Jaw pulses.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|In the building. Information. Protection to think.\u003e",
      "wordCount": 7,
      "order": 93,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|In the building.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "In the building.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "In",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, building-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-3, In-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "In"
                },
                "gov": {
                  "index": "3",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(building-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "In"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "building."
                ]
              }
            },
            "sentence": "\u003c|In the building."
          },
          "jazzyState": {
            "text": "\u003c|In the building.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|In the building.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Information.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Information.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Information",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Information-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Information"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Information-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Information"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Information"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Information."
                ]
              }
            },
            "sentence": "Information."
          },
          "jazzyState": {
            "text": "Information.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Protection to think.\u003e",
          "wordCount": 3,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Protection to think.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Protection",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Protection-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "protection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Protection"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Protection-1, think-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VB",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "protection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Protection"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Protection-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "protection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Protection"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(think-3, to-2)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "3",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VB",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "VB": "think"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Protection"
                },
                "s_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "think.\u003e"
                ]
              }
            },
            "sentence": "Protection to think.\u003e"
          },
          "jazzyState": {
            "text": "Protection to think.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Protection to think.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I inhale.",
      "wordCount": 2,
      "order": 94,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I inhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I inhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "inhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(inhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "inhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "inhale."
                ]
              }
            },
            "sentence": "I inhale."
          },
          "jazzyState": {
            "text": "I inhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I exhale.",
      "wordCount": 2,
      "order": 95,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I exhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I exhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "exhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, exhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(exhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(exhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "exhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "exhale."
                ]
              }
            },
            "sentence": "I exhale."
          },
          "jazzyState": {
            "text": "I exhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No.\u0027\u0027",
      "wordCount": 1,
      "order": 96,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,No.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,No.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,No.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk away from the white light.",
      "wordCount": 7,
      "order": 97,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk away from the white light.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk away from the white light.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(walk-2, away-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(walk-2, light-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-7, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-7, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-7, white-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "away"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "white"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "I walk away from the white light."
          },
          "jazzyState": {
            "text": "I walk away from the white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Where to go?\u003e",
      "wordCount": 3,
      "order": 98,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Where to go?\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Where to go?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "go",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, go-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(go-3, Where-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "where",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(go-3, to-2)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(go-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node_1_node_1_node": {
                  "VB": "go"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "WRB": "Where"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Where to go?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Where to go?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Where to go?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand on sidewalk corner before a street pool.",
      "wordCount": 9,
      "order": 99,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand on sidewalk corner before a street pool.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand on sidewalk corner before a street pool.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pool",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(stand-2, corner-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stand-2, pool-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-5, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(corner-5, sidewalk-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "5",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(pool-9, before-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pool-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pool-9, street-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "pool"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "corner"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pool."
                ]
              }
            },
            "sentence": "I stand on sidewalk corner before a street pool."
          },
          "jazzyState": {
            "text": "I stand on sidewalk corner before a street pool.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel and think, \u003c|Mom, dad.\u003e",
      "wordCount": 6,
      "order": 100,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Mom, dad.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Mom, dad.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Mom",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "dad",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Mom-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mom-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Mom-1, dad-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "dad",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dad"
                },
                "gov": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mom-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "NN": "dad"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NN": "Mom"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "dad.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Mom, dad.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Mom, dad.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Mom, dad.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 101,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand.",
      "wordCount": 2,
      "order": 102,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I pull tie knot. I pull tie from neck. I pivot head side to side.",
      "wordCount": 15,
      "order": 103,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I pull tie knot.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I pull tie knot.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tie",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "knot",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-2, knot-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "knot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "knot"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(knot-4, tie-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                },
                "gov": {
                  "index": "4",
                  "lemma": "knot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "knot"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "knot"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "tie"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "knot."
                ]
              }
            },
            "sentence": "I pull tie knot."
          },
          "jazzyState": {
            "text": "I pull tie knot.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I pull tie from neck.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I pull tie from neck.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tie",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "neck",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-2, tie-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(pull-2, neck-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "neck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "neck"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(neck-5, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "neck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "neck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "neck"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "tie"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "neck."
                ]
              }
            },
            "sentence": "I pull tie from neck."
          },
          "jazzyState": {
            "text": "I pull tie from neck.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I pivot head side to side.",
          "wordCount": 6,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "I pivot head side to side.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "pivot",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pivot-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pivot-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pivot-2, side-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pivot-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "pivot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(side-4, head-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(side-4, side-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(side-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "side"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "side"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "pivot"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "head"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "side."
                ]
              }
            },
            "sentence": "I pivot head side to side."
          },
          "jazzyState": {
            "text": "I pivot head side to side.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls.",
      "wordCount": 2,
      "order": 104,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "falls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "falls."
                ]
              }
            },
            "sentence": "Rain falls."
          },
          "jazzyState": {
            "text": "Rain falls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I inhale. \u003c|Truth?\u003e I exhale. \u003c|Only information.\u003e I walk.",
      "wordCount": 9,
      "order": 105,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I inhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I inhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "inhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(inhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "inhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "inhale."
                ]
              }
            },
            "sentence": "I inhale."
          },
          "jazzyState": {
            "text": "I inhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Truth?\u003e",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Truth?",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Truth",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Truth-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "truth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Truth"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Truth-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "truth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Truth"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Truth"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Truth?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Truth?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Truth?\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I exhale.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I exhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "exhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, exhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(exhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(exhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "exhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "exhale."
                ]
              }
            },
            "sentence": "I exhale."
          },
          "jazzyState": {
            "text": "I exhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Only information.\u003e",
          "wordCount": 2,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Only information.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Only",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "information",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, information-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(information-2, Only-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "only",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Only"
                },
                "gov": {
                  "index": "2",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(information-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "information",
                  "ner": "O",
                  "tag": "NN",
                  "word": "information"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "information"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "Only"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "information.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Only information.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Only information.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Only information.\u003e",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I walk.",
          "wordCount": 2,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walk."
                ]
              }
            },
            "sentence": "I walk."
          },
          "jazzyState": {
            "text": "I walk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "No rain falls upon body. Water pool splashes.",
      "wordCount": 8,
      "order": 106,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "No rain falls upon body.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "No rain falls upon body.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(rain-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-3, rain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(falls-3, body-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-5, upon-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "No rain falls upon body."
          },
          "jazzyState": {
            "text": "No rain falls upon body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Water pool splashes.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Water pool splashes.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pool",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "splashes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Water-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Water-1, splashes-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Water-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(splashes-3, pool-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                },
                "gov": {
                  "index": "3",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "splashes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "splashes"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pool"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "splashes."
                ]
              }
            },
            "sentence": "Water pool splashes."
          },
          "jazzyState": {
            "text": "Water pool splashes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho follows and holds limb umbrella over body.",
      "wordCount": 8,
      "order": 107,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho follows and holds limb umbrella over body.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho follows and holds limb umbrella over body.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "follows",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "holds",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "umbrella",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, follows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(follows-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(follows-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(follows-2, holds-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(follows-2, umbrella-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(follows-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "follows"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holds-4, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(umbrella-6, limb-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "6",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(umbrella-6, body-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "6",
                  "lemma": "umbrella",
                  "ner": "O",
                  "tag": "NN",
                  "word": "umbrella"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-8, over-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_3_node_0_node_0_node": {
                  "NN": "limb"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "holds"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "follows"
                },
                "s_node_1_node_3_node_0_node_1_node": {
                  "NN": "umbrella"
                },
                "s_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Psycho follows and holds limb umbrella over body."
          },
          "jazzyState": {
            "text": "Psycho follows and holds limb umbrella over body.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I am the puppet.\u003e",
      "wordCount": 4,
      "order": 108,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I am the puppet.\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am the puppet.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puppet",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, puppet-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(puppet-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(puppet-4, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "4",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(puppet-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(puppet-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "puppet"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "puppet.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I am the puppet.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I am the puppet.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I am the puppet.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "No people or machines are visible. Light shines from one window of one building.",
      "wordCount": 14,
      "order": 109,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "No people or machines are visible.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "No people or machines are visible.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "machines",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "visible",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, visible-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "visible",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "visible"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(people-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(people-2, or-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:or(people-2, machines-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:or"
                },
                "dep": {
                  "index": "4",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "machines"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(visible-6, people-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "6",
                  "lemma": "visible",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "visible"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(visible-6, machines-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "machines"
                },
                "gov": {
                  "index": "6",
                  "lemma": "visible",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "visible"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(visible-6, are-5)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "6",
                  "lemma": "visible",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "visible"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(visible-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "visible",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "visible"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "machines"
                },
                "s_node_0_node_2_node": {
                  "CC": "or"
                },
                "s_node_1_node_1_node": {
                  "JJ": "visible"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "people"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "visible."
                ]
              }
            },
            "sentence": "No people or machines are visible."
          },
          "jazzyState": {
            "text": "No people or machines are visible.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Light shines from one window of one building.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Light shines from one window of one building.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shines",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shines-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-2, Light-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(shines-2, window-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(shines-2, building-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shines-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(window-5, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(window-5, one-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(building-8, one-7)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "8",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "CD": "one"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "CD": "one"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node": {
                  "NNP": "Light"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shines"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "window"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "building."
                ]
              }
            },
            "sentence": "Light shines from one window of one building."
          },
          "jazzyState": {
            "text": "Light shines from one window of one building.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Richard and Betty are riding in rickshaw,\u0027\u0027 says Psycho. \u0027\u0027Rickshaw approaches.\u0027\u0027",
      "wordCount": 11,
      "order": 110,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Richard and Betty are riding in rickshaw,\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Richard and Betty are riding in rickshaw,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "riding",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, riding-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-1, Betty-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(riding-5, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(riding-5, Betty-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(riding-5, are-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(riding-5, rickshaw-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(riding-5, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "ride",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "riding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rickshaw-7, in-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBG": "riding"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Richard and Betty are riding in rickshaw,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Richard and Betty are riding in rickshaw,\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Richard and Betty are riding in rickshaw,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Rickshaw approaches.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Rickshaw approaches.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "approaches",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Rickshaw-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Rickshaw",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rickshaw"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Rickshaw-1, approaches-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "approach",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "approaches"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rickshaw",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Rickshaw-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Rickshaw",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Rickshaw"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "approaches"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Rickshaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "approaches.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Rickshaw approaches.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Rickshaw approaches.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Rickshaw approaches.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain hits body.",
      "wordCount": 3,
      "order": 111,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain hits body.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain hits body.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hits",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hits-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hits-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hits-2, body-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hits-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "hits"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Rain hits body."
          },
          "jazzyState": {
            "text": "Rain hits body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk and look behind to K.",
      "wordCount": 7,
      "order": 112,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk and look behind to K.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk and look behind to K.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(walk-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(walk-2, look-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(walk-2, K.-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-7, behind-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "7",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-7, to-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "look"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "behind"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NNP": "K."
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "I walk and look behind to K."
          },
          "jazzyState": {
            "text": "I walk and look behind to K.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho scurries to the white light of K.",
      "wordCount": 8,
      "order": 113,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho scurries to the white light of K.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries to the white light of K.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, scurries-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(scurries-2, light-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-6, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-6, white-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(light-6, K.-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-8, of-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "K."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "Psycho scurries to the white light of K."
          },
          "jazzyState": {
            "text": "Psycho scurries to the white light of K.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stop. \u003e|Another way you kill?\u003c I wrap tie around palm and fingers.",
      "wordCount": 13,
      "order": 114,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I stop.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stop.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stop-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stop-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stop"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stop."
                ]
              }
            },
            "sentence": "I stop."
          },
          "jazzyState": {
            "text": "I stop.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|Another way you kill?\u003c",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Another way you kill?",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "Another",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "way",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, way-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(way-2, Another-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "another",
                  "ner": "O",
                  "tag": "DT",
                  "word": "Another"
                },
                "gov": {
                  "index": "2",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(way-2, kill-4)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                },
                "gov": {
                  "index": "2",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(way-2, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(kill-4, you-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node": {
                  "VBP": "kill"
                },
                "s_node_0_node_1_node": {
                  "NN": "way"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "Another"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003e|Another way you kill?\u003c"
          },
          "jazzyState": {
            "text": "\u003e|Another way you kill?\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|Another way you kill?\u003c",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I wrap tie around palm and fingers.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I wrap tie around palm and fingers.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wrap",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tie",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "palm",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "fingers",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wrap-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wrap"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wrap-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "string": "dep(wrap-2, tie-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tie"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wrap-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(tie-3, palm-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "5",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tie"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(tie-3, fingers-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "7",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "fingers"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tie"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(palm-5, around-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "5",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(palm-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(palm-5, fingers-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "fingers"
                },
                "gov": {
                  "index": "5",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "palm"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "around"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNS": "fingers"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "NNP": "wrap"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "tie"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "fingers."
                ]
              }
            },
            "sentence": "I wrap tie around palm and fingers."
          },
          "jazzyState": {
            "text": "I wrap tie around palm and fingers.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, \u0027\u0027No.\u0027\u0027",
      "wordCount": 3,
      "order": 115,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027No.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u0027\u0027No.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027No.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027No.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027No.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I say, ,,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027",
      "wordCount": 14,
      "order": 116,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027",
          "wordCount": 12,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "arrive",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNP",
                "text": "Killing",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "Machines",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, arrive-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(will-3, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-4, Richard-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "string": "dep(arrive-7, will-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(arrive-7, Betty-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(arrive-7, Richard-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(arrive-7, Gee-10)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(arrive-7, Machines-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Machines"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(arrive-7, ?-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arrive",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "arrive"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-10, before-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "10",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Machines-13, Forty-three-11)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "13",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Machines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Machines-13, Killing-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "Killing",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Killing"
                },
                "gov": {
                  "index": "13",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Machines"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "MD": "will"
                },
                "s_node_3_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_4_node_1_node_1_node_4_node": {
                  "NNP": "Machines"
                },
                "s_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_4_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_1_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_4_node_0_node": {
                  "VB": "arrive"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_4_node_1_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_4_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_5_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "VBG": "Psycho"
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_4_node_1_node_1_node_3_node": {
                  "NNP": "Killing"
                },
                "s_node_3_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Psycho, will Betty and Richard arrive before the Gee Forty-three Killing Machines?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Yes,\u0027\u0027 says Psycho. Psycho scurries across street.",
      "wordCount": 7,
      "order": 117,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Yes,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Yes,",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Yes-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Yes-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Yes"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Yes,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Yes,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Yes,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho scurries across street.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries across street.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "across",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, scurries-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:across(scurries-2, street-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:across"
                },
                "dep": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(scurries-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-4, across-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "across",
                  "ner": "O",
                  "tag": "IN",
                  "word": "across"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "across"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Psycho scurries across street."
          },
          "jazzyState": {
            "text": "Psycho scurries across street.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "K glows white.",
      "wordCount": 3,
      "order": 118,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "K glows white.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "K glows white.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "glows",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, glows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(glows-2, K-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(glows-2, white-3)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(glows-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "white"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "K"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "glows"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "white."
                ]
              }
            },
            "sentence": "K glows white."
          },
          "jazzyState": {
            "text": "K glows white.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls from the sky.",
      "wordCount": 5,
      "order": 119,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls from the sky.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls from the sky.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sky",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(falls-2, sky-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sky",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sky"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sky-5, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sky",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sky"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sky-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sky",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sky"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "sky"
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sky."
                ]
              }
            },
            "sentence": "Rain falls from the sky."
          },
          "jazzyState": {
            "text": "Rain falls from the sky.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|When?\u003c",
      "wordCount": 1,
      "order": 120,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003e|When?\u003c",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "When?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "When",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, When-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "when",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "When"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(When-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "when",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "When"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "When"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003e|When?\u003c"
          },
          "jazzyState": {
            "text": "\u003e|When?\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|When?\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027 says Psycho. Psycho scurries over sidewalk to K white light.",
      "wordCount": 18,
      "order": 121,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three arrival time is before two minutes,",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "arrival",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "minutes",
                "net": "DURATION"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(Gee-1, minutes-8)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(time-4, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(time-4, arrival-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "arrival",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arrival"
                },
                "gov": {
                  "index": "4",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(minutes-8, time-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(minutes-8, is-5)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(minutes-8, before-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(minutes-8, two-7)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "two",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(minutes-8, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "time"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "JJ": "Forty-three"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "CD": "two"
                },
                "s_node_0_node_2_node": {
                  "NN": "arrival"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "minutes"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_0_node_0_node": {
                  "CD": "Gee"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Gee Forty-three arrival time is before two minutes,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho scurries over sidewalk to K white light.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries over sidewalk to K white light.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, scurries-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(scurries-2, sidewalk-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(scurries-2, light-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(scurries-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-8, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(light-8, K-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-8, white-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNP": "K"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "white"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "Psycho scurries over sidewalk to K white light."
          },
          "jazzyState": {
            "text": "Psycho scurries over sidewalk to K white light.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I inhale.",
      "wordCount": 2,
      "order": 122,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I inhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I inhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "inhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(inhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "inhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "inhale."
                ]
              }
            },
            "sentence": "I inhale."
          },
          "jazzyState": {
            "text": "I inhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I exhale.",
      "wordCount": 2,
      "order": 123,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I exhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I exhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "exhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, exhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(exhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(exhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "exhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "exhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "exhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "exhale."
                ]
              }
            },
            "sentence": "I exhale."
          },
          "jazzyState": {
            "text": "I exhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Two minutes. Can\u0027t go to mom and dad.\u003e I think to Psycho, \u003e|Stop. Psycho.\u003c",
      "wordCount": 14,
      "order": 124,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Two minutes.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Two minutes.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Two",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "minutes",
                "net": "DURATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, minutes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(minutes-2, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "2",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(minutes-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "minutes"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "CD": "Two"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "minutes."
                ]
              }
            },
            "sentence": "\u003c|Two minutes."
          },
          "jazzyState": {
            "text": "\u003c|Two minutes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Two minutes.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Can\u0027t go to mom and dad.\u003e",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Can\u0027t go to mom and dad.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Ca",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "go",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mom",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "dad",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, go-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(go-3, Ca-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ca",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Ca"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(go-3, n\u0027t-2)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(go-3, mom-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(go-3, dad-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dad",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dad"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(go-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "VB",
                  "word": "go"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mom-5, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(mom-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(mom-5, dad-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dad",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dad"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_1_node_1_node_2_node": {
                  "NN": "dad"
                },
                "s_node_0_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_0_node_2_node_1_node_1_node_0_node": {
                  "NN": "mom"
                },
                "s_node_0_node_2_node_0_node": {
                  "VB": "go"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "MD": "Ca"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "dad.\u003e"
                ]
              }
            },
            "sentence": "Can\u0027t go to mom and dad.\u003e"
          },
          "jazzyState": {
            "text": "Can\u0027t go to mom and dad.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Can\u0027t go to mom and dad.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I think to Psycho, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think to Psycho, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(think-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-4, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think to Psycho, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think to Psycho, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|Stop.",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Stop.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Stop",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Stop-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Stop-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Stop"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Stop"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|Stop."
                ]
              }
            },
            "sentence": "\u003e|Stop."
          },
          "jazzyState": {
            "text": "\u003e|Stop.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|Stop.",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho.\u003c",
          "wordCount": 1,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Psycho.\u003c"
                ]
              }
            },
            "sentence": "Psycho.\u003c"
          },
          "jazzyState": {
            "text": "Psycho.\u003c",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "Psycho.\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho stops.",
      "wordCount": 2,
      "order": 125,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho stops.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho stops.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "stops"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stops."
                ]
              }
            },
            "sentence": "Psycho stops."
          },
          "jazzyState": {
            "text": "Psycho stops.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The K sump pumps pump and clank.",
      "wordCount": 7,
      "order": 126,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The K sump pumps pump and clank.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "The K sump pumps pump and clank.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pumps",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pump",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "clank",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pump-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pump"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pumps-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pumps-4, K-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pumps-4, sump-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pump-5, pumps-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pump-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pump"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pump-5, clank-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clank"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pump-5, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pump"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clank-7, pumps-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "7",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clank"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "clank"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "pumps"
                },
                "s_node_0_node_2_node": {
                  "NN": "sump"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "K"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pump"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "clank."
                ]
              }
            },
            "sentence": "The K sump pumps pump and clank."
          },
          "jazzyState": {
            "text": "The K sump pumps pump and clank.",
            "misspelledWords": {
              "clank": [
                "clang",
                "clink",
                "clan",
                "crank",
                "flank",
                "clans",
                "blank",
                "plank"
              ],
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk to Psycho.",
      "wordCount": 4,
      "order": 127,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk to Psycho.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk to Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(walk-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I walk to Psycho."
          },
          "jazzyState": {
            "text": "I walk to Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Shoe soles squish with step. Fists clench.",
      "wordCount": 7,
      "order": 128,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Shoe soles squish with step.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Shoe soles squish with step.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Shoe",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "soles",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "squish",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, squish-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "squish",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "squish"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(soles-2, Shoe-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shoe",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Shoe"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "soles"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(squish-3, soles-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "soles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "squish",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "squish"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(squish-3, step-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "3",
                  "lemma": "squish",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "squish"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(squish-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "squish",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "squish"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(step-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "step"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "soles"
                },
                "s_node_1_node_0_node": {
                  "VBP": "squish"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Shoe"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "step."
                ]
              }
            },
            "sentence": "Shoe soles squish with step."
          },
          "jazzyState": {
            "text": "Shoe soles squish with step.",
            "misspelledWords": {
              "squish": [
                "squash"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Fists clench.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Fists clench.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Fists",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "clench",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, clench-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clench-2, Fists-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Fists"
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(clench-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "clench"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Fists"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "clench."
                ]
              }
            },
            "sentence": "Fists clench."
          },
          "jazzyState": {
            "text": "Fists clench.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls. Rain river flows over the sidewalks to the curbs, the drains, the pipes. \u003c|The sump pumps and beyond the Watergate.\u003e",
      "wordCount": 22,
      "order": 129,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Rain falls.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "falls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "falls."
                ]
              }
            },
            "sentence": "Rain falls."
          },
          "jazzyState": {
            "text": "Rain falls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rain river flows over the sidewalks to the curbs, the drains, the pipes.",
          "wordCount": 13,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain river flows over the sidewalks to the curbs, the drains, the pipes.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "river",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "sidewalks",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "curbs",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drains",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pipes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(river-2, Rain-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "river",
                  "ner": "O",
                  "tag": "NN",
                  "word": "river"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-3, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-3, river-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "river",
                  "ner": "O",
                  "tag": "NN",
                  "word": "river"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(flows-3, sidewalks-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalks-6, over-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sidewalks-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(sidewalks-6, curbs-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "9",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curbs"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sidewalks-6, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(sidewalks-6, pipes-15)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "15",
                  "lemma": "pipe",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pipes"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sidewalks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(curbs-9, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(curbs-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(curbs-9, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(curbs-9, drains-12)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "12",
                  "lemma": "drain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drains"
                },
                "gov": {
                  "index": "9",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drains-12, the-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "drain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drains"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pipes-15, the-14)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "14",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "pipe",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pipes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NNS": "curbs"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_1_node": {
                  "NN": "drains"
                },
                "s_node_1_node_2_node_1_node_2_node_2_node_1_node": {
                  "NNS": "pipes"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "sidewalks"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_2_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "river"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pipes."
                ]
              }
            },
            "sentence": "Rain river flows over the sidewalks to the curbs, the drains, the pipes."
          },
          "jazzyState": {
            "text": "Rain river flows over the sidewalks to the curbs, the drains, the pipes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|The sump pumps and beyond the Watergate.\u003e",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "The sump pumps and beyond the Watergate.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pumps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "beyond",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Watergate",
                "net": "LOCATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sump-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sump-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "string": "dep(sump-2, pumps-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "string": "dep(sump-2, Watergate-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Watergate",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Watergate"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sump-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pumps-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pumps-3, Watergate-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Watergate",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Watergate"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Watergate-7, beyond-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "beyond",
                  "ner": "O",
                  "tag": "IN",
                  "word": "beyond"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Watergate",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Watergate"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Watergate-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Watergate",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Watergate"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "RB": "beyond"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "sump"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node": {
                  "NNP": "Watergate"
                },
                "s_node_1_node_0_node": {
                  "NNS": "pumps"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Watergate.\u003e"
                ]
              }
            },
            "sentence": "\u003c|The sump pumps and beyond the Watergate.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|The sump pumps and beyond the Watergate.\u003e",
            "misspelledWords": {
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ],
              "Watergate": [
                "attract"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|The sump pumps and beyond the Watergate.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Shoulders stiffen and muscles tense.",
      "wordCount": 5,
      "order": 130,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Shoulders stiffen and muscles tense.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Shoulders stiffen and muscles tense.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Shoulders",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stiffen",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "muscles",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tense",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stiffen-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stiffen",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stiffen"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stiffen-2, Shoulders-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Shoulders"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stiffen",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stiffen"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(stiffen-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stiffen",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stiffen"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(stiffen-2, tense-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tense",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tense"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stiffen",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stiffen"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stiffen-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stiffen",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stiffen"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(tense-5, Shoulders-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Shoulders"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tense",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tense"
                }
              },
              {
                "reln": {
                  "string": "dep(tense-5, muscles-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tense",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tense"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "tense"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "muscles"
                },
                "s_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "stiffen"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Shoulders"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tense."
                ]
              }
            },
            "sentence": "Shoulders stiffen and muscles tense."
          },
          "jazzyState": {
            "text": "Shoulders stiffen and muscles tense.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water flows along streets and into intersection pools.",
      "wordCount": 8,
      "order": 131,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water flows along streets and into intersection pools.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water flows along streets and into intersection pools.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "streets",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "intersection",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pools",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(flows-2, flows-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(flows-2, streets-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "streets"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(flows-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2\u0027, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(flows-2\u0027, pools-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "8",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pools"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(streets-4, along-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "streets"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(pools-8, into-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pools"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pools-8, intersection-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "intersection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "intersection"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pools"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NNS": "pools"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "NN": "intersection"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "streets"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pools."
                ]
              }
            },
            "sentence": "Water flows along streets and into intersection pools."
          },
          "jazzyState": {
            "text": "Water flows along streets and into intersection pools.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jaw clenches.",
      "wordCount": 2,
      "order": 132,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jaw clenches.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Jaw clenches.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Jaw",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "clenches",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, clenches-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clenches"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clenches-2, Jaw-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Jaw"
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clenches"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(clenches-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clenches"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "clenches"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Jaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "clenches."
                ]
              }
            },
            "sentence": "Jaw clenches."
          },
          "jazzyState": {
            "text": "Jaw clenches.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain washes Democratic and Republic signs in New Roman Times.",
      "wordCount": 10,
      "order": 133,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain washes Democratic and Republic signs in New Roman Times.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain washes Democratic and Republic signs in New Roman Times.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "washes",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Democratic",
                "net": "MISC"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Republic",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "signs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "New",
                "net": "ORGANIZATION"
              },
              {
                "pos": "NNP",
                "text": "Roman",
                "net": "ORGANIZATION"
              },
              {
                "pos": "NNP",
                "text": "Times",
                "net": "ORGANIZATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, washes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wash",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "washes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(washes-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wash",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "washes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(washes-2, signs-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wash",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "washes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(washes-2, Times-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Times",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Times"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wash",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "washes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(washes-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wash",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "washes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Democratic-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "democratic",
                  "ner": "MISC",
                  "tag": "JJ",
                  "word": "Democratic"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Democratic-3, Republic-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "republic",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Republic"
                },
                "gov": {
                  "index": "3",
                  "lemma": "democratic",
                  "ner": "MISC",
                  "tag": "JJ",
                  "word": "Democratic"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(signs-6, Democratic-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "democratic",
                  "ner": "MISC",
                  "tag": "JJ",
                  "word": "Democratic"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(signs-6, Republic-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "republic",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Republic"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Times-10, in-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "10",
                  "lemma": "Times",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Times"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Times-10, New-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "new",
                  "ner": "ORGANIZATION",
                  "tag": "JJ",
                  "word": "New"
                },
                "gov": {
                  "index": "10",
                  "lemma": "Times",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Times"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Times-10, Roman-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Roman",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Roman"
                },
                "gov": {
                  "index": "10",
                  "lemma": "Times",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Times"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "NNS": "signs"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "in"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NNP": "Times"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Republic"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNP": "New"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Roman"
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "washes"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Democratic"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Times."
                ]
              }
            },
            "sentence": "Rain washes Democratic and Republic signs in New Roman Times."
          },
          "jazzyState": {
            "text": "Rain washes Democratic and Republic signs in New Roman Times.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jaw joints pulse.",
      "wordCount": 3,
      "order": 134,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jaw joints pulse.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Jaw joints pulse.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Jaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "joints",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pulse",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, joints-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "joint",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "joints"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(joints-2, Jaw-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "jaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Jaw"
                },
                "gov": {
                  "index": "2",
                  "lemma": "joint",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "joints"
                }
              },
              {
                "reln": {
                  "string": "dep(joints-2, pulse-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pulse"
                },
                "gov": {
                  "index": "2",
                  "lemma": "joint",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "joints"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(joints-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "joint",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "joints"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "pulse"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "joints"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Jaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pulse."
                ]
              }
            },
            "sentence": "Jaw joints pulse."
          },
          "jazzyState": {
            "text": "Jaw joints pulse.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls on body.",
      "wordCount": 4,
      "order": 135,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls on body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls on body.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(falls-2, body-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Rain falls on body."
          },
          "jazzyState": {
            "text": "Rain falls on body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, \u0027\u0027Are you taking my case?\u0027\u0027",
      "wordCount": 7,
      "order": 136,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Are you taking my case?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Are you taking my case?",
            "coreAnnotations": [
              {
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "taking",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "case",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, taking-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "taking"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(taking-3, Are-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "taking"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(taking-3, you-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "taking"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(taking-3, case-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "taking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(taking-3, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "taking"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(case-5, my-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "5",
                  "lemma": "case",
                  "ner": "O",
                  "tag": "NN",
                  "word": "case"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "case"
                },
                "s_node_2_node_0_node": {
                  "VBG": "taking"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Are"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Are you taking my case?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Are you taking my case?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Are you taking my case?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Neck muscles tighten. Hands clench fists.",
      "wordCount": 6,
      "order": 137,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Neck muscles tighten.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Neck muscles tighten.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Neck",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "muscles",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "tighten",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, tighten-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tighten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tighten"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(muscles-2, Neck-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "neck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Neck"
                },
                "gov": {
                  "index": "2",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(tighten-3, muscles-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "muscle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "muscles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tighten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tighten"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tighten-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "tighten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "tighten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "tighten"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "muscles"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Neck"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tighten."
                ]
              }
            },
            "sentence": "Neck muscles tighten."
          },
          "jazzyState": {
            "text": "Neck muscles tighten.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Hands clench fists.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Hands clench fists.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Hands",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "clench",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "fists",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, clench-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clench-2, Hands-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Hands"
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(clench-2, fists-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "fists"
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(clench-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "clench",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "clench"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "fists"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Hands"
                },
                "s_node_1_node_0_node": {
                  "VBP": "clench"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "fists."
                ]
              }
            },
            "sentence": "Hands clench fists."
          },
          "jazzyState": {
            "text": "Hands clench fists.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand and look at Psycho. ,,No.\u0027\u0027",
      "wordCount": 7,
      "order": 138,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I stand and look at Psycho.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand and look at Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(stand-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(stand-2, look-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(stand-2, Psycho-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-6, at-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "look"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I stand and look at Psycho."
          },
          "jazzyState": {
            "text": "I stand and look at Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "No.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,No.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,No.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Heart pounds.",
      "wordCount": 2,
      "order": 139,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Heart pounds.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Heart pounds.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Heart",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pounds",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Heart-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Heart-1, pounds-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pounds"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Heart-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Heart",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Heart"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "pounds"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "CD": "Heart"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pounds."
                ]
              }
            },
            "sentence": "Heart pounds."
          },
          "jazzyState": {
            "text": "Heart pounds.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Psycho. Psycho\u0027s limbs hang. \u003c|Looks like a phallic.\u003e",
      "wordCount": 10,
      "order": 140,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho\u0027s limbs hang.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limbs hang.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hang",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hang-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hang-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hang-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "hang"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hang."
                ]
              }
            },
            "sentence": "Psycho\u0027s limbs hang."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limbs hang.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Looks like a phallic.\u003e",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Looks like a phallic.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "Looks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "like",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "phallic",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Looks-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Looks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:like(Looks-1, phallic-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:like"
                },
                "dep": {
                  "index": "4",
                  "lemma": "phallic",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "phallic"
                },
                "gov": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Looks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Looks-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Looks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(phallic-4, like-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "IN",
                  "word": "like"
                },
                "gov": {
                  "index": "4",
                  "lemma": "phallic",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "phallic"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(phallic-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "phallic",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "phallic"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "phallic"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Looks"
                },
                "s_node_1_node_0_node": {
                  "VBP": "like"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "phallic.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Looks like a phallic.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Looks like a phallic.\u003e",
            "misspelledWords": {
              "phallic": [
                "pluck"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Looks like a phallic.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel and think, \u003c|I\u0027m getting fucked.\u003e I holler above rain and the sump pump motors\u0027 putter. ,,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027",
      "wordCount": 27,
      "order": 141,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|I\u0027m getting fucked.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "I\u0027m getting fucked.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "\u0027m",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "getting",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "fucked",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, getting-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "getting"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(getting-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "getting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(getting-3, \u0027m-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "\u0027m"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "getting"
                }
              },
              {
                "reln": {
                  "string": "dep(getting-3, fucked-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "fuck",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "fucked"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "getting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(getting-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "getting"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "fucked"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027m"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBG": "getting"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "fucked.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I\u0027m getting fucked.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I\u0027m getting fucked.\u003e",
            "misspelledWords": {
              "fucked": [
                "ducked",
                "tucked",
                "sucked",
                "bucked",
                "mucked",
                "lucked"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|I\u0027m getting fucked.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I holler above rain and the sump pump motors\u0027 putter.",
          "wordCount": 10,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler above rain and the sump pump motors\u0027 putter.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "above",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "motors",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "putter",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holler-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holler-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holler-2, rain-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holler-2, putter-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "putter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "putter"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(holler-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(rain-4, above-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "above",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "above"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(rain-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(rain-4, putter-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "putter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "putter"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(motors-9, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "motor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "motors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(motors-9, sump-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "9",
                  "lemma": "motor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "motors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(motors-9, pump-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pump"
                },
                "gov": {
                  "index": "9",
                  "lemma": "motor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "motors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(motors-9, \u0027-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027"
                },
                "gov": {
                  "index": "9",
                  "lemma": "motor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "motors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(putter-11, motors-9)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "9",
                  "lemma": "motor",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "motors"
                },
                "gov": {
                  "index": "11",
                  "lemma": "putter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "putter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "above"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBP": "pump"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_0_node_0_node": {
                  "NNS": "motors"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "rain"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NN": "putter"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "sump"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_0_node": {
                  "VB": "holler"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "putter."
                ]
              }
            },
            "sentence": "I holler above rain and the sump pump motors\u0027 putter."
          },
          "jazzyState": {
            "text": "I holler above rain and the sump pump motors\u0027 putter.",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ],
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "DO",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "YOU",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "KNOW",
                "net": "O"
              },
              {
                "pos": "WDT",
                "text": "WHAT",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "THE",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "SUMP",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "PUMPS",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "ARE",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "SAYING",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "PSYCHO",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DO-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "DO"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(DO-1, KNOW-3)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "KNOW"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DO-1, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "string": "dep(DO-1, PSYCHO-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "PSYCHO",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "PSYCHO"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DO-1, ?-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(KNOW-3, YOU-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "YOU"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "KNOW"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(KNOW-3, SAYING-9)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "9",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "SAYING"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "KNOW"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(PUMPS-7, THE-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "THE"
                },
                "gov": {
                  "index": "7",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "PUMPS"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(PUMPS-7, SUMP-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "SUMP"
                },
                "gov": {
                  "index": "7",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "PUMPS"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(SAYING-9, WHAT-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WDT",
                  "word": "WHAT"
                },
                "gov": {
                  "index": "9",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "SAYING"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(SAYING-9, PUMPS-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "PUMPS"
                },
                "gov": {
                  "index": "9",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "SAYING"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(SAYING-9, ARE-8)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "8",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "ARE"
                },
                "gov": {
                  "index": "9",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "SAYING"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "THE"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node_0_node_2_node": {
                  "NNP": "KNOW"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "PSYCHO"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNP": "SUMP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNPS": "YOU"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NNP": "PUMPS"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "DO"
                },
                "s_node_1_node_0_node": {
                  "VBP": "ARE"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "SAYING"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "WHAT"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,DO YOU KNOW WHAT THE SUMP PUMPS ARE SAYING, PSYCHO?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Psycho.",
      "wordCount": 3,
      "order": 142,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I raise a fist and point index finger at Psycho. ,,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027 bass bellows.",
      "wordCount": 16,
      "order": 143,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I raise a fist and point index finger at Psycho.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I raise a fist and point index finger at Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "raise",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "fist",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "index",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "finger",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, raise-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(raise-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(raise-2, fist-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                },
                "gov": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(raise-2, finger-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "finger"
                },
                "gov": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(raise-2, Psycho-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(raise-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "raise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "raise"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fist-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(fist-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(fist-4, finger-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "finger"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(finger-8, point-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NN",
                  "word": "point"
                },
                "gov": {
                  "index": "8",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "finger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(finger-8, index-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "index",
                  "ner": "O",
                  "tag": "NN",
                  "word": "index"
                },
                "gov": {
                  "index": "8",
                  "lemma": "finger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "finger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-10, at-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "10",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "NN": "point"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_4_node": {
                  "NN": "index"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "fist"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_5_node": {
                  "NN": "finger"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "raise"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I raise a fist and point index finger at Psycho."
          },
          "jazzyState": {
            "text": "I raise a fist and point index finger at Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, bass bellows.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, bass bellows.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bass",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "bellows",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(DIALOG_OBJECT_1-1, bellows-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bellows",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bellows"
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(bellows-4, bass-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bass",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bass"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bellows",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bellows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNS": "bellows"
                },
                "s_node_2_node_0_node": {
                  "NN": "bass"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bellows."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, bass bellows."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, bass bellows.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "THEY\u0027RE SAYING FUCK YOU,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "THEY",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "\u0027RE",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "SAYING",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "FUCK",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "YOU",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, THEY-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "THEY",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "THEY"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(THEY-1, \u0027RE-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027RE",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "\u0027RE"
                },
                "gov": {
                  "index": "1",
                  "lemma": "THEY",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "THEY"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(\u0027RE-2, FUCK-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "FUCK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "FUCK"
                },
                "gov": {
                  "index": "2",
                  "lemma": "\u0027RE",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "\u0027RE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(FUCK-4, SAYING-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "SAYING",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "SAYING"
                },
                "gov": {
                  "index": "4",
                  "lemma": "FUCK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "FUCK"
                }
              },
              {
                "reln": {
                  "string": "dep(FUCK-4, YOU-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "YOU"
                },
                "gov": {
                  "index": "4",
                  "lemma": "FUCK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "FUCK"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(FUCK-4, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "FUCK",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "FUCK"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "SAYING"
                },
                "s_node_1_node_1_node": {
                  "PRP": "YOU"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNP": "\u0027RE"
                },
                "s_node_1_node_0_node": {
                  "VBD": "FUCK"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "THEY"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,THEY\u0027RE SAYING FUCK YOU,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,You do not need to yell,\u0027\u0027 says Psycho. \u0027\u0027I can hear you when you whisper.\u0027\u0027 Psycho scurries toward K.",
      "wordCount": 19,
      "order": 144,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,You do not need to yell,\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "You do not need to yell,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "need",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "yell",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, need-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(need-4, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(need-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(need-4, not-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(need-4, yell-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "yell",
                  "ner": "O",
                  "tag": "VB",
                  "word": "yell"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(need-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VB",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(yell-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "yell",
                  "ner": "O",
                  "tag": "VB",
                  "word": "yell"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "need"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "not"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "VB": "yell"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,You do not need to yell,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,You do not need to yell,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,You do not need to yell,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I can hear you when you whisper.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "I can hear you when you whisper.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "can",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "hear",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "WRB",
                "text": "when",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "whisper",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hear-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hear-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(hear-3, can-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "can"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-3, you-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(hear-3, whisper-7)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "whisper"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(whisper-7, when-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "when",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "when"
                },
                "gov": {
                  "index": "7",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "whisper"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(whisper-7, you-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "7",
                  "lemma": "whisper",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "whisper"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "VBP": "whisper"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "PRP": "you"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "WRB": "when"
                },
                "s_node_1_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "MD": "can"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "hear"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "whisper.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027I can hear you when you whisper.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I can hear you when you whisper.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I can hear you when you whisper.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho scurries toward K.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries toward K.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "toward",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, scurries-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:toward(scurries-2, K.-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:toward"
                },
                "dep": {
                  "index": "4",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-4, toward-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "toward",
                  "ner": "O",
                  "tag": "IN",
                  "word": "toward"
                },
                "gov": {
                  "index": "4",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "toward"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "Psycho scurries toward K."
          },
          "jazzyState": {
            "text": "Psycho scurries toward K.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk toward the bright white light.",
      "wordCount": 7,
      "order": 145,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk toward the bright white light.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk toward the bright white light.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "toward",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:toward(walk-2, light-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:toward"
                },
                "dep": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-7, toward-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "toward",
                  "ner": "O",
                  "tag": "IN",
                  "word": "toward"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-7, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-7, bright-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-7, white-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_3_node": {
                  "NN": "light"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "JJ": "white"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "toward"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "I walk toward the bright white light."
          },
          "jazzyState": {
            "text": "I walk toward the bright white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Feet splash water.",
      "wordCount": 3,
      "order": 146,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Feet splash water.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Feet splash water.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Feet-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Feet-1, water-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Feet-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(water-3, splash-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                },
                "gov": {
                  "index": "3",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "water"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Feet"
                },
                "s_node_1_node_0_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "water."
                ]
              }
            },
            "sentence": "Feet splash water."
          },
          "jazzyState": {
            "text": "Feet splash water.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I splash, splash, splash through intersection pool. \u003c|What form...Water. Water, don\u0027t, let the. Water.\u003e Feet stride along sidewalk. Feet pace with distant quick engine knock of a Watergate subpump engine. I think, \u003c|Water.\u003e I clear throat, swallow.",
      "wordCount": 37,
      "order": 147,
      "sentenceCount": 8,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I splash, splash, splash through intersection pool.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I splash, splash, splash through intersection pool.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "intersection",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pool",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, splash-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(splash-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "string": "dep(splash-2, splash-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(splash-2, splash-6)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(splash-6, pool-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                },
                "gov": {
                  "index": "6",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(pool-9, through-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pool-9, intersection-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "intersection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "intersection"
                },
                "gov": {
                  "index": "9",
                  "lemma": "pool",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pool"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_4_node_0_node": {
                  "VB": "splash"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_4_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_4_node_1_node_1_node_1_node": {
                  "NN": "pool"
                },
                "s_node_1_node_4_node_1_node_1_node_0_node": {
                  "NN": "intersection"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_4_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pool."
                ]
              }
            },
            "sentence": "I splash, splash, splash through intersection pool."
          },
          "jazzyState": {
            "text": "I splash, splash, splash through intersection pool.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|What form...Water.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "What form...Water.",
            "coreAnnotations": [
              {
                "pos": "WDT",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "form",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, form-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "NN",
                  "word": "form"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(form-2, What-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WDT",
                  "word": "What"
                },
                "gov": {
                  "index": "2",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "NN",
                  "word": "form"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(form-2, ...-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "NN",
                  "word": "form"
                }
              },
              {
                "reln": {
                  "string": "dep(form-2, Water-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "NN",
                  "word": "form"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(form-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "NN",
                  "word": "form"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "NNP": "Water"
                },
                "s_node_0_node_1_node": {
                  "NN": "form"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "WP": "What"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ELLIPSIS": [
                  "form...Water."
                ]
              }
            },
            "sentence": "\u003c|What form...Water."
          },
          "jazzyState": {
            "text": "\u003c|What form...Water.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|What form...Water.",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Water, don\u0027t, let the.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Water, don\u0027t, let the.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "let",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, let-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "let"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Water-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              },
              {
                "reln": {
                  "string": "dep(Water-1, do-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Water-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(do-3, n\u0027t-4)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "4",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "3",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(let-6, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "6",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "let"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(let-6, the-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "let"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(let-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "let",
                  "ner": "O",
                  "tag": "VB",
                  "word": "let"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_0_node_2_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_0_node": {
                  "VBP": "let"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Water"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "the."
                ]
              }
            },
            "sentence": "Water, don\u0027t, let the."
          },
          "jazzyState": {
            "text": "Water, don\u0027t, let the.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Water.\u003e",
          "wordCount": 1,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Water.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Water-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Water-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Water"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Water.\u003e"
                ]
              }
            },
            "sentence": "Water.\u003e"
          },
          "jazzyState": {
            "text": "Water.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Water.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Feet stride along sidewalk.",
          "wordCount": 4,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "Feet stride along sidewalk.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stride",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stride-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(stride-2, Feet-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(stride-2, sidewalk-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stride-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-4, along-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "stride"
                },
                "s_node_1_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Feet"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sidewalk."
                ]
              }
            },
            "sentence": "Feet stride along sidewalk."
          },
          "jazzyState": {
            "text": "Feet stride along sidewalk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Feet pace with distant quick engine knock of a Watergate subpump engine.",
          "wordCount": 12,
          "orderParagraph": 6,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Feet pace with distant quick engine knock of a Watergate subpump engine.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pace",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "distant",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "quick",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "engine",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "knock",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Watergate",
                "net": "MISC"
              },
              {
                "pos": "NN",
                "text": "subpump",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "engine",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, knock-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VB",
                  "word": "knock"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pace-2, Feet-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "feet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Feet"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pace"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(pace-2, engine-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "6",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pace"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(engine-6, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "6",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(engine-6, distant-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "distant",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "distant"
                },
                "gov": {
                  "index": "6",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(engine-6, quick-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "quick",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "quick"
                },
                "gov": {
                  "index": "6",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(knock-7, pace-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pace",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pace"
                },
                "gov": {
                  "index": "7",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VB",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(knock-7, engine-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "12",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                },
                "gov": {
                  "index": "7",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VB",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(knock-7, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VB",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(engine-12, of-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "12",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(engine-12, a-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "12",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(engine-12, Watergate-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Watergate",
                  "ner": "MISC",
                  "tag": "NNP",
                  "word": "Watergate"
                },
                "gov": {
                  "index": "12",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(engine-12, subpump-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "subpump"
                },
                "gov": {
                  "index": "12",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node_1_node_0_node_2_node": {
                  "NN": "engine"
                },
                "s_node_0_node_2_node_1_node_1_node_1_node_2_node": {
                  "NN": "subpump"
                },
                "s_node_0_node_1_node": {
                  "NN": "pace"
                },
                "s_node_0_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_1_node_1_node_3_node": {
                  "NN": "engine"
                },
                "s_node_0_node_2_node_1_node_0_node_1_node": {
                  "JJ": "quick"
                },
                "s_node_0_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_2_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Watergate"
                },
                "s_node_0_node_2_node_1_node_0_node_3_node": {
                  "NN": "knock"
                },
                "s_node_0_node_2_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_0_node_0_node": {
                  "JJ": "distant"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node_0_node": {
                  "VB": "Feet"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "engine."
                ]
              }
            },
            "sentence": "Feet pace with distant quick engine knock of a Watergate subpump engine."
          },
          "jazzyState": {
            "text": "Feet pace with distant quick engine knock of a Watergate subpump engine.",
            "misspelledWords": {
              "Watergate": [
                "attract"
              ],
              "subpump": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 7,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Water.\u003e",
          "wordCount": 1,
          "orderParagraph": 7,
          "tense": [],
          "nlpState": {
            "sentence": "Water.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Water-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Water-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Water"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Water.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Water.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Water.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Water.\u003e",
            "originOfDialogFromOrderParagraph": 7,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I clear throat, swallow.",
          "wordCount": 4,
          "orderParagraph": 8,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I clear throat, swallow.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "clear",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "throat",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "swallow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, swallow-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "swallow"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(I-1, throat-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "throat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "throat"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "string": "dep(throat-3, clear-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "clear",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "clear"
                },
                "gov": {
                  "index": "3",
                  "lemma": "throat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "throat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(throat-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "throat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "throat"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(swallow-5, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "5",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "swallow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(swallow-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "swallow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "swallow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "throat"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VB": "clear"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node": {
                  "VB": "swallow"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "swallow."
                ]
              }
            },
            "sentence": "I clear throat, swallow."
          },
          "jazzyState": {
            "text": "I clear throat, swallow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho scurries along building wall.",
      "wordCount": 5,
      "order": 148,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho scurries along building wall.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho scurries along building wall.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, scurries-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(scurries-2, building-4)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(scurries-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(building-4, along-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(building-4, wall-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "building"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Psycho scurries along building wall."
          },
          "jazzyState": {
            "text": "Psycho scurries along building wall.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027I am on a mission for freedom,\u0027\u0027 says Psycho.",
      "wordCount": 9,
      "order": 149,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I am on a mission for freedom,\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I am on a mission for freedom,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mission",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "freedom",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mission-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(mission-5, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(mission-5, am-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mission-5, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(mission-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(mission-5, freedom-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "7",
                  "lemma": "freedom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "freedom"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mission-5, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "mission",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mission"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(freedom-7, for-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "7",
                  "lemma": "freedom",
                  "ner": "O",
                  "tag": "NN",
                  "word": "freedom"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "mission"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "freedom"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027I am on a mission for freedom,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I am on a mission for freedom,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027I am on a mission for freedom,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I.\u003e I grin. ,,You are a killing machine.\u0027\u0027",
      "wordCount": 8,
      "order": 150,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|I.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I grin.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I grin.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "grin",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, grin-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "grin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grin"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grin-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(grin-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "grin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grin"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "grin"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "grin."
                ]
              }
            },
            "sentence": "I grin."
          },
          "jazzyState": {
            "text": "I grin.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,You are a killing machine.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "You are a killing machine.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "killing",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "machine",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, machine-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(machine-5, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(machine-5, are-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(machine-5, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(machine-5, killing-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "killing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "killing"
                },
                "gov": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(machine-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBG": "killing"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "machine"
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "machine.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,You are a killing machine.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,You are a killing machine.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,You are a killing machine.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027 says Psycho.",
      "wordCount": 17,
      "order": 151,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027",
          "wordCount": 15,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I do not kill with endless questions with endless answers to pause the process kill,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "endless",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "questions",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "endless",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "answers",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "pause",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "process",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, kill-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(kill-4, ,-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(kill-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(kill-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(kill-4, not-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(kill-4, questions-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(kill-4, pause-12)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "pause",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pause"
                },
                "gov": {
                  "index": "4",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(questions-7, with-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(questions-7, endless-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "endless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "endless"
                },
                "gov": {
                  "index": "7",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(questions-7, answers-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "10",
                  "lemma": "answer",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "answers"
                },
                "gov": {
                  "index": "7",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(answers-10, with-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "10",
                  "lemma": "answer",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "answers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(answers-10, endless-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "endless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "endless"
                },
                "gov": {
                  "index": "10",
                  "lemma": "answer",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "answers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(pause-12, to-11)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "11",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "12",
                  "lemma": "pause",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pause"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pause-12, kill-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                },
                "gov": {
                  "index": "12",
                  "lemma": "pause",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pause"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(kill-15, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(kill-15, process-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "process",
                  "ner": "O",
                  "tag": "NN",
                  "word": "process"
                },
                "gov": {
                  "index": "15",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "kill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node_0_node": {
                  "JJ": "endless"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node_1_node": {
                  "NNS": "questions"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "endless"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_0_node": {
                  "VB": "kill"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node": {
                  "VB": "kill"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "not"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_0_node_1_node": {
                  "NN": "process"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "answers"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "VB": "pause"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I do not kill with endless questions with endless answers to pause the process kill,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|They are reading.\u003e I think, wipe face with tie wrapped hand.",
      "wordCount": 11,
      "order": 152,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|They are reading.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "They are reading.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "reading",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reading-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reading-3, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "3",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(reading-3, are-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "3",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reading-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "VBG": "reading"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "reading.\u003e"
                ]
              }
            },
            "sentence": "\u003c|They are reading.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|They are reading.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|They are reading.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, wipe face with tie wrapped hand.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present",
            "Past"
          ],
          "nlpState": {
            "sentence": "I think, wipe face with tie wrapped hand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wipe",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tie",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "wrapped",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "string": "dep(think-2, wipe-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(think-2, face-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(face-5, tie-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                },
                "gov": {
                  "index": "5",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tie-7, with-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(tie-7, wrapped-8)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "wrapped"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wrapped-8, hand-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "8",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "wrapped"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "NN": "face"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_node_1_node_1_node_0_node": {
                  "NN": "tie"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_0_node": {
                  "VBN": "wrapped"
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_3_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBP": "wipe"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hand."
                ]
              }
            },
            "sentence": "I think, wipe face with tie wrapped hand."
          },
          "jazzyState": {
            "text": "I think, wipe face with tie wrapped hand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The K sump pumps stop white noise talk.",
      "wordCount": 8,
      "order": 153,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The K sump pumps stop white noise talk.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The K sump pumps stop white noise talk.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pumps",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "noise",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "talk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stop-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pumps-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pumps-4, K-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pumps-4, sump-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stop-5, pumps-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(stop-5, talk-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "talk"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-5, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(talk-8, white-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "8",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(talk-8, noise-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "noise",
                  "ner": "O",
                  "tag": "NN",
                  "word": "noise"
                },
                "gov": {
                  "index": "8",
                  "lemma": "talk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "talk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "noise"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "pumps"
                },
                "s_node_0_node_2_node": {
                  "NN": "sump"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "K"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "talk"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stop"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "talk."
                ]
              }
            },
            "sentence": "The K sump pumps stop white noise talk."
          },
          "jazzyState": {
            "text": "The K sump pumps stop white noise talk.",
            "misspelledWords": {
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I. I.\u003e I nod. \u003c|...Been shown have taught Psycho I.\u003e I walk slow. \u003e|Hello, everyone reading my mind record. This thought I see to you.\u003c",
      "wordCount": 25,
      "order": 154,
      "sentenceCount": 7,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|I."
                ]
              }
            },
            "sentence": "\u003c|I."
          },
          "jazzyState": {
            "text": "\u003c|I.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I.\u003e",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "I.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I.-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "i.",
                  "ner": "O",
                  "tag": "NN",
                  "word": "I."
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "I."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "I.\u003e"
                ]
              }
            },
            "sentence": "I.\u003e"
          },
          "jazzyState": {
            "text": "I.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "I.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I nod.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "I nod.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "nod",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, nod-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "nod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nod"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(nod-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "nod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nod"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(nod-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "nod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nod"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "nod"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "nod."
                ]
              }
            },
            "sentence": "I nod."
          },
          "jazzyState": {
            "text": "I nod.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|...Been shown have taught Psycho I.\u003e",
          "wordCount": 6,
          "orderParagraph": 4,
          "tense": [
            "PastParticiple",
            "PastParticiple",
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "...Been shown have taught Psycho I.",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "Been",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "shown",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "taught",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "I.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shown-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "shown"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shown-3, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "3",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "shown"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(shown-3, Been-2)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "Been"
                },
                "gov": {
                  "index": "3",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "shown"
                }
              },
              {
                "reln": {
                  "string": "dep(shown-3, taught-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "teach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "taught"
                },
                "gov": {
                  "index": "3",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "shown"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(shown-3, I.-7)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "7",
                  "lemma": "I.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "I."
                },
                "gov": {
                  "index": "3",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "shown"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(taught-5, have-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "5",
                  "lemma": "teach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "taught"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(I.-7, Psycho-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "7",
                  "lemma": "I.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "I."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node_0_node": {
                  "JJ": "have"
                },
                "s_node_1_node": {
                  "RB": "Been"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node_1_node_2_node": {
                  "NNP": "I."
                },
                "s_node_2_node_0_node": {
                  "NNP": "shown"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "COLON": "..."
                },
                "s_node_2_node_1_node_0_node_1_node": {
                  "JJ": "taught"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|...Been",
                  "I.\u003e"
                ]
              }
            },
            "sentence": "\u003c|...Been shown have taught Psycho I.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|...Been shown have taught Psycho I.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|...Been shown have taught Psycho I.\u003e",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I walk slow.",
          "wordCount": 3,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk slow.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "slow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(walk-2, slow-3)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "slow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "slow"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "slow"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "slow."
                ]
              }
            },
            "sentence": "I walk slow."
          },
          "jazzyState": {
            "text": "I walk slow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|Hello, everyone reading my mind record.",
          "wordCount": 6,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "Hello, everyone reading my mind record.",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Hello",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "everyone",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reading",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "record",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reading-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "discourse(reading-4, Hello-1)",
                  "name": "discourse element",
                  "tag": "discourse"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hello",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Hello"
                },
                "gov": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reading-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(reading-4, everyone-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "everyone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "everyone"
                },
                "gov": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "string": "dep(reading-4, record-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "NN",
                  "word": "record"
                },
                "gov": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reading-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(mind-6, my-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(record-7, mind-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "7",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "NN",
                  "word": "record"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_3_node_1_node_2_node": {
                  "NN": "record"
                },
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_2_node": {
                  "NN": "everyone"
                },
                "s_node_3_node_0_node": {
                  "VBZ": "reading"
                },
                "s_node_3_node_1_node_1_node": {
                  "NN": "mind"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "UH": "Hello"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "record."
                ]
              }
            },
            "sentence": "\u003e|Hello, everyone reading my mind record."
          },
          "jazzyState": {
            "text": "\u003e|Hello, everyone reading my mind record.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|Hello, everyone reading my mind record.",
            "originOfDialogFromOrderParagraph": 6,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "This thought I see to you.\u003c",
          "wordCount": 6,
          "orderParagraph": 7,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "This thought I see to you.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "This",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "thought",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "see",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(thought-2, This-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "This"
                },
                "gov": {
                  "index": "2",
                  "lemma": "thought",
                  "ner": "O",
                  "tag": "NN",
                  "word": "thought"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, thought-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "thought",
                  "ner": "O",
                  "tag": "NN",
                  "word": "thought"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(see-4, you-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(you-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBP": "see"
                },
                "s_node_0_node": {
                  "DT": "This"
                },
                "s_node_1_node_0_node": {
                  "VBD": "thought"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "PRP": "you"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "you.\u003c"
                ]
              }
            },
            "sentence": "This thought I see to you.\u003c"
          },
          "jazzyState": {
            "text": "This thought I see to you.\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "This thought I see to you.\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027 says Psycho.",
      "wordCount": 10,
      "order": 155,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Yes, the government and congov are reading you,",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "government",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "reading",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, government-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "discourse(government-4, Yes-1)",
                  "name": "discourse element",
                  "tag": "discourse"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "4",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(government-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(government-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:and(government-4, congov-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "4",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-6, and-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(congov-6, reading-8)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                },
                "gov": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(reading-8, are-7)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "7",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "8",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(reading-8, you-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "8",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reading-8, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "reading"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "NX"
                },
                "s_node_2_node_1_node_0_node": {
                  "NN": "government"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NX"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "RB": "congov"
                },
                "s_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_4_node_1_node_1_node": {
                  "PRP": "you"
                },
                "s_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_0_node": {
                  "VBG": "reading"
                },
                "s_node_5_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "RB": "Yes"
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Yes, the government and congov are reading you,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|No hope of life beyond Psycho.\u003e I walk across intersection. ,,How tapped am I?\u0027\u0027",
      "wordCount": 14,
      "order": 156,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|No hope of life beyond Psycho.\u003e",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No hope of life beyond Psycho.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hope",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "life",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "beyond",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hope-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hope"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(hope-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hope"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(hope-2, life-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "4",
                  "lemma": "life",
                  "ner": "O",
                  "tag": "NN",
                  "word": "life"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hope"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:beyond(hope-2, Psycho-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:beyond"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hope"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hope-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hope",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hope"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(life-4, of-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "4",
                  "lemma": "life",
                  "ner": "O",
                  "tag": "NN",
                  "word": "life"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-6, beyond-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "beyond",
                  "ner": "O",
                  "tag": "IN",
                  "word": "beyond"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_node": {
                  "NN": "life"
                },
                "s_node_2_node_0_node": {
                  "IN": "beyond"
                },
                "s_node_0_node_1_node": {
                  "NN": "hope"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Psycho.\u003e"
                ]
              }
            },
            "sentence": "\u003c|No hope of life beyond Psycho.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|No hope of life beyond Psycho.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|No hope of life beyond Psycho.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I walk across intersection.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk across intersection.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "across",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "intersection",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:across(walk-2, intersection-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:across"
                },
                "dep": {
                  "index": "4",
                  "lemma": "intersection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "intersection"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(intersection-4, across-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "across",
                  "ner": "O",
                  "tag": "IN",
                  "word": "across"
                },
                "gov": {
                  "index": "4",
                  "lemma": "intersection",
                  "ner": "O",
                  "tag": "NN",
                  "word": "intersection"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "intersection"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "across"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "intersection."
                ]
              }
            },
            "sentence": "I walk across intersection."
          },
          "jazzyState": {
            "text": "I walk across intersection.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How tapped am I?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "How tapped am I?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "tapped",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "am",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, tapped-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "tapped"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(tapped-2, How-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "tapped"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(tapped-2, I-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "tapped"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tapped-2, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "tapped"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(I-4, am-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "am",
                  "ner": "O",
                  "tag": "RB",
                  "word": "am"
                },
                "gov": {
                  "index": "4",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "I"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "JJ": "tapped"
                },
                "s_node_1_node_0_node": {
                  "VBP": "am"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How tapped am I?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How tapped am I?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,How tapped am I?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027",
      "wordCount": 15,
      "order": 157,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PastParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The government is contracted with congov for congov to record your non-text senses.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "government",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "contracted",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "record",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "non-text",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "senses",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, contracted-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(government-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(contracted-4, government-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(contracted-4, is-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(contracted-4, congov-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(contracted-4, record-10)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "VB",
                  "word": "record"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(contracted-4, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "contracted"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-6, with-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(congov-6, congov-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "8",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "6",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-8, for-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "8",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(record-10, to-9)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "9",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "10",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "VB",
                  "word": "record"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(record-10, senses-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "sens",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "senses"
                },
                "gov": {
                  "index": "10",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "VB",
                  "word": "record"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(senses-13, your-11)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "11",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "13",
                  "lemma": "sens",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "senses"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(senses-13, non-text-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "non-text",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "non-text"
                },
                "gov": {
                  "index": "13",
                  "lemma": "sens",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "senses"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "PRP$": "your"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_2_node": {
                  "NNS": "senses"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "congov"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "contracted"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "JJ": "non-text"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "government"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "congov"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "record"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "senses.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027",
            "misspelledWords": {
              "text": [
                "texts",
                "tent",
                "test",
                "next",
                "TeX"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,The government is contracted with congov for congov to record your non-text senses.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look left and right along the cross street.",
      "wordCount": 9,
      "order": 158,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look left and right along the cross street.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look left and right along the cross street.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "left",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "right",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "cross",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, left-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "left",
                  "ner": "O",
                  "tag": "RB",
                  "word": "left"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, right-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "RB",
                  "word": "right"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(look-2, street-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(left-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "left",
                  "ner": "O",
                  "tag": "RB",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(left-3, right-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "RB",
                  "word": "right"
                },
                "gov": {
                  "index": "3",
                  "lemma": "left",
                  "ner": "O",
                  "tag": "RB",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-9, along-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(street-9, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(street-9, cross-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "cross",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "cross"
                },
                "gov": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "along"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "street"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "RB": "right"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "cross"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "RB": "left"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "I look left and right along the cross street."
          },
          "jazzyState": {
            "text": "I look left and right along the cross street.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Darkness and rain are.",
      "wordCount": 4,
      "order": 159,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Darkness and rain are.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Darkness and rain are.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Darkness",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, are-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Darkness-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "darkness",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Darkness"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Darkness-1, rain-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "1",
                  "lemma": "darkness",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Darkness"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(are-4, Darkness-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "darkness",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Darkness"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(are-4, rain-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(are-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "are"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "rain"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node": {
                  "NN": "Darkness"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "are."
                ]
              }
            },
            "sentence": "Darkness and rain are."
          },
          "jazzyState": {
            "text": "Darkness and rain are.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho scurries before.",
      "wordCount": 3,
      "order": 160,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho scurries before.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho scurries before.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scurries",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, before-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scurries-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(before-3, scurries-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "scurry",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scurries"
                },
                "gov": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(before-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "before"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "scurries"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "before."
                ]
              }
            },
            "sentence": "Psycho scurries before."
          },
          "jazzyState": {
            "text": "Psycho scurries before.",
            "misspelledWords": {
              "scurries": [
                "curries",
                "scurried"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stride corner to curb to sidewalk.",
      "wordCount": 7,
      "order": 161,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stride corner to curb to sidewalk.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I stride corner to curb to sidewalk.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stride",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "curb",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stride-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stride-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(stride-2, corner-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(stride-2, curb-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "VB",
                  "word": "curb"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stride-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(curb-5, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "VB",
                  "word": "curb"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(curb-5, sidewalk-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "5",
                  "lemma": "curb",
                  "ner": "O",
                  "tag": "VB",
                  "word": "curb"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-7, to-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "corner"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "VB": "curb"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "stride"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sidewalk."
                ]
              }
            },
            "sentence": "I stride corner to curb to sidewalk."
          },
          "jazzyState": {
            "text": "I stride corner to curb to sidewalk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "No rain falls upon body.",
      "wordCount": 5,
      "order": 162,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "No rain falls upon body.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "No rain falls upon body.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(rain-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-3, rain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(falls-3, body-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-5, upon-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "No rain falls upon body."
          },
          "jazzyState": {
            "text": "No rain falls upon body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Heat radiates above.",
      "wordCount": 3,
      "order": 163,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Heat radiates above.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Heat radiates above.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Heat",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "radiates",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "above",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, radiates-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(radiates-2, Heat-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "heat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Heat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(radiates-2, above-3)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "above",
                  "ner": "O",
                  "tag": "IN",
                  "word": "above"
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(radiates-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "radiate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "radiates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "above"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Heat"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "radiates"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "above."
                ]
              }
            },
            "sentence": "Heat radiates above."
          },
          "jazzyState": {
            "text": "Heat radiates above.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look up.",
      "wordCount": 3,
      "order": 164,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look up.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look up.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "up",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(look-2, up-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "up",
                  "ner": "O",
                  "tag": "RP",
                  "word": "up"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "up"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "up."
                ]
              }
            },
            "sentence": "I look up."
          },
          "jazzyState": {
            "text": "I look up.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s limb coil covers.",
      "wordCount": 4,
      "order": 165,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s limb coil covers.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limb coil covers.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "coil",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "covers",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, covers-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "covers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(coil-4, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "4",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(coil-4, limb-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "4",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(covers-5, coil-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "covers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(covers-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "covers"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "covers"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "coil"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "covers."
                ]
              }
            },
            "sentence": "Psycho\u0027s limb coil covers."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limb coil covers.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Path, reason to enter building.\u003e I think. I look forward, say, ,,Do Betty and Richard know?\u0027\u0027 \u003c|They are watched,\u003e I think.",
      "wordCount": 21,
      "order": 166,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Path, reason to enter building.\u003e",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Path, reason to enter building.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Path",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reason",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Path-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Path"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Path-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Path-1, reason-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "reason",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reason"
                },
                "gov": {
                  "index": "1",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Path"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Path-1, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(reason-3, enter-5)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reason",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reason"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(enter-5, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(enter-5, building-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "VB": "enter"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "NN": "reason"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NN": "Path"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "building.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Path, reason to enter building.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Path, reason to enter building.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Path, reason to enter building.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I think.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "think"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "think."
                ]
              }
            },
            "sentence": "I think."
          },
          "jazzyState": {
            "text": "I think.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look forward, say, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I look forward, say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(look-2, I-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(look-2, say-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, DIALOG_OBJECT_1-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(say-5, forward-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-5, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRN"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_1_node_0_node_1_node": {
                  "RB": "forward"
                },
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node": {
                  "VB": "say"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "look"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_0_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I look forward, say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I look forward, say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Do Betty and Richard know?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Do Betty and Richard know?",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Do",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Do-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(Do-1, know-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Do-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-2, Richard-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-5, Betty-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-5, Richard-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "VB": "know"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Do"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Do Betty and Richard know?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Do Betty and Richard know?\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Do Betty and Richard know?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, I think.",
          "wordCount": 2,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I think.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "think"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "think."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I think."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I think.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|They are watched,\u003e",
          "wordCount": 3,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "They are watched,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "watched",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, watched-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "watch",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "watched"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(watched-3, They-1)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "3",
                  "lemma": "watch",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "watched"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(watched-3, are-2)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "3",
                  "lemma": "watch",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "watched"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(watched-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "watch",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "watched"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "VBN": "watched"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|They are watched,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|They are watched,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|They are watched,\u003e",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Richard and Betty are unaware their records are being read,\u0027\u0027 says Psycho. Psycho lowers limbs from limb coil.",
      "wordCount": 18,
      "order": 167,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Richard and Betty are unaware their records are being read,\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Richard and Betty are unaware their records are being read,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "unaware",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "their",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "records",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "being",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "read",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, unaware-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-1, Betty-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(unaware-5, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(unaware-5, Betty-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(unaware-5, are-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(unaware-5, read-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "read"
                },
                "gov": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(unaware-5, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "unaware",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unaware"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(records-7, their-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "their"
                },
                "gov": {
                  "index": "7",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "records"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(read-10, records-7)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "7",
                  "lemma": "record",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "records"
                },
                "gov": {
                  "index": "10",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(read-10, are-8)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "8",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "10",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(read-10, being-9)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "9",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "being"
                },
                "gov": {
                  "index": "10",
                  "lemma": "read",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "read"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "PRP$": "their"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "being"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "VBN": "read"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "unaware"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNS": "records"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Richard and Betty are unaware their records are being read,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Richard and Betty are unaware their records are being read,\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Richard and Betty are unaware their records are being read,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho lowers limbs from limb coil.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho lowers limbs from limb coil.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lowers",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "coil",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lowers-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lowers-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lowers-2, limbs-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(lowers-2, coil-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lowers-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(coil-6, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "6",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(coil-6, limb-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "6",
                  "lemma": "coil",
                  "ner": "O",
                  "tag": "NN",
                  "word": "coil"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "coil"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lowers"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "limb"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "coil."
                ]
              }
            },
            "sentence": "Psycho lowers limbs from limb coil."
          },
          "jazzyState": {
            "text": "Psycho lowers limbs from limb coil.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls upon body.",
      "wordCount": 4,
      "order": 168,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls upon body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls upon body.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(falls-2, body-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-4, upon-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Rain falls upon body."
          },
          "jazzyState": {
            "text": "Rain falls upon body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Read,\u0027\u0027 I say. I stare upon Psycho\u0027s core. I see to Psycho, \u003e|Abuse.\u003c I look to the bright white light.",
      "wordCount": 20,
      "order": 169,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I say.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I say.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, say-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "say"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "say."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I say."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I say.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Read,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Read,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Read",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Read-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Read",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Read"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Read-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Read",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Read"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Read"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Read,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Read,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Read,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stare upon Psycho\u0027s core.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stare upon Psycho\u0027s core.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stare",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stare-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stare-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(stare-2, core-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stare-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, \u0027s-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-6, upon-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-6, Psycho-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stare"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "core."
                ]
              }
            },
            "sentence": "I stare upon Psycho\u0027s core."
          },
          "jazzyState": {
            "text": "I stare upon Psycho\u0027s core.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I see to Psycho, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I see to Psycho, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "see",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(see-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-4, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "see"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I see to Psycho, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I see to Psycho, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|Abuse.\u003c",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Abuse.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Abuse",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Abuse-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "abuse",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Abuse"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Abuse-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "abuse",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Abuse"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Abuse"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|Abuse.\u003c"
                ]
              }
            },
            "sentence": "\u003e|Abuse.\u003c"
          },
          "jazzyState": {
            "text": "\u003e|Abuse.\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|Abuse.\u003c",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I look to the bright white light.",
          "wordCount": 7,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look to the bright white light.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(look-2, light-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-7, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-7, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-7, bright-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-7, white-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_3_node": {
                  "NN": "light"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "JJ": "white"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "I look to the bright white light."
          },
          "jazzyState": {
            "text": "I look to the bright white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A rickshaw rolls along K.",
      "wordCount": 5,
      "order": 170,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A rickshaw rolls along K.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A rickshaw rolls along K.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rickshaw-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "string": "dep(rickshaw-2, rolls-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(rolls-3, K.-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "5",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-5, along-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "5",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "NNS": "rolls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "along"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "A rickshaw rolls along K."
          },
          "jazzyState": {
            "text": "A rickshaw rolls along K.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Rain falls.",
      "wordCount": 2,
      "order": 171,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Rain falls.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain falls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Rain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "falls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "falls."
                ]
              }
            },
            "sentence": "Rain falls."
          },
          "jazzyState": {
            "text": "Rain falls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look up.",
      "wordCount": 3,
      "order": 172,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look up.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look up.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "up",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(look-2, up-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "up",
                  "ner": "O",
                  "tag": "RP",
                  "word": "up"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "up"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "up."
                ]
              }
            },
            "sentence": "I look up."
          },
          "jazzyState": {
            "text": "I look up.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho crawls on building wall. ,,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027 says Psycho.",
      "wordCount": 19,
      "order": 173,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho crawls on building wall.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho crawls on building wall.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "crawls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, crawls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "crawls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(crawls-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "crawls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(crawls-2, building-4)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                },
                "gov": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "crawls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(crawls-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "crawls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(building-4, on-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(building-4, wall-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "crawls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "building"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Psycho crawls on building wall."
          },
          "jazzyState": {
            "text": "Psycho crawls on building wall.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027",
          "wordCount": 12,
          "orderParagraph": 2,
          "tense": [
            "PastParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,",
            "coreAnnotations": [
              {
                "pos": "VBN",
                "text": "Estimated",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "arrival",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "DURATION"
              },
              {
                "pos": "NN",
                "text": "minute",
                "net": "DURATION"
              },
              {
                "pos": "CD",
                "text": "twenty-three",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "seconds",
                "net": "DURATION"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, minute-10)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(time-2, Estimated-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "estimate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "Estimated"
                },
                "gov": {
                  "index": "2",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(time-2, arrival-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "4",
                  "lemma": "arrival",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arrival"
                },
                "gov": {
                  "index": "2",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(arrival-4, of-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "4",
                  "lemma": "arrival",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arrival"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(arrival-4, Gee-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "arrival",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arrival"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-6, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-6, Forty-three-7)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "6",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(minute-10, time-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(minute-10, is-8)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "8",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(minute-10, one-9)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "one",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "string": "dep(minute-10, seconds-12)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "12",
                  "lemma": "seconds",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "seconds"
                },
                "gov": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(minute-10, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "10",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(seconds-12, twenty-three-11)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "twenty-three",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "twenty-three"
                },
                "gov": {
                  "index": "12",
                  "lemma": "seconds",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "seconds"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "NNS": "seconds"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_2_node": {
                  "JJ": "twenty-three"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "time"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node": {
                  "JJ": "minute"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "arrival"
                },
                "s_node_0_node_0_node_0_node": {
                  "JJ": "Estimated"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "CD": "one"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Estimated time of arrival of Gee Forty-three is one minute twenty-three seconds,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water falls from face.",
      "wordCount": 4,
      "order": 174,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water falls from face.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water falls from face.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(falls-2, face-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(face-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "face"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "face."
                ]
              }
            },
            "sentence": "Water falls from face."
          },
          "jazzyState": {
            "text": "Water falls from face.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|You want to me to enter.\u003c I stand and stare at K.",
      "wordCount": 12,
      "order": 175,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003e|You want to me to enter.\u003c",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "You want to me to enter.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "want",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-2, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(want-2, me-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(want-2, enter-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(me-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(enter-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "PRP": "me"
                },
                "s_node_1_node_2_node_1_node": {
                  "VB": "enter"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_node_0_node": {
                  "VBP": "want"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "enter.\u003c"
                ]
              }
            },
            "sentence": "\u003e|You want to me to enter.\u003c"
          },
          "jazzyState": {
            "text": "\u003e|You want to me to enter.\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|You want to me to enter.\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand and stare at K.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand and stare at K.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stare",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(stand-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(stand-2, stare-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(stand-2, K.-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "6",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stare-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-6, at-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "6",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "stare"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "I stand and stare at K."
          },
          "jazzyState": {
            "text": "I stand and stare at K.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Dick, please.\u0027\u0027 A limb tip opens and forms a tiny radar. \u0027\u0027Dick, we have no time to waste. Richard and Betty are near the K Street building.\u0027\u0027\n \nThe sump pumps of K and the subpump of Watergate clank and spirt.",
      "wordCount": 40,
      "order": 176,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Dick, please.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Dick, please.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Dick",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "please",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, please-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(please-3, Dick-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(please-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(please-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "VB": "please"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Dick"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "please.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Dick, please.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Dick, please.\u0027\u0027",
            "misspelledWords": {
              "Dick": [
                "tick",
                "dicky",
                "deck",
                "dock",
                "duck",
                "pick",
                "sick",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick",
                "disk"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Dick, please.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "A limb tip opens and forms a tiny radar.",
          "wordCount": 9,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "A limb tip opens and forms a tiny radar.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tip",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "opens",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "forms",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tiny",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "radar",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, opens-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tip-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(tip-3, limb-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(opens-4, tip-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(opens-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(opens-4, forms-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "forms"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(opens-4, radar-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "radar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "radar"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(opens-4, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(forms-6, tip-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                },
                "gov": {
                  "index": "6",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "forms"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(radar-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "radar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "radar"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(radar-9, tiny-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "tiny",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tiny"
                },
                "gov": {
                  "index": "9",
                  "lemma": "radar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "radar"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_3_node_2_node": {
                  "NN": "radar"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "forms"
                },
                "s_node_0_node_2_node": {
                  "NN": "tip"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node": {
                  "JJ": "tiny"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "opens"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "radar."
                ]
              }
            },
            "sentence": "A limb tip opens and forms a tiny radar."
          },
          "jazzyState": {
            "text": "A limb tip opens and forms a tiny radar.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Dick, we have no time to waste.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Dick, we have no time to waste.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Dick",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "no",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "waste",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, have-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-4, Dick-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(have-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-4, we-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-4, time-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(have-4, waste-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "waste",
                  "ner": "O",
                  "tag": "NN",
                  "word": "waste"
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(have-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(time-6, no-5)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "5",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "no"
                },
                "gov": {
                  "index": "6",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(waste-8, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "waste",
                  "ner": "O",
                  "tag": "NN",
                  "word": "waste"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_0_node": {
                  "DT": "no"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node": {
                  "PRP": "we"
                },
                "s_node_3_node_0_node": {
                  "VBP": "have"
                },
                "s_node_3_node_1_node_1_node": {
                  "NN": "time"
                },
                "s_node_3_node_1_node_2_node_1_node": {
                  "VB": "waste"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "Dick"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "waste."
                ]
              }
            },
            "sentence": "\u0027\u0027Dick, we have no time to waste."
          },
          "jazzyState": {
            "text": "\u0027\u0027Dick, we have no time to waste.",
            "misspelledWords": {
              "Dick": [
                "tick",
                "dicky",
                "deck",
                "dock",
                "duck",
                "pick",
                "sick",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick",
                "disk"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Dick, we have no time to waste.",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Richard and Betty are near the K Street building.\u0027\u0027",
          "wordCount": 9,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard and Betty are near the K Street building.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "near",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K",
                "net": "LOCATION"
              },
              {
                "pos": "NNP",
                "text": "Street",
                "net": "LOCATION"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, building-9)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-1, Betty-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(building-9, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(building-9, Betty-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(building-9, are-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-9, near-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "IN",
                  "word": "near"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-9, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-9, K-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "K",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-9, Street-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Street",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Street"
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(building-9, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Street"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "NN": "building"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "K"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "near"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "building.\u0027\u0027"
                ]
              }
            },
            "sentence": "Richard and Betty are near the K Street building.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Richard and Betty are near the K Street building.\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": "Richard and Betty are near the K Street building.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The sump pumps of K and the subpump of Watergate clank and spirt.",
          "wordCount": 13,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "The sump pumps of K and the subpump of Watergate clank and spirt.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sump",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "pumps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "subpump",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Watergate",
                "net": "MISC"
              },
              {
                "pos": "NN",
                "text": "clank",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "spirt",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pumps-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pumps-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pumps-3, sump-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sump"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(pumps-3, K-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "5",
                  "lemma": "k",
                  "ner": "O",
                  "tag": "NN",
                  "word": "K"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(pumps-3, subpump-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "subpump"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(pumps-3, clank-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "11",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clank"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(pumps-3, spirt-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "13",
                  "lemma": "spirt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spirt"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pumps-3, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pump",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K-5, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "5",
                  "lemma": "k",
                  "ner": "O",
                  "tag": "NN",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(K-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "k",
                  "ner": "O",
                  "tag": "NN",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(K-5, subpump-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "subpump"
                },
                "gov": {
                  "index": "5",
                  "lemma": "k",
                  "ner": "O",
                  "tag": "NN",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(subpump-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "subpump",
                  "ner": "O",
                  "tag": "NN",
                  "word": "subpump"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(clank-11, of-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "11",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clank"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(clank-11, Watergate-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Watergate",
                  "ner": "MISC",
                  "tag": "NNP",
                  "word": "Watergate"
                },
                "gov": {
                  "index": "11",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clank"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(clank-11, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clank"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(clank-11, spirt-13)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "13",
                  "lemma": "spirt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spirt"
                },
                "gov": {
                  "index": "11",
                  "lemma": "clank",
                  "ner": "O",
                  "tag": "NN",
                  "word": "clank"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node_2_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_0_node_1_node": {
                  "NN": "subpump"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "NNP": "Watergate"
                },
                "s_node_0_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node_1_node": {
                  "NNP": "K"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node": {
                  "VBP": "spirt"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node_1_node": {
                  "NN": "sump"
                },
                "s_node_0_node_0_node_0_node_2_node": {
                  "NNS": "pumps"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_0_node": {
                  "VBP": "clank"
                },
                "s_node_0_node_2_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "spirt."
                ]
              }
            },
            "sentence": "The sump pumps of K and the subpump of Watergate clank and spirt."
          },
          "jazzyState": {
            "text": "The sump pumps of K and the subpump of Watergate clank and spirt.",
            "misspelledWords": {
              "clank": [
                "clang",
                "clink",
                "clan",
                "crank",
                "flank",
                "clans",
                "blank",
                "plank"
              ],
              "sump": [
                "sup",
                "sum",
                "stump",
                "slump",
                "dump",
                "sums",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump"
              ],
              "Watergate": [
                "attract"
              ],
              "subpump": [],
              "spirt": [
                "spirit",
                "sport",
                "spurt",
                "spit",
                "skirt",
                "shirt",
                "spire"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|They want Psycho to enter.\u003e I wipe face with hand. I stand.",
      "wordCount": 12,
      "order": 177,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|They want Psycho to enter.\u003e",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "They want Psycho to enter.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "want",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(want-2, Psycho-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(want-2, enter-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "want",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(enter-5, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VB": "enter"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "want"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "enter.\u003e"
                ]
              }
            },
            "sentence": "\u003c|They want Psycho to enter.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|They want Psycho to enter.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|They want Psycho to enter.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I wipe face with hand.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I wipe face with hand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wipe",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipe-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipe-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wipe-2, face-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(wipe-2, hand-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipe-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hand-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "hand"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "face"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "wipe"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hand."
                ]
              }
            },
            "sentence": "I wipe face with hand."
          },
          "jazzyState": {
            "text": "I wipe face with hand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I think, \u003c|No shadow. No people. No bikes. No cars. No lit street diodes at corners.\u003e I look at building tops.",
      "wordCount": 21,
      "order": 178,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|No shadow.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No shadow.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shadow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shadow-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shadow"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(shadow-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shadow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shadow-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shadow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "shadow"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shadow."
                ]
              }
            },
            "sentence": "\u003c|No shadow."
          },
          "jazzyState": {
            "text": "\u003c|No shadow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|No shadow.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "No people.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "No people.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, people-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(people-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(people-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "people"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "people"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "people."
                ]
              }
            },
            "sentence": "No people."
          },
          "jazzyState": {
            "text": "No people.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No bikes.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "No bikes.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "bikes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, bikes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bike",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bikes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(bikes-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "bike",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bikes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(bikes-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "bike",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bikes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "bikes"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bikes."
                ]
              }
            },
            "sentence": "No bikes."
          },
          "jazzyState": {
            "text": "No bikes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No cars.",
          "wordCount": 2,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "No cars.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "cars",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cars-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "car",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cars"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(cars-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "car",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cars"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cars-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "car",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "cars"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cars."
                ]
              }
            },
            "sentence": "No cars."
          },
          "jazzyState": {
            "text": "No cars.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "No lit street diodes at corners.\u003e",
          "wordCount": 6,
          "orderParagraph": 5,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "No lit street diodes at corners.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "lit",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "diodes",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "corners",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lit-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lit"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lit-2, No-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lit"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lit-2, diodes-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "diode",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "diodes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lit"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(lit-2, corners-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "corners"
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lit-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lit"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(diodes-4, street-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "4",
                  "lemma": "diode",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "diodes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corners-6, at-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "corners"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "corners"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "street"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "lit"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "diodes"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "corners.\u003e"
                ]
              }
            },
            "sentence": "No lit street diodes at corners.\u003e"
          },
          "jazzyState": {
            "text": "No lit street diodes at corners.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "No lit street diodes at corners.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at building tops.",
          "wordCount": 5,
          "orderParagraph": 6,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I look at building tops.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "tops",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, tops-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "5",
                  "lemma": "top",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tops"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tops-5, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "5",
                  "lemma": "top",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tops-5, building-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                },
                "gov": {
                  "index": "5",
                  "lemma": "top",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tops"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "tops"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "building"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tops."
                ]
              }
            },
            "sentence": "I look at building tops."
          },
          "jazzyState": {
            "text": "I look at building tops.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Frontal lobescans, wave guns, body scanners on buildings point to K.",
      "wordCount": 11,
      "order": 179,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Frontal lobescans, wave guns, body scanners on buildings point to K.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Frontal lobescans, wave guns, body scanners on buildings point to K.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Frontal",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lobescans",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wave",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "guns",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "scanners",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "buildings",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, point-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(lobescans-2, Frontal-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "frontal",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Frontal"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lobescan",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lobescans"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(guns-5, wave-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wave"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gun",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guns"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(guns-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "gun",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(guns-5, scanners-8)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "8",
                  "lemma": "scanner",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scanners"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gun",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(scanners-8, body-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "8",
                  "lemma": "scanner",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scanners"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(scanners-8, buildings-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "10",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "buildings"
                },
                "gov": {
                  "index": "8",
                  "lemma": "scanner",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "scanners"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(buildings-10, on-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "10",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "buildings"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-11, lobescans-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lobescan",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lobescans"
                },
                "gov": {
                  "index": "11",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(point-11, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-11, guns-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "gun",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guns"
                },
                "gov": {
                  "index": "11",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(point-11, K.-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "13",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "11",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-13, to-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "13",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_4_node_0_node": {
                  "NN": "body"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "lobescans"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "point"
                },
                "s_node_0_node_2_node_1_node": {
                  "NNS": "guns"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_0_node": {
                  "JJ": "Frontal"
                },
                "s_node_0_node_2_node_0_node": {
                  "NN": "wave"
                },
                "s_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNS": "buildings"
                },
                "s_node_0_node_4_node_1_node": {
                  "NNS": "scanners"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "Frontal lobescans, wave guns, body scanners on buildings point to K."
          },
          "jazzyState": {
            "text": "Frontal lobescans, wave guns, body scanners on buildings point to K.",
            "misspelledWords": {
              "lobescans": [],
              "Frontal": [
                "friendly"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel and think, \u003c|Mustang.\u003e",
      "wordCount": 5,
      "order": 180,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Mustang.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Mustang.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Mustang-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mustang-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Mustang",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Mustang"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Mustang"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Mustang.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Mustang.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Mustang.\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Mustang.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The rain stops.",
      "wordCount": 3,
      "order": 181,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The rain stops.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The rain stops.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rain-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-3, rain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "stops"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rain"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stops."
                ]
              }
            },
            "sentence": "The rain stops."
          },
          "jazzyState": {
            "text": "The rain stops.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water drips from nose, drips from shirt cuff, drips from collar.",
      "wordCount": 11,
      "order": 182,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water drips from nose, drips from shirt cuff, drips from collar.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Water drips from nose, drips from shirt cuff, drips from collar.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "nose",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shirt",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cuff",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "collar",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drips-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drips-2, nose-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "nose",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nose"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "string": "dep(drips-2, drips-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "string": "dep(drips-2, drips-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(nose-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "nose",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nose"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drips-6, cuff-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "9",
                  "lemma": "cuff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cuff"
                },
                "gov": {
                  "index": "6",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cuff-9, from-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "9",
                  "lemma": "cuff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cuff"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cuff-9, shirt-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "shirt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shirt"
                },
                "gov": {
                  "index": "9",
                  "lemma": "cuff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cuff"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drips-11, collar-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "13",
                  "lemma": "collar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "collar"
                },
                "gov": {
                  "index": "11",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(collar-13, from-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "13",
                  "lemma": "collar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "collar"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "drips"
                },
                "s_node_3_node_0_node": {
                  "NNP": "cuff"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "nose"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "drips"
                },
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_2_node_0_node": {
                  "NNS": "drips"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "shirt"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_1_node_1_node": {
                  "NN": "collar"
                },
                "s_node_3_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "collar."
                ]
              }
            },
            "sentence": "Water drips from nose, drips from shirt cuff, drips from collar."
          },
          "jazzyState": {
            "text": "Water drips from nose, drips from shirt cuff, drips from collar.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Sorry, Dick.\u0027\u0027 Psycho\u0027s tiny radar dish closes. Psycho leaps from building wall and lands before me. Limbs splash water upon sidewalk. Limbs lift, twist, form arms and spread. \u003c|For a hug.\u003e",
      "wordCount": 31,
      "order": 183,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Sorry, Dick.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Sorry, Dick.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Sorry",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Dick",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Dick-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Dick-3, Sorry-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Dick-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Dick-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "Dick",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Dick"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "NNP": "Dick"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "Sorry"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Dick.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Sorry, Dick.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Sorry, Dick.\u0027\u0027",
            "misspelledWords": {
              "Dick": [
                "tick",
                "dicky",
                "deck",
                "dock",
                "duck",
                "pick",
                "sick",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick",
                "disk"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Sorry, Dick.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho\u0027s tiny radar dish closes.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s tiny radar dish closes.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tiny",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "radar",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "dish",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "closes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, closes-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(dish-5, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "5",
                  "lemma": "dish",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dish"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dish-5, tiny-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tiny",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tiny"
                },
                "gov": {
                  "index": "5",
                  "lemma": "dish",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dish"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(dish-5, radar-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "radar",
                  "ner": "O",
                  "tag": "NN",
                  "word": "radar"
                },
                "gov": {
                  "index": "5",
                  "lemma": "dish",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dish"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(closes-6, dish-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "dish",
                  "ner": "O",
                  "tag": "NN",
                  "word": "dish"
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(closes-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "closes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "dish"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "radar"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "tiny"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "closes."
                ]
              }
            },
            "sentence": "Psycho\u0027s tiny radar dish closes."
          },
          "jazzyState": {
            "text": "Psycho\u0027s tiny radar dish closes.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho leaps from building wall and lands before me.",
          "wordCount": 9,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho leaps from building wall and lands before me.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "leaps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lands",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, leaps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "leap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leaps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leaps-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leaps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(leaps-2, building-4)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(leaps-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "leap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leaps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(building-4, from-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(building-4, wall-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(building-4, lands-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(building-4, me-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "9",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "4",
                  "lemma": "build",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wall-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(wall-5, lands-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(me-9, before-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "9",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "PRP": "me"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "wall"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBG": "building"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNS": "lands"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "leaps"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "me."
                ]
              }
            },
            "sentence": "Psycho leaps from building wall and lands before me."
          },
          "jazzyState": {
            "text": "Psycho leaps from building wall and lands before me.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Limbs splash water upon sidewalk.",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Limbs splash water upon sidewalk.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, splash-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(splash-2, Limbs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(splash-2, water-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(splash-2, sidewalk-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(splash-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "splash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-5, upon-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "upon"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "water"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_node_0_node": {
                  "VBP": "splash"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sidewalk."
                ]
              }
            },
            "sentence": "Limbs splash water upon sidewalk."
          },
          "jazzyState": {
            "text": "Limbs splash water upon sidewalk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Limbs lift, twist, form arms and spread.",
          "wordCount": 7,
          "orderParagraph": 5,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Limbs lift, twist, form arms and spread.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "lift",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "twist",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "form",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "arms",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "spread",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Limbs-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Limbs-1, lift-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                },
                "gov": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Limbs-1, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lift-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "string": "dep(lift-2, twist-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "twist",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "twist"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lift-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "string": "dep(lift-2, form-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "form",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "form"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lift-2, arms-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arms"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lift-2, spread-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spread"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(arms-7, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arms"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(arms-7, spread-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spread"
                },
                "gov": {
                  "index": "7",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "arms"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node": {
                  "VBD": "spread"
                },
                "s_node_1_node_0_node_4_node": {
                  "VBP": "form"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "lift"
                },
                "s_node_1_node_0_node_2_node": {
                  "VBP": "twist"
                },
                "s_node_1_node_0_node_5_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_node_0_node_5_node": {
                  "NNS": "arms"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "spread."
                ]
              }
            },
            "sentence": "Limbs lift, twist, form arms and spread."
          },
          "jazzyState": {
            "text": "Limbs lift, twist, form arms and spread.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|For a hug.\u003e",
          "wordCount": 3,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "For a hug.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "For",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hug",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hug-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hug"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hug-3, For-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "For"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hug"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(hug-3, a-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hug"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hug-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "hug",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hug"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "hug"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "For"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "hug.\u003e"
                ]
              }
            },
            "sentence": "\u003c|For a hug.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|For a hug.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|For a hug.\u003e",
            "originOfDialogFromOrderParagraph": 6,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Sorry.\u0027\u0027 I look at Psycho\u0027s core.",
      "wordCount": 6,
      "order": 184,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,Sorry.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Sorry.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Sorry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sorry-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sorry-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Sorry"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Sorry.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Sorry.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Sorry.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Sorry.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at Psycho\u0027s core.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at Psycho\u0027s core.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, core-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, \u0027s-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-6, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-6, Psycho-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "core."
                ]
              }
            },
            "sentence": "I look at Psycho\u0027s core."
          },
          "jazzyState": {
            "text": "I look at Psycho\u0027s core.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Core glows a dim blue. The limbs are still.",
      "wordCount": 9,
      "order": 185,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Core glows a dim blue.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Core glows a dim blue.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Core",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "glows",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dim",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blue",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, glows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(glows-2, Core-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Core"
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(glows-2, blue-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blue"
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(glows-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(blue-5, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blue"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(blue-5, dim-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dim"
                },
                "gov": {
                  "index": "5",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blue"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "dim"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "blue"
                },
                "s_node_0_node": {
                  "NNP": "Core"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "glows"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "blue."
                ]
              }
            },
            "sentence": "Core glows a dim blue."
          },
          "jazzyState": {
            "text": "Core glows a dim blue.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The limbs are still.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The limbs are still.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "still",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, are-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limbs-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(are-3, limbs-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(are-3, still-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "still",
                  "ner": "O",
                  "tag": "RB",
                  "word": "still"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(are-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "still"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "still."
                ]
              }
            },
            "sentence": "The limbs are still."
          },
          "jazzyState": {
            "text": "The limbs are still.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Do you know what sorry means?\u0027\u0027",
      "wordCount": 6,
      "order": 186,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Do you know what sorry means?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Do you know what sorry means?",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Do",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": "WP",
                "text": "what",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "sorry",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "means",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Do-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(Do-1, know-3)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Do-1, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-3, you-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(know-3, means-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "means",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "means"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(means-6, what-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "6",
                  "lemma": "means",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "means"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(means-6, sorry-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                },
                "gov": {
                  "index": "6",
                  "lemma": "means",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "means"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node_1_node_0_node": {
                  "WP": "what"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "NNP": "sorry"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VB": "know"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "VBZ": "means"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Do"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Do you know what sorry means?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Do you know what sorry means?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Do you know what sorry means?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Yes,\u0027\u0027 says Psycho.",
      "wordCount": 3,
      "order": 187,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Yes,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Yes,",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Yes-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Yes-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Yes"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Yes,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Yes,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Yes,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A breeze becomes a gust then a breeze.",
      "wordCount": 8,
      "order": 188,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A breeze becomes a gust then a breeze.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A breeze becomes a gust then a breeze.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "breeze",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "becomes",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "gust",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "breeze",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, becomes-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "become",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "becomes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(breeze-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "breeze",
                  "ner": "O",
                  "tag": "NN",
                  "word": "breeze"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(becomes-3, breeze-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "breeze",
                  "ner": "O",
                  "tag": "NN",
                  "word": "breeze"
                },
                "gov": {
                  "index": "3",
                  "lemma": "become",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "becomes"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(becomes-3, gust-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "gust",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gust"
                },
                "gov": {
                  "index": "3",
                  "lemma": "become",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "becomes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(becomes-3, then-6)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "3",
                  "lemma": "become",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "becomes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(becomes-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "become",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "becomes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(gust-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gust",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gust"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(then-6, breeze-8)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "breeze",
                  "ner": "O",
                  "tag": "NN",
                  "word": "breeze"
                },
                "gov": {
                  "index": "6",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(breeze-8, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "8",
                  "lemma": "breeze",
                  "ner": "O",
                  "tag": "NN",
                  "word": "breeze"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "RB": "then"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "breeze"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "gust"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "breeze"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "becomes"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "breeze."
                ]
              }
            },
            "sentence": "A breeze becomes a gust then a breeze."
          },
          "jazzyState": {
            "text": "A breeze becomes a gust then a breeze.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Water drops from eves and awnings. Rain puddles flow way.",
      "wordCount": 10,
      "order": 189,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Water drops from eves and awnings.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water drops from eves and awnings.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drops",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eves",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "awnings",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drops-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drops-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Water",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drops-2, eves-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "eve",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eves"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drops-2, awnings-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "awning",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "awnings"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drops-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(eves-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "eve",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eves"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(eves-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "eve",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eves"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(eves-4, awnings-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "awning",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "awnings"
                },
                "gov": {
                  "index": "4",
                  "lemma": "eve",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eves"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNS": "awnings"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "drops"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNS": "eves"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "awnings."
                ]
              }
            },
            "sentence": "Water drops from eves and awnings."
          },
          "jazzyState": {
            "text": "Water drops from eves and awnings.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Rain puddles flow way.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Rain puddles flow way.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Rain",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puddles",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "flow",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "way",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flow-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "flow"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(puddles-2, Rain-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "rain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Rain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flow-3, puddles-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "puddle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puddles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "flow"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(flow-3, way-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "way",
                  "ner": "O",
                  "tag": "NN",
                  "word": "way"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "flow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flow-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "flow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "way"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "puddles"
                },
                "s_node_1_node_0_node": {
                  "VBP": "flow"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NN": "Rain"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "way."
                ]
              }
            },
            "sentence": "Rain puddles flow way."
          },
          "jazzyState": {
            "text": "Rain puddles flow way.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|A machine sorry.\u003e",
      "wordCount": 3,
      "order": 190,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|A machine sorry.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A machine sorry.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "machine",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "sorry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sorry-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(machine-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "string": "dep(sorry-3, machine-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sorry-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "sorry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "sorry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "JJ": "sorry"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "machine"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "sorry.\u003e"
                ]
              }
            },
            "sentence": "\u003c|A machine sorry.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|A machine sorry.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|A machine sorry.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho is motionless. Water drips from limbs.",
      "wordCount": 7,
      "order": 191,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho is motionless.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho is motionless.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "motionless",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, motionless-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "motionless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "motionless"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(motionless-3, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "motionless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "motionless"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(motionless-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "motionless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "motionless"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(motionless-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "motionless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "motionless"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "motionless"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "motionless."
                ]
              }
            },
            "sentence": "Psycho is motionless."
          },
          "jazzyState": {
            "text": "Psycho is motionless.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Water drips from limbs.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Water drips from limbs.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Water",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drips-2, Water-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Water"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(drips-2, limbs-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(limbs-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Water"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "drips"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "limbs."
                ]
              }
            },
            "sentence": "Water drips from limbs."
          },
          "jazzyState": {
            "text": "Water drips from limbs.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Another puppet born.\u003e",
      "wordCount": 3,
      "order": 192,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Another puppet born.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Another puppet born.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "Another",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puppet",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "born",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, born-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "born"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(puppet-2, Another-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "another",
                  "ner": "O",
                  "tag": "DT",
                  "word": "Another"
                },
                "gov": {
                  "index": "2",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(born-3, puppet-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                },
                "gov": {
                  "index": "3",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "born"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(born-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "bear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "born"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBN": "born"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "puppet"
                },
                "s_node_0_node_0_node": {
                  "DT": "Another"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "born.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Another puppet born.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Another puppet born.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Another puppet born.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Big bright white light shines.",
      "wordCount": 5,
      "order": 193,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Big bright white light shines.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Big bright white light shines.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Big",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shines",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Big-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Big"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Big-1, shines-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                },
                "gov": {
                  "index": "1",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Big"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Big-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Big"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-5, bright-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-5, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-5, light-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shines"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "light"
                },
                "s_node_0_node_2_node": {
                  "JJ": "white"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Big"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shines."
                ]
              }
            },
            "sentence": "Big bright white light shines."
          },
          "jazzyState": {
            "text": "Big bright white light shines.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|We are the same,\u003c I see. \u003c|I killed Mustang.\u003e",
      "wordCount": 9,
      "order": 194,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I see.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I see.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "see",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "see"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "see"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "see."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I see."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I see.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|We are the same,\u003c",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "We are the same,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "same",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, same-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "same",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "same"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(same-4, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "4",
                  "lemma": "same",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "same"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(same-4, are-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "4",
                  "lemma": "same",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "same"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(same-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "same",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "same"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(same-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "same",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "same"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "same"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003e|We are the same,\u003c"
          },
          "jazzyState": {
            "text": "\u003e|We are the same,\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|We are the same,\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|I killed Mustang.\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "I killed Mustang.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Mustang",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-2, Mustang-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Mustang",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Mustang"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "killed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mustang"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Mustang.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I killed Mustang.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I killed Mustang.\u003e",
            "misspelledWords": {
              "Mustang": [
                "misting"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|I killed Mustang.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Nothing is.",
      "wordCount": 2,
      "order": 195,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Nothing is.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Nothing is.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Nothing",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, Nothing-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Nothing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "Nothing is."
          },
          "jazzyState": {
            "text": "Nothing is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk toward the white light, say, ,,Which building?\u0027\u0027",
      "wordCount": 9,
      "order": 196,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I walk toward the white light, say, DIALOG_OBJECT_1",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk toward the white light, say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "toward",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:toward(walk-2, DIALOG_OBJECT_1-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:toward"
                },
                "dep": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-8, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-8, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(DIALOG_OBJECT_1-10, toward-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "toward",
                  "ner": "O",
                  "tag": "IN",
                  "word": "toward"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(DIALOG_OBJECT_1-10, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(DIALOG_OBJECT_1-10, white-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(DIALOG_OBJECT_1-10, light-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "string": "dep(DIALOG_OBJECT_1-10, say-8)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "8",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PRN"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "light"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "VB": "say"
                },
                "s_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "NN": "walk"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "toward"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I walk toward the white light, say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I walk toward the white light, say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Which building?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Which building?",
            "coreAnnotations": [
              {
                "pos": "WDT",
                "text": "Which",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, building-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-2, Which-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "which",
                  "ner": "O",
                  "tag": "WDT",
                  "word": "Which"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(building-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_0_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node_0_node": {
                  "WDT": "Which"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Which building?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Which building?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Which building?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,The window wall building in our current path is the building we will enter,\u0027\u0027 says Psycho.",
      "wordCount": 16,
      "order": 197,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The window wall building in our current path is the building we will enter,\u0027\u0027",
          "wordCount": 14,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The window wall building in our current path is the building we will enter,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "our",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "current",
                "net": "DATE"
              },
              {
                "pos": "NN",
                "text": "path",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, building-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-4, window-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(building-4, wall-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(building-4, path-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "8",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                },
                "gov": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(path-8, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "8",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(path-8, our-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "our"
                },
                "gov": {
                  "index": "8",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(path-8, current-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "current",
                  "ner": "DATE",
                  "tag": "JJ",
                  "word": "current"
                },
                "gov": {
                  "index": "8",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(building-11, building-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(building-11, is-9)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "9",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-11, the-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(building-11, enter-14)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "14",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(building-11, ,-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(enter-14, we-12)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "14",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(enter-14, will-13)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "13",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "14",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_2_node": {
                  "NN": "wall"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "JJ": "current"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP": "we"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NN": "path"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "PRP$": "our"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_3_node": {
                  "NN": "building"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "window"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "VB": "enter"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,The window wall building in our current path is the building we will enter,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The window wall building in our current path is the building we will enter,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The window wall building in our current path is the building we will enter,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel and think, \u003c|Truth will not be found.\u003e",
      "wordCount": 9,
      "order": 198,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Truth will not be found.\u003e",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Truth will not be found.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Truth",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "found",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, found-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(found-5, Truth-1)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "1",
                  "lemma": "truth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Truth"
                },
                "gov": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(found-5, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(found-5, not-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(found-5, be-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(found-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "found"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "be"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "VBN": "found"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "not"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Truth"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "found.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Truth will not be found.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Truth will not be found.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Truth will not be found.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "K\u0027s white light glows.",
      "wordCount": 4,
      "order": 199,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "K\u0027s white light glows.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "K\u0027s white light glows.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "glows",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, K-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "string": "dep(K-1, glows-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "glows"
                },
                "gov": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(K-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(glows-5, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "5",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(glows-5, light-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "glow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "glows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "glows"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "K"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "glows."
                ]
              }
            },
            "sentence": "K\u0027s white light glows."
          },
          "jazzyState": {
            "text": "K\u0027s white light glows.",
            "misspelledWords": {
              "K\u0027s": [
                "gas"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|I will create it.\u003e I think, \u003c|Looking for Psycho.\u003e I step back.",
      "wordCount": 12,
      "order": 200,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|I will create it.\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I will create it.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "create",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, create-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(create-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(create-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(create-3, it-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "3",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(create-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "PRP": "it"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "create"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "it.\u003e"
                ]
              }
            },
            "sentence": "\u003c|I will create it.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|I will create it.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|I will create it.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Looking for Psycho.\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Looking for Psycho.",
            "coreAnnotations": [
              {
                "pos": "VBG",
                "text": "Looking",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Looking-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Looking"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(Looking-1, Psycho-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Looking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Looking-1, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "Looking"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-3, for-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VBG": "Looking"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "for"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Psycho.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Looking for Psycho.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Looking for Psycho.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Looking for Psycho.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I step back.",
          "wordCount": 3,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step back.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(step-2, back-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "back"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "back."
                ]
              }
            },
            "sentence": "I step back."
          },
          "jazzyState": {
            "text": "I step back.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A rickshaw rolls on K.",
      "wordCount": 5,
      "order": 201,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A rickshaw rolls on K.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A rickshaw rolls on K.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "K.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rickshaw-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "string": "dep(rickshaw-2, rolls-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(rolls-3, K.-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(K.-5, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "K.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "K."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "rolls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "INITIAL": [
                  "K."
                ]
              }
            },
            "sentence": "A rickshaw rolls on K."
          },
          "jazzyState": {
            "text": "A rickshaw rolls on K.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027 says Psycho.",
      "wordCount": 7,
      "order": 202,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The Gee Forty-three contact eminent,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "contact",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "eminent",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-2, Forty-three-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(Gee-2, contact-4)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "contact",
                  "ner": "O",
                  "tag": "NN",
                  "word": "contact"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-2, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(contact-4, eminent-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "eminent",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "eminent"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contact",
                  "ner": "O",
                  "tag": "NN",
                  "word": "contact"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "eminent"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "contact"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027The Gee Forty-three contact eminent,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I leer from building\u0027s corner and step under an awning and by potted roses. I think, \u003c|Is Psycho killing us?\u003e I stand.",
      "wordCount": 22,
      "order": 203,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I leer from building\u0027s corner and step under an awning and by potted roses.",
          "wordCount": 14,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I leer from building\u0027s corner and step under an awning and by potted roses.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "leer",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "under",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "an",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "awning",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "potted",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "roses",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, leer-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(leer-2, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leer-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(leer-2, leer-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(leer-2, corner-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(leer-2, step-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:under(leer-2, awning-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:under"
                },
                "dep": {
                  "index": "11",
                  "lemma": "awning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "awning"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(leer-2, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leer-2\u0027, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(leer-2\u0027, roses-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "15",
                  "lemma": "rose",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "roses"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leer",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "leer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-4, \u0027s-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-6, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(corner-6, building-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(corner-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(corner-6, step-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(awning-11, under-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "under",
                  "ner": "O",
                  "tag": "IN",
                  "word": "under"
                },
                "gov": {
                  "index": "11",
                  "lemma": "awning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "awning"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(awning-11, an-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "an"
                },
                "gov": {
                  "index": "11",
                  "lemma": "awning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "awning"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(roses-15, by-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "15",
                  "lemma": "rose",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "roses"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(roses-15, potted-14)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "potted",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "potted"
                },
                "gov": {
                  "index": "15",
                  "lemma": "rose",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "roses"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node": {
                  "NN": "awning"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NNS": "roses"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "corner"
                },
                "s_node_1_node_0_node": {
                  "VBP": "leer"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NN": "building"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "NN": "step"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "IN": "under"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_0_node_1_node_0_node": {
                  "DT": "an"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "JJ": "potted"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "roses."
                ]
              }
            },
            "sentence": "I leer from building\u0027s corner and step under an awning and by potted roses."
          },
          "jazzyState": {
            "text": "I leer from building\u0027s corner and step under an awning and by potted roses.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Is Psycho killing us?\u003e",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Is Psycho killing us?",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "killing",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "us",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killing-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(killing-3, Is-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killing-3, Psycho-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killing-3, us-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "us"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killing-3, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "killing"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "PRP": "us"
                },
                "s_node_2_node_0_node": {
                  "VBG": "killing"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "Is"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Is Psycho killing us?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Is Psycho killing us?\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Is Psycho killing us?\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Across the street is a building with window walls.",
      "wordCount": 9,
      "order": 204,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Across the street is a building with window walls.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Across the street is a building with window walls.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Across",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "walls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-3, Across-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "across",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Across"
                },
                "gov": {
                  "index": "3",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(street-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:across(is-4, street-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:across"
                },
                "dep": {
                  "index": "3",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-4, building-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-4, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-6, a-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(building-6, walls-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(walls-9, with-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(walls-9, window-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "NN": "window"
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NNS": "walls"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_0_node": {
                  "IN": "Across"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walls."
                ]
              }
            },
            "sentence": "Across the street is a building with window walls."
          },
          "jazzyState": {
            "text": "Across the street is a building with window walls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I say, ,,What transmits in or out of building?\u0027\u0027",
      "wordCount": 9,
      "order": 205,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,What transmits in or out of building?\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What transmits in or out of building?",
            "coreAnnotations": [
              {
                "pos": "WDT",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "transmits",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "out",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, transmits-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(transmits-2, What-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WDT",
                  "word": "What"
                },
                "gov": {
                  "index": "2",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(transmits-2, or-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "2",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(transmits-2, building-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "2",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(transmits-2, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(or-4, in-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "4",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(or-4, out-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "out",
                  "ner": "O",
                  "tag": "IN",
                  "word": "out"
                },
                "gov": {
                  "index": "4",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-7, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_2_node": {
                  "IN": "out"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "or"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "transmits"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What transmits in or out of building?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What transmits in or out of building?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,What transmits in or out of building?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Mind reading transmits into the building,\u0027\u0027 says Psycho. \u0027\u0027Mind reading transmits from the building.\u0027\u0027",
      "wordCount": 14,
      "order": 206,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Mind reading transmits into the building,\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Mind reading transmits into the building,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Mind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reading",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "transmits",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, transmits-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(reading-2, Mind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(transmits-3, reading-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(transmits-3, building-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(transmits-3, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-6, into-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NN": "reading"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "transmits"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Mind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Mind reading transmits into the building,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Mind reading transmits into the building,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Mind reading transmits into the building,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Mind reading transmits from the building.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Mind reading transmits from the building.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Mind",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reading",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "transmits",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, transmits-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(reading-2, Mind-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Mind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(transmits-3, reading-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reading",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reading"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(transmits-3, building-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(transmits-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(building-6, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "reading"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "transmits"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Mind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "building.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Mind reading transmits from the building.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Mind reading transmits from the building.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Mind reading transmits from the building.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The white light is a step away.",
      "wordCount": 7,
      "order": 207,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The white light is a step away.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The white light is a step away.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-3, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-6, light-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(step-6, is-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(step-6, a-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(step-6, away-7)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "away"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "step"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "away."
                ]
              }
            },
            "sentence": "The white light is a step away."
          },
          "jazzyState": {
            "text": "The white light is a step away.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look right.",
      "wordCount": 3,
      "order": 208,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look right.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look right.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "right",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, right-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "RB",
                  "word": "right"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "right"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "right."
                ]
              }
            },
            "sentence": "I look right."
          },
          "jazzyState": {
            "text": "I look right.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027 says Psycho.",
      "wordCount": 16,
      "order": 209,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027",
          "wordCount": 14,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The building with the window walls and the revolving door is the current objective,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "walls",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "current",
                "net": "DATE"
              },
              {
                "pos": "NN",
                "text": "objective",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, objective-14)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(building-2, walls-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(building-2, door-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "10",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(walls-6, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(walls-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(walls-6, window-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(walls-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(walls-6, door-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-10, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-10, revolving-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "10",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(objective-14, building-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(objective-14, is-11)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "11",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(objective-14, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(objective-14, current-13)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "current",
                  "ner": "DATE",
                  "tag": "JJ",
                  "word": "current"
                },
                "gov": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(objective-14, ,-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "14",
                  "lemma": "objective",
                  "ner": "O",
                  "tag": "NN",
                  "word": "objective"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_2_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "objective"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_2_node": {
                  "NNS": "walls"
                },
                "s_node_1_node_1_node_1_node": {
                  "JJ": "current"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_node_0_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "with"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027The building with the window walls and the revolving door is the current objective,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The building is the city block. Steel frame outlines three levels of window walls. The revolving door rotates.",
      "wordCount": 18,
      "order": 210,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The building is the city block.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The building is the city block.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "city",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "block",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, block-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(block-6, building-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(block-6, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(block-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(block-6, city-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "city",
                  "ner": "O",
                  "tag": "NN",
                  "word": "city"
                },
                "gov": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(block-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "block",
                  "ner": "O",
                  "tag": "NN",
                  "word": "block"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "city"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "block"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "block."
                ]
              }
            },
            "sentence": "The building is the city block."
          },
          "jazzyState": {
            "text": "The building is the city block.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Steel frame outlines three levels of window walls.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Steel frame outlines three levels of window walls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "frame",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "outlines",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "levels",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "walls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, outlines-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "outline",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "outlines"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(frame-2, Steel-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Steel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(outlines-3, frame-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                },
                "gov": {
                  "index": "3",
                  "lemma": "outline",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "outlines"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(outlines-3, levels-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                },
                "gov": {
                  "index": "3",
                  "lemma": "outline",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "outlines"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(outlines-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "outline",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "outlines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(levels-5, three-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(levels-5, walls-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                },
                "gov": {
                  "index": "5",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(walls-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(walls-8, window-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "8",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "walls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "frame"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "window"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "outlines"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Steel"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "walls"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "levels"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walls."
                ]
              }
            },
            "sentence": "Steel frame outlines three levels of window walls."
          },
          "jazzyState": {
            "text": "Steel frame outlines three levels of window walls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The revolving door rotates.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The revolving door rotates.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "rotates",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rotates-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rotate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rotates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, revolving-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rotates-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rotate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rotates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(rotates-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "rotate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rotates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "rotates"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rotates."
                ]
              }
            },
            "sentence": "The revolving door rotates."
          },
          "jazzyState": {
            "text": "The revolving door rotates.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|That\u0027s big revolving door.\u003e",
      "wordCount": 4,
      "order": 211,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|That\u0027s big revolving door.\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "That\u0027s big revolving door.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "That",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, door-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(door-5, That-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "that",
                  "ner": "O",
                  "tag": "DT",
                  "word": "That"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(door-5, \u0027s-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, big-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, revolving-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(door-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "DT": "That"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "big"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "door.\u003e"
                ]
              }
            },
            "sentence": "\u003c|That\u0027s big revolving door.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|That\u0027s big revolving door.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|That\u0027s big revolving door.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027We will enter with Richard and Betty,\u0027\u0027 says Psycho.",
      "wordCount": 9,
      "order": 212,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027We will enter with Richard and Betty,\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "We will enter with Richard and Betty,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, enter-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(enter-3, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(enter-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(enter-3, Richard-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(enter-3, Betty-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(enter-3, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-5, Betty-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "enter"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027We will enter with Richard and Betty,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027We will enter with Richard and Betty,\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027We will enter with Richard and Betty,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I think, \u003c|Why not the wall?\u003e I say, ,,Why not enter through the wall?\u0027\u0027",
      "wordCount": 14,
      "order": 213,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Why not the wall?\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Why not the wall?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, not-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(not-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "string": "dep(not-2, wall-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(not-2, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "SBARQ"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "RB": "not"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Why not the wall?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Why not the wall?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Why not the wall?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why not enter through the wall?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why not enter through the wall?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, enter-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(enter-3, Why-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(enter-3, not-2)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(enter-3, wall-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(enter-3, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-6, through-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "RB": "not"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VB": "enter"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why not enter through the wall?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why not enter through the wall?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why not enter through the wall?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The wall is a deterrent. It deters direct assault to give time to one of three guards to press a red button. The red button lowers the secure seal. The secure seal will prevent us from entering the secure tunnel. The secure tunnel leads to the lift. The lift descends to the womb.\u0027\u0027",
      "wordCount": 55,
      "order": 214,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The wall is a deterrent.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The wall is a deterrent.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "deterrent",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, deterrent-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "deterrent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "deterrent"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(deterrent-5, wall-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "5",
                  "lemma": "deterrent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "deterrent"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(deterrent-5, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "deterrent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "deterrent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(deterrent-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "deterrent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "deterrent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(deterrent-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "deterrent",
                  "ner": "O",
                  "tag": "NN",
                  "word": "deterrent"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "deterrent"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "deterrent."
                ]
              }
            },
            "sentence": ",,The wall is a deterrent."
          },
          "jazzyState": {
            "text": ",,The wall is a deterrent.",
            "misspelledWords": {
              "deterrent": []
            }
          },
          "dialogState": {
            "sentence": ",,The wall is a deterrent.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "It deters direct assault to give time to one of three guards to press a red button.",
          "wordCount": 17,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "It deters direct assault to give time to one of three guards to press a red button.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "deters",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "direct",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "assault",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "give",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "guards",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "press",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, deters-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "deter",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "deters"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(deters-2, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "2",
                  "lemma": "deter",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "deters"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(deters-2, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "deter",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "deters"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(deters-2, assault-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "assault",
                  "ner": "O",
                  "tag": "NN",
                  "word": "assault"
                },
                "gov": {
                  "index": "2",
                  "lemma": "deter",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "deters"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(assault-4, direct-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "direct"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assault",
                  "ner": "O",
                  "tag": "NN",
                  "word": "assault"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(assault-4, give-6)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "6",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VB",
                  "word": "give"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assault",
                  "ner": "O",
                  "tag": "NN",
                  "word": "assault"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(give-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VB",
                  "word": "give"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(give-6, time-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "6",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VB",
                  "word": "give"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(give-6, one-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "9",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "6",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VB",
                  "word": "give"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(give-6, press-14)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "14",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VB",
                  "word": "press"
                },
                "gov": {
                  "index": "6",
                  "lemma": "give",
                  "ner": "O",
                  "tag": "VB",
                  "word": "give"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(one-9, to-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(one-9, guards-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "12",
                  "lemma": "guard",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guards"
                },
                "gov": {
                  "index": "9",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(guards-12, of-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "12",
                  "lemma": "guard",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guards"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(guards-12, three-11)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "12",
                  "lemma": "guard",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "guards"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(press-14, button-17)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "17",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "14",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VB",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(press-14, to-13)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "13",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "14",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VB",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-17, red-16)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "16",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "17",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-17, a-15)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "15",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "17",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "time"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node_0_node": {
                  "VB": "press"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "deters"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "direct"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NNS": "guards"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "give"
                },
                "s_node_1_node_1_node_2_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "assault"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node_1_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_0_node": {
                  "CD": "one"
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "It deters direct assault to give time to one of three guards to press a red button."
          },
          "jazzyState": {
            "text": "It deters direct assault to give time to one of three guards to press a red button.",
            "misspelledWords": {
              "deters": [
                "dieters",
                "deers",
                "defers",
                "meters",
                "peters"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The red button lowers the secure seal.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The red button lowers the secure seal.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lowers",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "secure",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "seal",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lowers-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-3, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lowers-4, button-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lowers-4, seal-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lowers-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(seal-7, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(seal-7, secure-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "secure",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "secure"
                },
                "gov": {
                  "index": "7",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "secure"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "button"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "seal"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lowers"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "seal."
                ]
              }
            },
            "sentence": "The red button lowers the secure seal."
          },
          "jazzyState": {
            "text": "The red button lowers the secure seal.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The secure seal will prevent us from entering the secure tunnel.",
          "wordCount": 11,
          "orderParagraph": 4,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The secure seal will prevent us from entering the secure tunnel.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "secure",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "seal",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "prevent",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "us",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "entering",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "secure",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, prevent-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(seal-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(seal-3, secure-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "secure",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "secure"
                },
                "gov": {
                  "index": "3",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(prevent-5, seal-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "seal"
                },
                "gov": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(prevent-5, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(prevent-5, us-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "we",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "us"
                },
                "gov": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(prevent-5, entering-8)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "entering"
                },
                "gov": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(prevent-5, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(entering-8, from-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "entering"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(entering-8, tunnel-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "8",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "entering"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tunnel-11, secure-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "secure",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "secure"
                },
                "gov": {
                  "index": "11",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "JJ": "secure"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "secure"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VBG": "entering"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_2_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_node_1_node": {
                  "PRP": "us"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_node_2_node": {
                  "NN": "seal"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "prevent"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "The secure seal will prevent us from entering the secure tunnel."
          },
          "jazzyState": {
            "text": "The secure seal will prevent us from entering the secure tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The secure tunnel leads to the lift.",
          "wordCount": 7,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The secure tunnel leads to the lift.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "secure",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "leads",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lift",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, leads-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leads"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tunnel-3, secure-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "secure",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "secure"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leads-4, tunnel-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(leads-4, lift-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(leads-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(lift-7, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lift-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "tunnel"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "secure"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "lift"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "leads"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lift."
                ]
              }
            },
            "sentence": "The secure tunnel leads to the lift."
          },
          "jazzyState": {
            "text": "The secure tunnel leads to the lift.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The lift descends to the womb.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 6,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The lift descends to the womb.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lift",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "descends",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "womb",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, descends-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "descend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "descends"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lift-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(descends-3, lift-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                },
                "gov": {
                  "index": "3",
                  "lemma": "descend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "descends"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(descends-3, womb-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                },
                "gov": {
                  "index": "3",
                  "lemma": "descend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "descends"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(descends-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "descend",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "descends"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(womb-6, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(womb-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "lift"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "womb"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "descends"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "womb.\u0027\u0027"
                ]
              }
            },
            "sentence": "The lift descends to the womb.\u0027\u0027"
          },
          "jazzyState": {
            "text": "The lift descends to the womb.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "The lift descends to the womb.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|The womb.\u003e",
      "wordCount": 2,
      "order": 215,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|The womb.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The womb.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "womb",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, womb-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(womb-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(womb-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "womb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "womb"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "womb"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "womb.\u003e"
                ]
              }
            },
            "sentence": "\u003c|The womb.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|The womb.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|The womb.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A rickshaw\u0027s blue and red wheels roll.",
      "wordCount": 7,
      "order": 216,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A rickshaw\u0027s blue and red wheels roll.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A rickshaw\u0027s blue and red wheels roll.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "blue",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "wheels",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "roll",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wheels-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rickshaw-2, \u0027s-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(blue-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "blue"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(blue-4, red-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "blue"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(wheels-7, rickshaw-2)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(wheels-7, blue-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "blue"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(wheels-7, red-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "string": "dep(wheels-7, roll-8)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "8",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NN",
                  "word": "roll"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wheels-7, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node": {
                  "JJ": "red"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "VBP": "roll"
                },
                "s_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node": {
                  "NNS": "wheels"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "blue"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "roll."
                ]
              }
            },
            "sentence": "A rickshaw\u0027s blue and red wheels roll."
          },
          "jazzyState": {
            "text": "A rickshaw\u0027s blue and red wheels roll.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The mover is a child. Child\u0027s face is covered with sweat and water. Tuxedo, shirt and tie hang from body. Shiny rubber boots slop and splash through water.",
      "wordCount": 28,
      "order": 217,
      "sentenceCount": 4,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The mover is a child.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The mover is a child.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mover",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, child-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(mover-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mover",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mover"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(child-5, mover-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mover",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mover"
                },
                "gov": {
                  "index": "5",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(child-5, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(child-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(child-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "child"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "mover"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "child."
                ]
              }
            },
            "sentence": "The mover is a child."
          },
          "jazzyState": {
            "text": "The mover is a child.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Child\u0027s face is covered with sweat and water.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Child\u0027s face is covered with sweat and water.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Child",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "covered",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sweat",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, covered-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Child-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(face-3, Child-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Child"
                },
                "gov": {
                  "index": "3",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(covered-5, face-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "face",
                  "ner": "O",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(covered-5, is-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(covered-5, sweat-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sweat"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(covered-5, water-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(covered-5, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sweat-7, with-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sweat-7, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sweat-7, water-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sweat"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "face"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "sweat"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "water"
                },
                "s_node_0_node_0_node_0_node": {
                  "NN": "Child"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "covered"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "water."
                ]
              }
            },
            "sentence": "Child\u0027s face is covered with sweat and water."
          },
          "jazzyState": {
            "text": "Child\u0027s face is covered with sweat and water.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Tuxedo, shirt and tie hang from body.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Tuxedo, shirt and tie hang from body.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Tuxedo",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shirt",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tie",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hang",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hang-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Tuxedo-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Tuxedo",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Tuxedo"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Tuxedo-1, shirt-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shirt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shirt"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Tuxedo",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Tuxedo"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Tuxedo-1, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Tuxedo",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Tuxedo"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Tuxedo-1, tie-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Tuxedo",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Tuxedo"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hang-6, Tuxedo-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Tuxedo",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Tuxedo"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hang-6, shirt-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shirt",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shirt"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hang-6, tie-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tie",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tie"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(hang-6, body-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hang-6, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "hang",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hang"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-8, from-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_4_node": {
                  "NN": "tie"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_node_2_node": {
                  "NN": "shirt"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hang"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Tuxedo"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Tuxedo, shirt and tie hang from body."
          },
          "jazzyState": {
            "text": "Tuxedo, shirt and tie hang from body.",
            "misspelledWords": {
              "Tuxedo": [
                "taxed"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Shiny rubber boots slop and splash through water.",
          "wordCount": 8,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Shiny rubber boots slop and splash through water.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Shiny",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rubber",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "boots",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "slop",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "splash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rubber-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rubber",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rubber"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rubber-2, Shiny-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Shiny",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Shiny"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rubber",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rubber"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(rubber-2, slop-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "slop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slop"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rubber",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rubber"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(rubber-2, splash-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rubber",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rubber"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(rubber-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "rubber",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rubber"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slop-4, boots-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "boot",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "boots"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(slop-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slop"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(slop-4, splash-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "splash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "splash"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slop"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(slop-4, water-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "8",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(water-8, through-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "8",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "IN": "through"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rubber"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBP": "splash"
                },
                "s_node_0_node_2_node": {
                  "NNS": "boots"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NN": "water"
                },
                "s_node_1_node_0_node": {
                  "VBP": "slop"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Shiny"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "water."
                ]
              }
            },
            "sentence": "Shiny rubber boots slop and splash through water."
          },
          "jazzyState": {
            "text": "Shiny rubber boots slop and splash through water.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The rickshaw\u0027s color wheels spin fast. Red and blue glowing spokes spin purple.",
      "wordCount": 13,
      "order": 218,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The rickshaw\u0027s color wheels spin fast.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The rickshaw\u0027s color wheels spin fast.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "color",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "wheels",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "spin",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "fast",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spin-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rickshaw-2, \u0027s-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(wheels-5, rickshaw-2)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wheels-5, color-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "color",
                  "ner": "O",
                  "tag": "NN",
                  "word": "color"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spin-6, wheels-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wheel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wheels"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(spin-6, fast-7)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "fast",
                  "ner": "O",
                  "tag": "RB",
                  "word": "fast"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spin-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNS": "wheels"
                },
                "s_node_1_node_1_node": {
                  "RB": "fast"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "color"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_0_node": {
                  "VB": "spin"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "fast."
                ]
              }
            },
            "sentence": "The rickshaw\u0027s color wheels spin fast."
          },
          "jazzyState": {
            "text": "The rickshaw\u0027s color wheels spin fast.",
            "misspelledWords": {
              "color": [
                "colon"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Red and blue glowing spokes spin purple.",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Red and blue glowing spokes spin purple.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Red",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "blue",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "glowing",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "spokes",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "spin",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "purple",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spin-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Red-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Red",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Red"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Red-1, spokes-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "spoke",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spokes"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Red",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Red"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(spokes-5, blue-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "blue",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "blue"
                },
                "gov": {
                  "index": "5",
                  "lemma": "spoke",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spokes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(spokes-5, glowing-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "glowing",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "glowing"
                },
                "gov": {
                  "index": "5",
                  "lemma": "spoke",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spokes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spin-6, Red-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Red",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Red"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spin-6, spokes-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "spoke",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "spokes"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(spin-6, purple-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "purple",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "purple"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spin-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "spin"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "purple"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_2_node": {
                  "NNS": "spokes"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node": {
                  "JJ": "glowing"
                },
                "s_node_0_node_2_node_0_node": {
                  "JJ": "blue"
                },
                "s_node_1_node_0_node": {
                  "VB": "spin"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Red"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "purple."
                ]
              }
            },
            "sentence": "Red and blue glowing spokes spin purple."
          },
          "jazzyState": {
            "text": "Red and blue glowing spokes spin purple.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho is above on building wall.",
      "wordCount": 6,
      "order": 219,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho is above on building wall.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho is above on building wall.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "above",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wall-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wall-6, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(wall-6, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-6, above-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "above",
                  "ner": "O",
                  "tag": "IN",
                  "word": "above"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-6, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-6, building-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wall-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "building"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "above"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Psycho is above on building wall."
          },
          "jazzyState": {
            "text": "Psycho is above on building wall.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The air is dry and cool. K Sump Pumps hums.",
      "wordCount": 10,
      "order": 220,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The air is dry and cool.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The air is dry and cool.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "air",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dry",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "cool",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dry-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(air-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "air",
                  "ner": "O",
                  "tag": "NN",
                  "word": "air"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dry-4, air-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "air",
                  "ner": "O",
                  "tag": "NN",
                  "word": "air"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dry-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(dry-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(dry-4, cool-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "cool",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "cool"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dry-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "dry",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dry"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cool-6, air-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "air",
                  "ner": "O",
                  "tag": "NN",
                  "word": "air"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cool",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "cool"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "air"
                },
                "s_node_1_node_1_node_2_node": {
                  "JJ": "cool"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "dry"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cool."
                ]
              }
            },
            "sentence": "The air is dry and cool."
          },
          "jazzyState": {
            "text": "The air is dry and cool.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "K Sump Pumps hums.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "K Sump Pumps hums.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "K",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Sump",
                "net": "O"
              },
              {
                "pos": "NNPS",
                "text": "Pumps",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hums",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hums-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hum",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hums"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Pumps-3, K-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "K",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "K"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Pumps",
                  "ner": "O",
                  "tag": "NNPS",
                  "word": "Pumps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Pumps-3, Sump-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Sump",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Sump"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Pumps",
                  "ner": "O",
                  "tag": "NNPS",
                  "word": "Pumps"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hums-4, Pumps-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Pumps",
                  "ner": "O",
                  "tag": "NNPS",
                  "word": "Pumps"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hum",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hums"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hums-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "hum",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hums"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "hums"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Pumps"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Sump"
                },
                "s_node_0_node_0_node": {
                  "NNP": "K"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hums."
                ]
              }
            },
            "sentence": "K Sump Pumps hums."
          },
          "jazzyState": {
            "text": "K Sump Pumps hums.",
            "misspelledWords": {
              "Sump": [
                "dump",
                "rump",
                "bump",
                "pump",
                "lump",
                "jump",
                "hump",
                "sup",
                "sum",
                "stump",
                "slump",
                "sums"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The rickshaw stops. The child lowers rickshaw poles. The rickshaw pivots forward.",
      "wordCount": 12,
      "order": 221,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The rickshaw stops.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The rickshaw stops.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-3, rickshaw-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "stops"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stops."
                ]
              }
            },
            "sentence": "The rickshaw stops."
          },
          "jazzyState": {
            "text": "The rickshaw stops.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The child lowers rickshaw poles.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The child lowers rickshaw poles.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lowers",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "poles",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lowers-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(child-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lowers-3, child-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "3",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lowers-3, poles-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "poles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lowers-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(poles-5, rickshaw-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "poles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "poles"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "child"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lowers"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "poles."
                ]
              }
            },
            "sentence": "The child lowers rickshaw poles."
          },
          "jazzyState": {
            "text": "The child lowers rickshaw poles.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The rickshaw pivots forward.",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The rickshaw pivots forward.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pivots",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pivots-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rickshaw-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pivots-3, rickshaw-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(pivots-3, forward-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pivots-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "forward"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pivots"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forward."
                ]
              }
            },
            "sentence": "The rickshaw pivots forward."
          },
          "jazzyState": {
            "text": "The rickshaw pivots forward.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Shit then piss smells are.",
      "wordCount": 5,
      "order": 222,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Shit then piss smells are.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Shit then piss smells are.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Shit",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "piss",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "smells",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, piss-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "piss",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "piss"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(piss-3, Shit-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shit",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Shit"
                },
                "gov": {
                  "index": "3",
                  "lemma": "piss",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "piss"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(piss-3, then-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "3",
                  "lemma": "piss",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "piss"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(piss-3, smells-4)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "smell",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smells"
                },
                "gov": {
                  "index": "3",
                  "lemma": "piss",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "piss"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(piss-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "piss",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "piss"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(smells-4, are-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "4",
                  "lemma": "smell",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smells"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_0_node": {
                  "NNP": "smells"
                },
                "s_node_1_node": {
                  "RB": "then"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_1_node": {
                  "VBP": "are"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "piss"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Shit"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "are."
                ]
              }
            },
            "sentence": "Shit then piss smells are."
          },
          "jazzyState": {
            "text": "Shit then piss smells are.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step upon street and into white light. \u003c|Betty and Richard,\u003e I think. I feel the Friction Ray.",
      "wordCount": 18,
      "order": 223,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I step upon street and into white light.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step upon street and into white light.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(step-2, step-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(step-2, street-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(step-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2\u0027, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(step-2\u0027, light-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-4, upon-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-8, into-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-8, white-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "8",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "light"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "street"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "I step upon street and into white light."
          },
          "jazzyState": {
            "text": "I step upon street and into white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, I think.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I think.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "think"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "think."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I think."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I think.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Betty and Richard,\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Betty and Richard,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Betty-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:and(Betty-1, Richard-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-3, and-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Richard-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "NNP": "and"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Betty and Richard,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Betty and Richard,\u003e",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": "\u003c|Betty and Richard,\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I feel the Friction Ray.",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel the Friction Ray.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Friction",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Ray",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(feel-2, Ray-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Ray",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Ray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Ray-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Ray",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Ray"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Ray-5, Friction-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Friction",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Friction"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Ray",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Ray"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Friction"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Ray"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Ray."
                ]
              }
            },
            "sentence": "I feel the Friction Ray."
          },
          "jazzyState": {
            "text": "I feel the Friction Ray.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027It is Richard and Betty,\u0027\u0027 says Psycho.",
      "wordCount": 7,
      "order": 224,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027It is Richard and Betty,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "It is Richard and Betty,",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Richard-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Richard-3, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Richard-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-3, Betty-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Richard-3, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027It is Richard and Betty,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027It is Richard and Betty,\u0027\u0027",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027It is Richard and Betty,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Ray burn warms body.",
      "wordCount": 4,
      "order": 225,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Ray burn warms body.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Ray burn warms body.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Ray",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "warms",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-2, Ray-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Ray",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-2, body-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burn-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(body-4, warms-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "warm",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "warms"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Ray"
                },
                "s_node_1_node_0_node": {
                  "VBP": "burn"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "warms"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "Ray burn warms body."
          },
          "jazzyState": {
            "text": "Ray burn warms body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I holler, ,,LEAVE!\u0027\u0027 I hear nothing.",
      "wordCount": 6,
      "order": 226,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I holler, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, holler-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNP": "holler"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "I"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I holler, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I holler, DIALOG_OBJECT_1",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,LEAVE!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "LEAVE!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "LEAVE",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, LEAVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(LEAVE-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "LEAVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,LEAVE!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,LEAVE!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,LEAVE!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I hear nothing.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I hear nothing.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hear",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "nothing",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hear-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hear-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-2, nothing-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "nothing"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hear"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "nothing."
                ]
              }
            },
            "sentence": "I hear nothing."
          },
          "jazzyState": {
            "text": "I hear nothing.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Two hands split rickshaw curtains and push them apart revealing Richard then Betty.",
      "wordCount": 13,
      "order": 227,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Two hands split rickshaw curtains and push them apart revealing Richard then Betty.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Two hands split rickshaw curtains and push them apart revealing Richard then Betty.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "hands",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "split",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "curtains",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "them",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "apart",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "revealing",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, split-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(hands-2, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(split-3, hands-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                },
                "gov": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(split-3, curtains-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "curtain",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curtains"
                },
                "gov": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(split-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(split-3, push-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                },
                "gov": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(split-3, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "split",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "split"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(curtains-5, rickshaw-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "5",
                  "lemma": "curtain",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "curtains"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-7, hands-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hands"
                },
                "gov": {
                  "index": "7",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(push-7, revealing-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "reveal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revealing"
                },
                "gov": {
                  "index": "7",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(revealing-10, them-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "them"
                },
                "gov": {
                  "index": "10",
                  "lemma": "reveal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revealing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(revealing-10, apart-9)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "apart",
                  "ner": "O",
                  "tag": "RB",
                  "word": "apart"
                },
                "gov": {
                  "index": "10",
                  "lemma": "reveal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revealing"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(revealing-10, Betty-13)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "10",
                  "lemma": "reveal",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revealing"
                }
              },
              {
                "reln": {
                  "string": "dep(Betty-13, Richard-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Betty-13, then-12)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_1_node_2_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "PRP": "them"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "VBG": "revealing"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_node": {
                  "RB": "then"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBD": "split"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NNS": "curtains"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                },
                "s_node_1_node_2_node_0_node": {
                  "VB": "push"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "hands"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "RB": "apart"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_2_node": {
                  "NNP": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Two hands split rickshaw curtains and push them apart revealing Richard then Betty."
          },
          "jazzyState": {
            "text": "Two hands split rickshaw curtains and push them apart revealing Richard then Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk.",
      "wordCount": 2,
      "order": 228,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "walk."
                ]
              }
            },
            "sentence": "I walk."
          },
          "jazzyState": {
            "text": "I walk.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard\u0027s leg reaches for street. Richard steps from rickshaw, pivots to Betty.",
      "wordCount": 12,
      "order": 229,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard\u0027s leg reaches for street.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard\u0027s leg reaches for street.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "leg",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "reaches",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reaches-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reaches"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(leg-3, Richard-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "3",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NN",
                  "word": "leg"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reaches-4, leg-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NN",
                  "word": "leg"
                },
                "gov": {
                  "index": "4",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reaches"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(reaches-4, street-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "6",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "4",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reaches"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reaches-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "reaches"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-6, for-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "6",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "leg"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "reaches"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Richard\u0027s leg reaches for street."
          },
          "jazzyState": {
            "text": "Richard\u0027s leg reaches for street.",
            "misspelledWords": {
              "Richard\u0027s": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Richard steps from rickshaw, pivots to Betty.",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard steps from rickshaw, pivots to Betty.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pivots",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pivots-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-2, Richard-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(steps-2, rickshaw-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rickshaw-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pivots-6, steps-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pivots-6, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(pivots-6, Betty-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pivots-6, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "pivot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pivots"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Betty-8, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNS": "pivots"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "steps"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Richard steps from rickshaw, pivots to Betty."
          },
          "jazzyState": {
            "text": "Richard steps from rickshaw, pivots to Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I holler, \u0027\u0027LEAVE!\u0027\u0027 I hear nothing.",
      "wordCount": 6,
      "order": 230,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I holler, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, holler-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNP": "holler"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "I"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I holler, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I holler, DIALOG_OBJECT_1",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "LEAVE!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "LEAVE",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, LEAVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(LEAVE-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "LEAVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027LEAVE!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I hear nothing.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I hear nothing.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "hear",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "nothing",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hear-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hear-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-2, nothing-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "nothing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "nothing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hear",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hear"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "nothing"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hear"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "nothing."
                ]
              }
            },
            "sentence": "I hear nothing."
          },
          "jazzyState": {
            "text": "I hear nothing.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side.",
      "wordCount": 22,
      "order": 231,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side.",
          "wordCount": 22,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "slaps",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "walks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "past",
                "net": "DATE"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "ruffles",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hair",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pushes-23)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "23",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slaps-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(slaps-2, walks-11)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "11",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-3, \u0027s-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(hand-5, Richard-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hand-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(hand-5, steps-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hand-5, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(steps-7, rickshaw-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "9",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "7",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(rickshaw-9, from-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "9",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:past(walks-11, child-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:past"
                },
                "dep": {
                  "index": "16",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "11",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:past(walks-11, ruffles-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:past"
                },
                "dep": {
                  "index": "18",
                  "lemma": "ruffle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ruffles"
                },
                "gov": {
                  "index": "11",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walks-11, hand-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "11",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(walks-11, Richard-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "11",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "walks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-13, with-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(child-16, and-17)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "17",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "16",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(child-16, ruffles-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "ruffle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ruffles"
                },
                "gov": {
                  "index": "16",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(child-16, past-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "past",
                  "ner": "DATE",
                  "tag": "IN",
                  "word": "past"
                },
                "gov": {
                  "index": "16",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(child-16, the-15)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "15",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "string": "dep(ruffles-18, hair-21)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "21",
                  "lemma": "hair",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hair"
                },
                "gov": {
                  "index": "18",
                  "lemma": "ruffle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ruffles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(child-19, \u0027s-20)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "20",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "19",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(hair-21, child-19)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "19",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "21",
                  "lemma": "hair",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hair"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(pushes-23, slaps-2)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                },
                "gov": {
                  "index": "23",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pushes-23, ,-22)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "22",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "23",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-23, child-24)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "24",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "23",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pushes-23, .-28)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "28",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "23",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(child-24, side-27)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "27",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "24",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(side-27, to-25)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "25",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "27",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(side-27, the-26)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "26",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "27",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_4_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_2_node_1_node_1_node": {
                  "NN": "child"
                },
                "s_node_1_node_4_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_2_node_0_node": {
                  "IN": "past"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_0_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "walks"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "hair"
                },
                "s_node_0_node_2_node_0_node": {
                  "NNS": "steps"
                },
                "s_node_1_node_0_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_0_node_3_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "ruffles"
                },
                "s_node_1_node_4_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "hand"
                },
                "s_node_0_node_0_node_0_node_1_node": {
                  "NNP": "slaps"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_4_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_2_node_1_node_1_node": {
                  "NN": "side"
                },
                "s_node_1_node_4_node_1_node": {
                  "NN": "child"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "NN": "child"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_node_2_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "side."
                ]
              }
            },
            "sentence": "Betty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side."
          },
          "jazzyState": {
            "text": "Betty slaps Richard\u0027s hand, steps from rickshaw, walks with Richard past the child and ruffles child\u0027s hair, pushes child to the side.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard\u0027s": [],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I run. \u0027\u0027LEAVE!\u0027\u0027",
      "wordCount": 3,
      "order": 232,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I run.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I run.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "run",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, run-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(run-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(run-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "run"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "run."
                ]
              }
            },
            "sentence": "I run."
          },
          "jazzyState": {
            "text": "I run.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "LEAVE!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "LEAVE",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, LEAVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(LEAVE-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "LEAVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027LEAVE!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Ray burn stings.",
      "wordCount": 3,
      "order": 233,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Ray burn stings.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Ray burn stings.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Ray",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "stings",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-2, Ray-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Ray",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-2, stings-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sting",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "stings"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burn-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "stings"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Ray"
                },
                "s_node_1_node_0_node": {
                  "VBP": "burn"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stings."
                ]
              }
            },
            "sentence": "Ray burn stings."
          },
          "jazzyState": {
            "text": "Ray burn stings.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A ring pierces mind.",
      "wordCount": 4,
      "order": 234,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A ring pierces mind.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A ring pierces mind.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ring",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pierces",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pierces-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ring-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pierces-3, ring-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pierces-3, mind-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pierces-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "mind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "ring"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pierces"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "A ring pierces mind."
          },
          "jazzyState": {
            "text": "A ring pierces mind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I holler, \u0027\u0027RUN,\u0027\u0027 and shout, \u0027\u0027RUN!\u0027\u0027",
      "wordCount": 6,
      "order": 235,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I holler, DIALOG_OBJECT_1, and shout, DIALOG_OBJECT_2",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler, DIALOG_OBJECT_1, and shout, DIALOG_OBJECT_2",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shout",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_2",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holler-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holler-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(holler-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holler-2, DIALOG_OBJECT_1-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holler-2, shout-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shout"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(DIALOG_OBJECT_1-4, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(DIALOG_OBJECT_1-4, shout-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shout"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shout-7, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shout"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(shout-7, DIALOG_OBJECT_2-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_2",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_2"
                },
                "gov": {
                  "index": "7",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shout"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NN": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_5_node": {
                  "NN": "shout"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_2"
                },
                "s_node_1_node_6_node": {
                  "COMMA": ","
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "CD": "holler"
                },
                "s_node_1_node_4_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I holler, DIALOG_OBJECT_1, and shout, DIALOG_OBJECT_2"
          },
          "jazzyState": {
            "text": "I holler, DIALOG_OBJECT_1, and shout, DIALOG_OBJECT_2",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027RUN,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "RUN,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "RUN",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, RUN-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(RUN-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "RUN"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027RUN,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027RUN,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027RUN,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027RUN!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "RUN!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "RUN",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, RUN-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(RUN-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "UH": "RUN"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027RUN!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard holds out hand to Betty.",
      "wordCount": 6,
      "order": 236,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard holds out hand to Betty.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard holds out hand to Betty.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "holds",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "out",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holds-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holds-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(holds-2, out-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "out",
                  "ner": "O",
                  "tag": "RP",
                  "word": "out"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holds-2, hand-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(holds-2, Betty-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(holds-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Betty-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "out"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "NN": "hand"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "holds"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Richard holds out hand to Betty."
          },
          "jazzyState": {
            "text": "Richard holds out hand to Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027GO!\u0027\u0027",
      "wordCount": 1,
      "order": 237,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027GO!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "GO!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "GO",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, GO-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "NN",
                  "word": "GO"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(GO-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "go",
                  "ner": "O",
                  "tag": "NN",
                  "word": "GO"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "GO"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027GO!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027GO!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027GO!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty slaps Richard\u0027s hand away and pulls out a pen.",
      "wordCount": 10,
      "order": 238,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty slaps Richard\u0027s hand away and pulls out a pen.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty slaps Richard\u0027s hand away and pulls out a pen.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "slaps",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "out",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pen",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slaps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slaps-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(slaps-2, hand-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(slaps-2, away-6)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(slaps-2, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(slaps-2, pulls-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slaps-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slaps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-3, \u0027s-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(hand-5, Richard-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-8, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(pulls-8, out-9)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "9",
                  "lemma": "out",
                  "ner": "O",
                  "tag": "RP",
                  "word": "out"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pulls-8, pen-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "pen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pen"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pen-11, a-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "pen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pen"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node": {
                  "RP": "out"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "NN": "pen"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "slaps"
                },
                "s_node_1_node_0_node_2_node": {
                  "RB": "away"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_1_node_0_node_2_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pen."
                ]
              }
            },
            "sentence": "Betty slaps Richard\u0027s hand away and pulls out a pen."
          },
          "jazzyState": {
            "text": "Betty slaps Richard\u0027s hand away and pulls out a pen.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard\u0027s": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I run.",
      "wordCount": 2,
      "order": 239,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I run.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I run.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "run",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, run-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(run-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(run-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "run"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "run."
                ]
              }
            },
            "sentence": "I run."
          },
          "jazzyState": {
            "text": "I run.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The ring increases.",
      "wordCount": 3,
      "order": 240,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The ring increases.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The ring increases.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ring",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "increases",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ring-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ring-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "string": "dep(ring-2, increases-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "increase",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "increases"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ring-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "increases"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "ring"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "increases."
                ]
              }
            },
            "sentence": "The ring increases."
          },
          "jazzyState": {
            "text": "The ring increases.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The child opens right hand to expose palm.",
      "wordCount": 8,
      "order": 241,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The child opens right hand to expose palm.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The child opens right hand to expose palm.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "opens",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "right",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hand",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "expose",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "palm",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, opens-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(child-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(opens-3, child-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "3",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(opens-3, hand-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                },
                "gov": {
                  "index": "3",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(opens-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hand-5, right-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(hand-5, expose-7)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "expose",
                  "ner": "O",
                  "tag": "VB",
                  "word": "expose"
                },
                "gov": {
                  "index": "5",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(expose-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "expose",
                  "ner": "O",
                  "tag": "VB",
                  "word": "expose"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(expose-7, palm-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                },
                "gov": {
                  "index": "7",
                  "lemma": "expose",
                  "ner": "O",
                  "tag": "VB",
                  "word": "expose"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "palm"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "child"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "expose"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "hand"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "opens"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "right"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "palm."
                ]
              }
            },
            "sentence": "The child opens right hand to expose palm."
          },
          "jazzyState": {
            "text": "The child opens right hand to expose palm.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The ring increases.",
      "wordCount": 3,
      "order": 242,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The ring increases.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The ring increases.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ring",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "increases",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ring-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ring-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "string": "dep(ring-2, increases-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "increase",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "increases"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ring-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "increases"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "ring"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "increases."
                ]
              }
            },
            "sentence": "The ring increases."
          },
          "jazzyState": {
            "text": "The ring increases.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty points pen tip at child\u0027s palm.",
      "wordCount": 7,
      "order": 243,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty points pen tip at child\u0027s palm.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Betty points pen tip at child\u0027s palm.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "points",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pen",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tip",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "child",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "palm",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, points-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(points-2, Betty-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                }
              },
              {
                "reln": {
                  "string": "dep(points-2, tip-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(points-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "points"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(tip-4, pen-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pen"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(tip-4, palm-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "8",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(child-6, \u0027s-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "6",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(palm-8, at-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "8",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(palm-8, child-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "child",
                  "ner": "O",
                  "tag": "NN",
                  "word": "child"
                },
                "gov": {
                  "index": "8",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "tip"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "NN": "child"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "palm"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "points"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "pen"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "palm."
                ]
              }
            },
            "sentence": "Betty points pen tip at child\u0027s palm."
          },
          "jazzyState": {
            "text": "Betty points pen tip at child\u0027s palm.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The ring increases.",
      "wordCount": 3,
      "order": 244,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The ring increases.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The ring increases.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ring",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "increases",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ring-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ring-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "string": "dep(ring-2, increases-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "increase",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "increases"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ring-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "increases"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "ring"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "increases."
                ]
              }
            },
            "sentence": "The ring increases."
          },
          "jazzyState": {
            "text": "The ring increases.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty says something and clicks pen button.",
      "wordCount": 7,
      "order": 245,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty says something and clicks pen button.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty says something and clicks pen button.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "something",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "clicks",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pen",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-2, something-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "something",
                  "ner": "O",
                  "tag": "NN",
                  "word": "something"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(says-2, clicks-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clicks"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clicks-5, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clicks"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(clicks-5, button-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "5",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "clicks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(button-7, pen-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "pen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pen"
                },
                "gov": {
                  "index": "7",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_3_node": {
                  "NN": "pen"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "clicks"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "something"
                },
                "s_node_1_node_1_node_4_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "Betty says something and clicks pen button."
          },
          "jazzyState": {
            "text": "Betty says something and clicks pen button.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The ring increases.",
      "wordCount": 3,
      "order": 246,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The ring increases.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The ring increases.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ring",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "increases",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ring-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(ring-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "string": "dep(ring-2, increases-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "increase",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "increases"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ring-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ring",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ring"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "increases"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "ring"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "increases."
                ]
              }
            },
            "sentence": "The ring increases."
          },
          "jazzyState": {
            "text": "The ring increases.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Ray burn burns.",
      "wordCount": 3,
      "order": 247,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Ray burn burns.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Ray burn burns.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Ray",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "burns",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-2, Ray-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Ray",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-2, burns-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burn-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "burns"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Ray"
                },
                "s_node_1_node_0_node": {
                  "VBP": "burn"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "burns."
                ]
              }
            },
            "sentence": "Ray burn burns."
          },
          "jazzyState": {
            "text": "Ray burn burns.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A pain pierces ears.",
      "wordCount": 4,
      "order": 248,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A pain pierces ears.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A pain pierces ears.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pierces",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "ears",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pierces-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pain-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pain"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pierces-3, pain-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pain"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pierces-3, ears-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "ear",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ears"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pierces-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "ears"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "pain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pierces"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ears."
                ]
              }
            },
            "sentence": "A pain pierces ears."
          },
          "jazzyState": {
            "text": "A pain pierces ears.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I close eyes. \u0027\u0027RUN!\u0027\u0027 I holler, \u0027\u0027RUN!\u0027\u0027",
      "wordCount": 7,
      "order": 249,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I close eyes.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I close eyes.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "close",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eyes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, eyes-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(eyes-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(eyes-3, close-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "RB",
                  "word": "close"
                },
                "gov": {
                  "index": "3",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eyes-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "eyes"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "close"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eyes."
                ]
              }
            },
            "sentence": "I close eyes."
          },
          "jazzyState": {
            "text": "I close eyes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027RUN!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "RUN!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "RUN",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, RUN-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(RUN-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "UH": "RUN"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027RUN!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I holler, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, holler-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NNP": "holler"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "I"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I holler, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I holler, DIALOG_OBJECT_1",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027RUN!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "RUN!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "RUN",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, RUN-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(RUN-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "UH": "RUN"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027RUN!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027RUN!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The lights shine through eyelids. Legs step, step, stride.",
      "wordCount": 9,
      "order": 250,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The lights shine through eyelids.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The lights shine through eyelids.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lights",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "shine",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eyelids",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shine-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shine"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lights-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shine-3, lights-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shine"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(shine-3, eyelids-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "eyelid",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyelids"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shine"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shine-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(eyelids-5, through-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "eyelid",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyelids"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "eyelids"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "lights"
                },
                "s_node_1_node_0_node": {
                  "VBP": "shine"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eyelids."
                ]
              }
            },
            "sentence": "The lights shine through eyelids."
          },
          "jazzyState": {
            "text": "The lights shine through eyelids.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Legs step, step, stride.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Legs step, step, stride.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Legs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stride",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(step-2, Legs-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Legs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(step-2, step-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(step-4, stride-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stride",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stride"
                },
                "gov": {
                  "index": "4",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "VBZ": "stride"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "step"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_node_0_node": {
                  "JJ": "Legs"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "step"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stride."
                ]
              }
            },
            "sentence": "Legs step, step, stride."
          },
          "jazzyState": {
            "text": "Legs step, step, stride.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I open eyelids.",
      "wordCount": 3,
      "order": 251,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I open eyelids.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I open eyelids.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eyelids",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(open-2, eyelids-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "eyelid",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "eyelids"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "eyelids"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "open"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eyelids."
                ]
              }
            },
            "sentence": "I open eyelids."
          },
          "jazzyState": {
            "text": "I open eyelids.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The rickshaw rolls away.",
      "wordCount": 4,
      "order": 252,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The rickshaw rolls away.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The rickshaw rolls away.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rickshaw",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, away-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rolls-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rolls-3, rickshaw-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rickshaw",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rickshaw"
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(away-4, rolls-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "4",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(away-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "away"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "away"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "rickshaw"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "rolls"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "away."
                ]
              }
            },
            "sentence": "The rickshaw rolls away."
          },
          "jazzyState": {
            "text": "The rickshaw rolls away.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Pain pierces ear.",
      "wordCount": 3,
      "order": 253,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Pain pierces ear.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Pain pierces ear.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Pain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pierces",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ear",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pierces-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pierces-2, Pain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Pain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pierces-2, ear-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "ear",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ear"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pierces-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "ear"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Pain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pierces"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ear."
                ]
              }
            },
            "sentence": "Pain pierces ear."
          },
          "jazzyState": {
            "text": "Pain pierces ear.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The sonus warning rod sees to mind, \u003eMOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 13,
      "order": 254,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "The sonus warning rod sees to mind, DIALOG_OBJECT_1",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The sonus warning rod sees to mind, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sonus",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "warning",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rod",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "sees",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sees-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rod-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rod-4, sonus-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sonus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sonus"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rod-4, warning-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "warning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "warning"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sees-5, rod-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                },
                "gov": {
                  "index": "5",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(sees-5, mind-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(mind-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "string": "dep(mind-7, DIALOG_OBJECT_1-9)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "7",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-9, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "rod"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NN": "sonus"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "mind"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "VBG": "warning"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "sees"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "The sonus warning rod sees to mind, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "The sonus warning rod sees to mind, DIALOG_OBJECT_1",
            "misspelledWords": {
              "sonus": [
                "sons",
                "son\u0027s",
                "songs",
                "bonus"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003eMOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003eMOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003eMOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003eMOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!"
          },
          "jazzyState": {
            "text": "MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Sharp tone pierces mind.",
      "wordCount": 4,
      "order": 255,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Sharp tone pierces mind.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Sharp tone pierces mind.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Sharp",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tone",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pierces",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pierces-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tone-2, Sharp-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sharp",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Sharp"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tone"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pierces-3, tone-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tone"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pierces-3, mind-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pierces-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "mind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tone"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pierces"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Sharp"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "Sharp tone pierces mind."
          },
          "jazzyState": {
            "text": "Sharp tone pierces mind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Body burns.",
      "wordCount": 2,
      "order": 256,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Body burns.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Body burns.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Body",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "burns",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burns-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(burns-2, Body-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Body"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burns-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "burns"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Body"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "burns."
                ]
              }
            },
            "sentence": "Body burns."
          },
          "jazzyState": {
            "text": "Body burns.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty\u0027s elbow pokes Richard\u0027s stomach. Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door. Richard smiles. Betty takes palm and waves it before revolving door.",
      "wordCount": 30,
      "order": 257,
      "sentenceCount": 4,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty\u0027s elbow pokes Richard\u0027s stomach.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty\u0027s elbow pokes Richard\u0027s stomach.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "elbow",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pokes",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stomach",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pokes-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pokes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Betty-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(elbow-3, Betty-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "3",
                  "lemma": "elbow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "elbow"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pokes-4, elbow-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "elbow",
                  "ner": "O",
                  "tag": "NN",
                  "word": "elbow"
                },
                "gov": {
                  "index": "4",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pokes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pokes-4, stomach-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "stomach",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stomach"
                },
                "gov": {
                  "index": "4",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pokes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pokes-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pokes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-5, \u0027s-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(stomach-7, Richard-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "7",
                  "lemma": "stomach",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stomach"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "elbow"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "stomach"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pokes"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stomach."
                ]
              }
            },
            "sentence": "Betty\u0027s elbow pokes Richard\u0027s stomach."
          },
          "jazzyState": {
            "text": "Betty\u0027s elbow pokes Richard\u0027s stomach.",
            "misspelledWords": {
              "Richard\u0027s": [],
              "Betty\u0027s": [
                "bet\u0027s",
                "patty\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door.",
          "wordCount": 14,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "winks",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "tugs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "arm",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "him",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, winks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(winks-2, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(winks-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(winks-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(winks-2, tugs-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tug",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tugs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(winks-2, arm-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "8",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arm"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(winks-2, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(winks-2, pulls-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wink",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "winks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-6, \u0027s-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(arm-8, at-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "8",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arm"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(arm-8, Richard-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "8",
                  "lemma": "arm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "arm"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-10, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "10",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pulls-10, him-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "he",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "him"
                },
                "gov": {
                  "index": "10",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(pulls-10, door-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "15",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "10",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-15, to-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "15",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-15, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-15, revolving-14)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "15",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node_1_node": {
                  "NN": "arm"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_1_node_2_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "PRP": "him"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "winks"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_0_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "VBZ": "tugs"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_2_node_0_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door."
          },
          "jazzyState": {
            "text": "Betty winks and tugs at Richard\u0027s arm and pulls him to the revolving door.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard\u0027s": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Richard smiles.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard smiles.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "smiles",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, smiles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(smiles-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(smiles-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "smile",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "smiles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "smiles"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "smiles."
                ]
              }
            },
            "sentence": "Richard smiles."
          },
          "jazzyState": {
            "text": "Richard smiles.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Betty takes palm and waves it before revolving door.",
          "wordCount": 9,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Betty takes palm and waves it before revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "takes",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "palm",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "waves",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, takes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "takes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(takes-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "takes"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(takes-2, it-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "2",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "takes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(takes-2, door-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "takes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(takes-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "take",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "takes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(palm-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(palm-3, waves-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                },
                "gov": {
                  "index": "3",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(it-6, palm-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                },
                "gov": {
                  "index": "6",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(it-6, waves-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                },
                "gov": {
                  "index": "6",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-9, before-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-9, revolving-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revolving"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NNS": "waves"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "VBG": "revolving"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "PRP": "it"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NN": "palm"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "takes"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Betty takes palm and waves it before revolving door."
          },
          "jazzyState": {
            "text": "Betty takes palm and waves it before revolving door.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I shout, \u0027\u0027LEAVE!\u0027\u0027 and, \u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027",
      "wordCount": 5,
      "order": 258,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I shout, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I shout, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "shout",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, shout-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shout"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_1_node": {
                  "NN": "shout"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NN": "I"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I shout, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I shout, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "LEAVE!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "LEAVE",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, LEAVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(LEAVE-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VB",
                  "word": "LEAVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "LEAVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027LEAVE!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027LEAVE!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "and, DIALOG_OBJECT_1",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "and, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(DIALOG_OBJECT_1-3, and-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "and"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "and, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "and, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "RUUUUUUUUUUUUUUUUUN!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "RUUUUUUUUUUUUUUUUUN",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, RUUUUUUUUUUUUUUUUUN-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ruuuuuuuuuuuuuuuuun",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUUUUUUUUUUUUUUUUUN"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(RUUUUUUUUUUUUUUUUUN-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "ruuuuuuuuuuuuuuuuun",
                  "ner": "O",
                  "tag": "NN",
                  "word": "RUUUUUUUUUUUUUUUUUN"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "RUUUUUUUUUUUUUUUUUN"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027RUUUUUUUUUUUUUUUUUN!\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 6,
      "order": 259,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!"
          },
          "jazzyState": {
            "text": "MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003cFocus. Betty. Alive. Focus. Betty. Alive...\u003e I run from street to sidewalk to revolving door.",
      "wordCount": 15,
      "order": 260,
      "sentenceCount": 7,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003cFocus.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Focus.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Focus",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Focus-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Focus-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Focus"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003cFocus."
                ]
              }
            },
            "sentence": "\u003cFocus."
          },
          "jazzyState": {
            "text": "\u003cFocus.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cFocus.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Betty.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Betty.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Betty-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Betty-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Betty."
          },
          "jazzyState": {
            "text": "Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Alive.",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Alive.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Alive",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Alive-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Alive-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Alive"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Alive."
                ]
              }
            },
            "sentence": "Alive."
          },
          "jazzyState": {
            "text": "Alive.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Focus.",
          "wordCount": 1,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Focus.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Focus",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Focus-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Focus-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Focus"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Focus."
                ]
              }
            },
            "sentence": "Focus."
          },
          "jazzyState": {
            "text": "Focus.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Betty.",
          "wordCount": 1,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "Betty.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Betty-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Betty-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Betty."
          },
          "jazzyState": {
            "text": "Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Alive...\u003e",
          "wordCount": 1,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "Alive...",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Alive",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Alive-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Alive-1, ...-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_node": {
                  "NNP": "Alive"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Alive...\u003e"
                ]
              }
            },
            "sentence": "Alive...\u003e"
          },
          "jazzyState": {
            "text": "Alive...\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Alive...\u003e",
            "originOfDialogFromOrderParagraph": 6,
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I run from street to sidewalk to revolving door.",
          "wordCount": 9,
          "orderParagraph": 7,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I run from street to sidewalk to revolving door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "run",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sidewalk",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, run-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(run-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(run-2, street-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(run-2, door-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(run-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(street-4, sidewalk-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                },
                "gov": {
                  "index": "4",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sidewalk-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sidewalk",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sidewalk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-9, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-9, revolving-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "sidewalk"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBN": "run"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I run from street to sidewalk to revolving door."
          },
          "jazzyState": {
            "text": "I run from street to sidewalk to revolving door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Ray burn burns.",
      "wordCount": 3,
      "order": 261,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Ray burn burns.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Ray burn burns.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Ray",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "burns",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, burn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-2, Ray-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Ray",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Ray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-2, burns-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(burn-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "burns"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Ray"
                },
                "s_node_1_node_0_node": {
                  "VBP": "burn"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "burns."
                ]
              }
            },
            "sentence": "Ray burn burns."
          },
          "jazzyState": {
            "text": "Ray burn burns.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 6,
      "order": 262,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e...MOVE"
                ]
              }
            },
            "sentence": "\u003e...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!"
          },
          "jazzyState": {
            "text": "MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Pain pierces head.",
      "wordCount": 3,
      "order": 263,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Pain pierces head.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Pain pierces head.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Pain",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pierces",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pierces-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pierces-2, Pain-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "pain",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Pain"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pierces-2, head-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pierces-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pierce",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pierces"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "head"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Pain"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pierces"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "head."
                ]
              }
            },
            "sentence": "Pain pierces head."
          },
          "jazzyState": {
            "text": "Pain pierces head.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty steps into quarter section of revolving door. Richard steps into quarter section of revolving door.",
      "wordCount": 16,
      "order": 264,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Betty steps into quarter section of revolving door.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Betty steps into quarter section of revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "quarter",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-2, Betty-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(steps-2, section-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(steps-2, door-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steps-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(section-5, into-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(section-5, quarter-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "quarter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "quarter"
                },
                "gov": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-8, revolving-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NN": "quarter"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "steps"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "section"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Betty steps into quarter section of revolving door."
          },
          "jazzyState": {
            "text": "Betty steps into quarter section of revolving door.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Richard steps into quarter section of revolving door.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Richard steps into quarter section of revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "quarter",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-2, Richard-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(steps-2, section-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(steps-2, door-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steps-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(section-5, into-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(section-5, quarter-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "quarter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "quarter"
                },
                "gov": {
                  "index": "5",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-8, revolving-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NN": "quarter"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "steps"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "section"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Richard steps into quarter section of revolving door."
          },
          "jazzyState": {
            "text": "Richard steps into quarter section of revolving door.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY! MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 6,
      "order": 265,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!"
          },
          "jazzyState": {
            "text": "MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step between revolving door, reach and grab Richard.",
      "wordCount": 9,
      "order": 266,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I step between revolving door, reach and grab Richard.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I step between revolving door, reach and grab Richard.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "reach",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "grab",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(step-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(step-2, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(step-2, grab-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VB",
                  "word": "grab"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, between-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "between",
                  "ner": "O",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, revolving-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(door-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(door-5, reach-7)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "7",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "NN",
                  "word": "reach"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grab-9, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "9",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VB",
                  "word": "grab"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(grab-9, Richard-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "9",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VB",
                  "word": "grab"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_4_node_0_node": {
                  "VB": "grab"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "IN": "between"
                },
                "s_node_1_node_0_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VB": "reach"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_4_node_1_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VB": "step"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_3_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Richard."
                ]
              }
            },
            "sentence": "I step between revolving door, reach and grab Richard."
          },
          "jazzyState": {
            "text": "I step between revolving door, reach and grab Richard.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard slows step.",
      "wordCount": 3,
      "order": 267,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard slows step.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard slows step.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "slows",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slows-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slows"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(slows-2, step-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NN",
                  "word": "step"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slows-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "slow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "slows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "step"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "slows"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "step."
                ]
              }
            },
            "sentence": "Richard slows step."
          },
          "jazzyState": {
            "text": "Richard slows step.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand between revolving door.",
      "wordCount": 5,
      "order": 268,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand between revolving door.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand between revolving door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(stand-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, between-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "between",
                  "ner": "O",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, revolving-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "between"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I stand between revolving door."
          },
          "jazzyState": {
            "text": "I stand between revolving door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho flows between legs and into the quarter section of revolving door.",
      "wordCount": 12,
      "order": 269,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho flows between legs and into the quarter section of revolving door.",
          "wordCount": 12,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho flows between legs and into the quarter section of revolving door.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "legs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "DATE"
              },
              {
                "pos": "NN",
                "text": "quarter",
                "net": "DATE"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(flows-2, flows-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(flows-2, legs-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(flows-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2\u0027, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(flows-2\u0027, section-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "9",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(legs-4, between-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "between",
                  "ner": "O",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(section-9, into-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "9",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(section-9, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "DATE",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(section-9, quarter-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "quarter",
                  "ner": "DATE",
                  "tag": "NN",
                  "word": "quarter"
                },
                "gov": {
                  "index": "9",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(section-9, door-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "12",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "9",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-12, of-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "12",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-12, revolving-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "12",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "quarter"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "IN": "between"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_2_node": {
                  "NN": "section"
                },
                "s_node_1_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBG": "revolving"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "legs"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Psycho flows between legs and into the quarter section of revolving door."
          },
          "jazzyState": {
            "text": "Psycho flows between legs and into the quarter section of revolving door.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003cFocus. Betty. Alive.\u003e",
      "wordCount": 3,
      "order": 270,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003cFocus.",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Focus.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Focus",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Focus-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Focus-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Focus"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003cFocus."
                ]
              }
            },
            "sentence": "\u003cFocus."
          },
          "jazzyState": {
            "text": "\u003cFocus.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cFocus.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Betty.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Betty.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Betty-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Betty-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "Betty."
          },
          "jazzyState": {
            "text": "Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Alive.\u003e",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Alive.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Alive",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Alive-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Alive-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "alive",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Alive"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Alive"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Alive.\u003e"
                ]
              }
            },
            "sentence": "Alive.\u003e"
          },
          "jazzyState": {
            "text": "Alive.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Alive.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e...MOVE AWAY! MOVE AWAY!...\u003c",
      "wordCount": 4,
      "order": 271,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e...MOVE"
                ]
              }
            },
            "sentence": "\u003e...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!...\u003c",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!...",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(MOVE-1, AWAY-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-1, ...-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(AWAY-2, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "AWAY!...\u003c"
                ]
              }
            },
            "sentence": "MOVE AWAY!...\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!...\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!...\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    }
  ]
}