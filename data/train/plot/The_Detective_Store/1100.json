{
  "file": "/gitbox/Word/Prostitute/Product/Goods/Words/The_Detective_Store/1100.wpml",
  "version": "0.0.5",
  "gitSha": "30edb575085b45266571fd12f3b14e086963ece2",
  "localDateTime": "2017-09-16T11:02:55.779",
  "copyright": "",
  "writers": [
    "Kalab J. Oster"
  ],
  "editors": [
    "Kalab J. Oster"
  ],
  "publishers": [
    "Word ProstituteÂ®"
  ],
  "fileState": "I feel and think, \u003cFrom D.C.,\u003e and ray burn burns, and the revolving door spins.\n\n\u003e...MOVE AWAY!!!\u003c sees the warning rod to mind.\n\n\u003cFocus,\u003e I think and pull Richard\u0027s shoulder. \n\n\u003e...MOVE AWAY!!!\u003c sees the warning rod to mind.\n\nI push back against the revolving door. \n\n\u003e|...MOVE AWAY!!!\u003c sees warning in mind.\n\nThe revolving door stops revolving.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nI push the revolving door back, and the revolving door moves back, and Richard looks at me.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nRichard pushes the revolving door forward, and Psycho pushes the revolving door forward.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nRichard and I create eye contact, and Betty pushes the revolving door forward and looks back.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nThe revolving door revolves forward.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nThe revolving door opens to lobby.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nA red light flashes in the lobby. \n\n\u003e|...MOVE AWAY!!!\u003c\n\nPsycho whips two limbs and taps both Betty and Richard on the forehead. \n\n\u003e|...MOVE AWAY!!!\u003c\n\nPsycho flows into lobby.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nThree Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nRichard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead. \n\n\u003e|...MOVE AWAY!!!\u003c\n\nRichard hits head on revolving door frame, and Betty slides with revolving door.\n\n\u003e|...MOVE AWAY!!!\u003c\n\nBetty falls flat on floor, and I think, \u003cBetty,\u003e and Richard slides to a sit, and Secret Sentry one, two and three fall to ground. \n\n\u003e...MOVE AWAY!!!\u003c\n\nPsycho poses all three Secret Sentry standing behind three podiums.\n\n\u003e|...MOVE AWAY! MOVE AWAY!!!\u003c\n\nThe revolving door is open.\n\n\u003e|...MOVE AWAY! MOVE AWAY!!!\u003c\n\nI step over Richard and Betty. I push revolving door. \u003cBad.\u003e\n\nRichard falls to floor.\n\nTwo Psycho limbs span to Betty and Richard. Psycho pulls Betty and Richard from revolving door. \n\nRichard and Betty dangle from limbs. \u003c|Like on hangers.\u003e\n\nRevolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall.\n\n\u003c|Forward.\u003e I feel and think, \u003c|Corner.\u003e ,,Put Richard and Betty in corner, Psycho.\u0027\u0027 I point left to corner. I look at Psycho. \u0027\u0027Please.\u0027\u0027\n\nPsycho lays Richard and Betty in corner. \n\nThe three unconscious Secret Sentry heads turn to follow. One says with mouth moving and a deep voice, ,,Welcome to Secret Sentry Building. How may I help you?\u0027\u0027\n\nI point to corner and Betty and Richard. \u003c|Good puppeteer.\u003e I step. ,,Did you learn from another puppet master?\u0027\u0027 I look out window wall. \n\nGee Forty-three land on street.\n\n,,I learn with questions.\u0027\u0027 Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard.\n\n,,Gee Forty-three landing.\u0027\u0027 I stand.\n\nI look at podiums before tunnel. \u003c|Into building.\u003e\n\nSweat drips.\n\nI point to three podiums. \u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027 I think, \u003c|Congov, too.\u003e\n\nGee Forty-three float to window wall.\n\nPsycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov.\n\nI feel and think, \u003c|Why Psycho move?\u003e \u0027\u0027What is the red button?\u0027\u0027 I say. I look at tunnel.\n\nDark tunnel is beyond Psycho.\n\n,,The red button is a trigger to lower a blast sheet to seal the tunnel. The blast shield seals in the cyanide, and it creates another wall. The blast shield must be closed to open the steel door to shaft,\u0027\u0027 says Psycho. \u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027\n\nI look through dark tunnel. ,,Sacrifice?\u0027\u0027 \n\nI look at motionless Gee Forty-three.\n\nPsycho says, ,,I will cover the tunnel entrance until my body is destroyed. After my body is destroyed my core will eject.\u0027\u0027\n\n,,I don\u0027t remember discussing your core.\u0027\u0027 I wipe sweat from forehead with forearm.\n\nPsycho says, ,,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027\n\n\u003c|A core.\u003e ,,How long will.\u0027\u0027 I look at the bodies in corner. \u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027\n\nPsycho says, ,,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027\n\nI stop by Psycho.\n\nLimbs cover red button. \n\nThe tunnel is circular.\n\nI stand. I look down tunnel. ,,Cyanide.\u0027\u0027 \n\nTunnel is dark.\n\nPsycho says, ,,Yes.\u0027\u0027\n\nI turn and point. ,,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027\n\nWhite light shines through window.\n\n,,The window wall minimum destruction time is one minute. Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027 says Psycho.\n\nI look down tunnel and say, ,,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027 I wipe forehead with handkerchief. \n\nTunnel is white panels with black borders.\n\nPsycho grabs the emergency pack from Secret Sentry. Psycho lifts the pack, and a limb swings and holds the pack afore me.\n\n\u0027\u0027Thanks.\u0027\u0027 I grab the pack. I open pack side pocket. \u003c|Contractor badge, pepper spray, panic emitter.\u003e I open pack side pocket. \u003c|Shock rod.\u003e I look through window wall.\n\nTwo Gee Forty-three land before window wall.\n\nI look in pack. \u003c|Sex cap, bottle of water. No gas mask.\u003e \u0027\u0027So what about your core? Why not.\u0027\u0027 I fasten pack. I look at Psycho. \u0027\u0027Why not walk in with your body?\u0027\u0027\n\nPsycho stands on limbs before tunnel entrance. ,,The white door will stop Psycho\u0027s body,\u0027\u0027 says Psycho. \n\nI strap pack to back.\n\nSweat drips.\n\nGee Forty-three land on street. \n\n\u003c|Will they know about?\u003e\n\nPsycho\u0027s limbs slowly wave from core to tip.\n\nSweat drips.\n\n,,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027\n\n,,No,\u0027\u0027 says Psycho. Psycho stands before tunnel. \u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027 \n\nI point to Gee Forty-three landing on street. ,,Ten.\u0027\u0027\n\nPsycho says, ,,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027\n\n\u003c|What is timing of eleven minutes?\u003e I say, ,,Betty and Richard change the tap. How will they disconnect?\u0027\u0027\n\n,,The tap will be destroyed,\u0027\u0027 says Psycho.\n\nDiesel engine bangs.\n\nA semi-truck pulls flat bed trailer and a tarp covered load. The load on trailer is taller than two building levels. The semi-truck rolls and stops behind the Gee Forty-three. \n\nI stare through window. ,,What is?\u0027\u0027\n\nGee Forty-three float to window.\n\nI say, \u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027\n\n,,Cyanide,\u0027\u0027 says Psycho.\n\nI step to tunnel. \u003c|Primitive.\u003e ,,Can you disarm cyanide?\u0027\u0027\n\n,,No,\u0027\u0027 says Psycho.\n\nTunnel section illuminates, \u003c|Around me,\u003e soft white light.\n\nThe tunnel illuminates. The tunnel is sectioned cylinders. \n\n,,What if they need to destroy the building?\u0027\u0027 \n\nPsycho says, ,,Gee Forty-three are now programed to kill only you and me.\u0027\u0027\n\n\u003c|There are always traps.\u003e I step on the second cylinder.\n\nWhite light illuminates.\n\n\u003c|Cyanide.\u003e I think, \u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e I step on cylinder three. I look behind. \u003c|What is?\u003e I look through window wall.\n\nGee Forty-three rows spread their limbs and find position along the window wall.\n\nArmy Four Column marches on street. Army wear black silence suits. They carry barriers, caution fence and directional signs. \n\nI look at the tunnel of light. ,,What will be?\u0027\u0027\n\nThe tunnel sides are concave doors.\n\nPsycho says, ,,The Gee Forty-three will enter. They will tear down my wall body. The body will be destroyed. It will release my core. The red button will be pressed. The steel blast shield will slide open.\u0027\u0027\n\n\u003c|Then cyanide.\u003e I step forward. ,,And what will you do?\u0027\u0027 \n\nPsycho says, ,,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027\n\nCylinder section three dims and four illuminates.\n\nI step. Doors left and right shine. \u003c|Glowing doors.\u003e\n\nI look back.\n\nArmy set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones. Army pull tarp from the long, loaded, flatbed trailer.\n\nA giant machine with long and wide legs and a huge drill lay on flatbed.\n\nI look forward and look through tunnel. \u003c|Fourteen cylinder section of the tunnel.\u003e\n\nBANG! shakes. \u003c|Like a semi-truck hit the building.\u003e\n\nI stop, look behind.\n\nA giant walking drill has one foot on street. Another foot is lifted from flatbed trailer and set to ground.\n\nThe BANG! vibrates floor. \n\nThe huge six-joint legs, \u003c|Size of building beams,\u003e lift huge drill.\n\n,,That\u0027s...big,\u0027\u0027 I say.\n\nTwo more Gee Forty-three lower to street.\n\nPsycho says, ,,The action is for show, noise and Plan B.\u0027\u0027\n\nThe Gee Forty-three hover by window wall. \n\n,,The government has a plan B?\u0027\u0027\n\nBANG! is. Ground shakes.\n\n,,Plan B is destroy the tap,\u0027\u0027 says Psycho. \n\nI walk tunnel.\n\nThe cylinder sections illuminate. \n\nGee Forty-three row floats above Gee Forty-three row. They cover window wall.\n\nI stand before a door with a screen and a button.\n\nEverything is illuminated.\n\n\u003c|No shadows.\u003e\n\nThere is a three foot wide and seven foot tall door. \n\nI pound fist on the door.\n\n\u003c|Steel.\u003e\n\nThere is a matrix shelf. There is a green button.\n\nI look behind.\n\nGee Forty-three press limbs upon each other and the window wall. They whip and drag and slash upon window wall.\n\nBANG! vibrates.\n\n,,DO I PRESS THE GREEN BUTTON?\u0027\u0027 I holler.\n\n,,No,\u0027\u0027 says Psycho. \u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027\n\nI press the green button.\n\nThe steel door opens. A white door is behind. \n\nI knock on white door.\n\nKnock echo is hard and firm.\n\n\u003c|Thick.\u003e\n\nI press the green button.\n\nThe steel door closes.\n\nThe lights turn off.\n\n,,You know.\u0027\u0027 I look behind. \n\nPsycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance. Psycho\u0027s limbs cover, \u003c|Like a blanket,\u003e the tunnel entrance. Psycho says, ,,The window wall has been breached. The Gee Forty-three have entered.\u0027\u0027\n\nPsycho\u0027s limb blanket shakes and jolts.\n\nBANG! is.\n\nI step from cylinder fourteen to cylinder seven.\n\nPsycho shakes. \n\nHalf the tunnel is illuminated.\n\nPsycho\u0027s limb blanket waves and rolls and snaps. Metal whipping metal sounds are.\n\nA limb slides through, \u003c|Psycho,\u003e limb blanket.\n\nI step to cylinder number eight. ,,Why not now?\u0027\u0027\n\nA loud pop blasts and echoes. \n\nGee Forty-three limb penetrates, falls, hits ground and puffs, \u003c|Like smoke.\u003e\n\nLimbs shoot through and create limb sized holes in Psycho Blanket.\n\n\u003c|Cyanide rises.\u003e\n\nGee Forty-three limbs fall to ground. Limbs hit ground and puff.\n\nA limb shoots from Psycho Blanket.\n\nI step and duck.\n\nLimb lands on floor and hits door. Limb puffs.\n\n\u003c|Psycho Blanket torn.\u003e I stumble, walk eight, nine, ten, eleven. I fall. \n\nSomething squeezes and pulls around ankle.\n\n\u003c|A limb,\u003e I think. I slap palm upon smooth floor. And I reach for ankle and look back.\n\nLimb wraps around ankle and pulls.\n\nThe limb falls and puffs.\n\nHundreds of limb tips poke through Psycho Blanket.\n\nPsycho Blanket snaps and whips.\n\nI crawl. Hands lead. Feet follow. I run.\n\nA BRIGHT flash of electric illumination blinds.\n\nPsycho\u0027s body puffs.\n\nPsycho\u0027s core shoots to floor and rolls.\n\nBlast shield slices and slides during an instant. It cuts Gee Forty-three limbs. It shuts.\n\nLimbs puff.\n\nPsycho\u0027s core rolls.\n\nI stand before steel door.\n\nPsycho\u0027s core rolls.\n\n\u003c|The core.\u003e\n\nGas hisses in tunnel.\n\nThe steel door slides open.\n\nI inhale. I stand before white door.\n\nPsycho\u0027s core rolls.\n\nI reach for the green button.\n\nFour Gee Forty-three limbs rise from ground and wrap ankles and wrists. \n\nI pull.\n\nThe limbs are stuck to ground. The limbs slither over floor. The limbs pull body from the path of Psycho\u0027s core to white door.\n\nPsycho\u0027s core rolls into the white door.\n\nThe Gee Forty-three limbs puff. \n\nGas hisses.\n\nI push white door.\n\nThe white door is.\n",
  "wordCount": 1946,
  "paragraphStates": [
    {
      "paragraph": "I feel and think, \u003cFrom D.C.,\u003e and ray burn burns, and the revolving door spins.",
      "wordCount": 15,
      "order": 1,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1, and ray burn burns, and the revolving door spins.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1, and ray burn burns, and the revolving door spins.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ray",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "burn",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "burns",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "spins",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, feel-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(feel-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, spins-17)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "17",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "spins"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(feel-2, burn-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(feel-2, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-13)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "13",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(DIALOG_OBJECT_1-6, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(DIALOG_OBJECT_1-6, ray-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "ray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ray"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-10, DIALOG_OBJECT_1-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "10",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(burn-10, ray-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "ray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ray"
                },
                "gov": {
                  "index": "10",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(burn-10, burns-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "burns"
                },
                "gov": {
                  "index": "10",
                  "lemma": "burn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "burn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-16, the-14)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "14",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-16, revolving-15)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "16",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spins-17, door-16)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "17",
                  "lemma": "spin",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "spins"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_3_node_1_node": {
                  "VBP": "burn"
                },
                "s_node_0_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_3_node_2_node": {
                  "NNS": "burns"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_3_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_1_node_0_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_1_node_0_node_2_node": {
                  "VBP": "think"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_0_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_3_node_0_node": {
                  "RB": "ray"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_3_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_3_node_1_node": {
                  "VBZ": "spins"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "spins."
                ]
              }
            },
            "sentence": "I feel and think, DIALOG_OBJECT_1, and ray burn burns, and the revolving door spins."
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1, and ray burn burns, and the revolving door spins.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cFrom D.C.,\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "From D.C.,",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "From",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "D.C.",
                "net": "LOCATION"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, D.C.-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "D.C.",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "D.C."
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(D.C.-2, From-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "From"
                },
                "gov": {
                  "index": "2",
                  "lemma": "D.C.",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "D.C."
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(D.C.-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "D.C.",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "D.C."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "D.C."
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "From"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "D.C.,\u003e"
                ]
              }
            },
            "sentence": "\u003cFrom D.C.,\u003e"
          },
          "jazzyState": {
            "text": "\u003cFrom D.C.,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cFrom D.C.,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e...MOVE AWAY!!!\u003c sees the warning rod to mind.",
      "wordCount": 8,
      "order": 2,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e...MOVE"
                ]
              }
            },
            "sentence": "\u003e...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "sees the warning rod to mind.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "sees the warning rod to mind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "sees",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "warning",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rod",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sees-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sees-1, rod-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(sees-1, mind-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sees-1, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rod-4, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rod-4, warning-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "warning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "warning"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(mind-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "VBG": "warning"
                },
                "s_node_0_node_1_node_2_node": {
                  "NN": "rod"
                },
                "s_node_0_node_2_node_1_node": {
                  "VB": "mind"
                },
                "s_node_0_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "sees"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "sees the warning rod to mind."
          },
          "jazzyState": {
            "text": "sees the warning rod to mind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003cFocus,\u003e I think and pull Richard\u0027s shoulder.",
      "wordCount": 7,
      "order": 3,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I think and pull Richard\u0027s shoulder.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I think and pull Richard\u0027s shoulder.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shoulder",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(think-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(think-4, pull-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-6, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-6, shoulder-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-7, \u0027s-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(shoulder-9, Richard-7)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "9",
                  "lemma": "shoulder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shoulder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_2_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_3_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_3_node_0_node": {
                  "VBP": "think"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_2_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_2_node_1_node_1_node": {
                  "NN": "shoulder"
                },
                "s_node_3_node_2_node_1_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_3_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shoulder."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I think and pull Richard\u0027s shoulder."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I think and pull Richard\u0027s shoulder.",
            "misspelledWords": {
              "Richard\u0027s": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cFocus,\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Focus,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Focus",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Focus-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Focus-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "focus",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Focus"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Focus"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003cFocus,\u003e"
          },
          "jazzyState": {
            "text": "\u003cFocus,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cFocus,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e...MOVE AWAY!!!\u003c sees the warning rod to mind.",
      "wordCount": 8,
      "order": 4,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e...MOVE"
                ]
              }
            },
            "sentence": "\u003e...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "sees the warning rod to mind.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "sees the warning rod to mind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "sees",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "warning",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rod",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sees-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sees-1, rod-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(sees-1, mind-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sees-1, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rod-4, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rod-4, warning-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "warning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "warning"
                },
                "gov": {
                  "index": "4",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(mind-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "VBG": "warning"
                },
                "s_node_0_node_1_node_2_node": {
                  "NN": "rod"
                },
                "s_node_0_node_2_node_1_node": {
                  "VB": "mind"
                },
                "s_node_0_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "sees"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "sees the warning rod to mind."
          },
          "jazzyState": {
            "text": "sees the warning rod to mind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I push back against the revolving door.",
      "wordCount": 7,
      "order": 5,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I push back against the revolving door.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I push back against the revolving door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "against",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, push-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(push-2, back-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:against(push-2, door-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:against"
                },
                "dep": {
                  "index": "7",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-7, against-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "against",
                  "ner": "O",
                  "tag": "IN",
                  "word": "against"
                },
                "gov": {
                  "index": "7",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-7, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-7, revolving-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "7",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "against"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "back"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "push"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I push back against the revolving door."
          },
          "jazzyState": {
            "text": "I push back against the revolving door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c sees warning in mind.",
      "wordCount": 6,
      "order": 6,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "sees warning in mind.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "sees warning in mind.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "sees",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "warning",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sees-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sees-1, warning-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "warning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "warning"
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sees-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "see",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "sees"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(warning-2, mind-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "warning",
                  "ner": "O",
                  "tag": "NN",
                  "word": "warning"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mind-4, in-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "mind"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "sees"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBG": "warning"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mind."
                ]
              }
            },
            "sentence": "sees warning in mind."
          },
          "jazzyState": {
            "text": "sees warning in mind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The revolving door stops revolving.",
      "wordCount": 5,
      "order": 7,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The revolving door stops revolving.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The revolving door stops revolving.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, revolving-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(stops-4, revolving-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revolving"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "VBG": "revolving"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "stops"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "revolving."
                ]
              }
            },
            "sentence": "The revolving door stops revolving."
          },
          "jazzyState": {
            "text": "The revolving door stops revolving.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 8,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I push the revolving door back, and the revolving door moves back, and Richard looks at me.",
      "wordCount": 17,
      "order": 9,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I push the revolving door back, and the revolving door moves back, and Richard looks at me.",
          "wordCount": 17,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I push the revolving door back, and the revolving door moves back, and Richard looks at me.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "moves",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, push-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(push-2, looks-17)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "17",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, .-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(push-2, door-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(push-2, back-6)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(push-2, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(push-2, moves-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "moves"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, ,-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(push-2, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, revolving-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-11, revolving-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(moves-12, door-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "12",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "moves"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(moves-12, back-13)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "12",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "moves"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(looks-17, Richard-16)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "17",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(looks-17, me-19)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "19",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "17",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(me-19, at-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "19",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node": {
                  "RB": "back"
                },
                "s_node_3_node_0_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_3_node_0_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_3_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_3_node_3_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_0_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBP": "push"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_3_node_1_node_1_node_1_node": {
                  "PRP": "me"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_0_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_1_node_1_node": {
                  "RP": "back"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_3_node_1_node_0_node": {
                  "VBZ": "looks"
                },
                "s_node_3_node_3_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_0_node_1_node_0_node": {
                  "VBZ": "moves"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "me."
                ]
              }
            },
            "sentence": "I push the revolving door back, and the revolving door moves back, and Richard looks at me."
          },
          "jazzyState": {
            "text": "I push the revolving door back, and the revolving door moves back, and Richard looks at me.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 10,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard pushes the revolving door forward, and Psycho pushes the revolving door forward.",
      "wordCount": 13,
      "order": 11,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard pushes the revolving door forward, and Psycho pushes the revolving door forward.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard pushes the revolving door forward, and Psycho pushes the revolving door forward.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pushes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pushes-2, door-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(pushes-2, forward-6)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pushes-2, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pushes-2, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pushes-2, pushes-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pushes-2, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, revolving-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-10, Psycho-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pushes-10, door-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(pushes-10, forward-14)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-13, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-13, revolving-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_1_node_2_node": {
                  "RB": "forward"
                },
                "s_node_3_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_1_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_2_node": {
                  "RB": "forward"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forward."
                ]
              }
            },
            "sentence": "Richard pushes the revolving door forward, and Psycho pushes the revolving door forward."
          },
          "jazzyState": {
            "text": "Richard pushes the revolving door forward, and Psycho pushes the revolving door forward.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 12,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard and I create eye contact, and Betty pushes the revolving door forward and looks back.",
      "wordCount": 16,
      "order": 13,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard and I create eye contact, and Betty pushes the revolving door forward and looks back.",
          "wordCount": 16,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard and I create eye contact, and Betty pushes the revolving door forward and looks back.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "create",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "eye",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "contact",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, create-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-1, I-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(create-4, looks-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(create-4, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(create-4, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(create-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(create-4, contact-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "contact",
                  "ner": "O",
                  "tag": "NN",
                  "word": "contact"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(create-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(create-4, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(create-4, pushes-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "4",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(contact-6, eye-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "eye",
                  "ner": "O",
                  "tag": "NN",
                  "word": "eye"
                },
                "gov": {
                  "index": "6",
                  "lemma": "contact",
                  "ner": "O",
                  "tag": "NN",
                  "word": "contact"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pushes-10, looks-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-10, Betty-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pushes-10, door-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(pushes-10, forward-14)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pushes-10, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "10",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-13, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-13, revolving-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "13",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(looks-16, back-17)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "17",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "16",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(looks-16, Betty-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "16",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "looks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_2_node": {
                  "PRP": "I"
                },
                "s_node_3_node_1_node_0_node_2_node": {
                  "RB": "forward"
                },
                "s_node_3_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_3_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "contact"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBP": "create"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "NN": "eye"
                },
                "s_node_3_node_1_node_0_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_2_node_1_node": {
                  "RB": "back"
                },
                "s_node_3_node_1_node_0_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node": {
                  "VBZ": "looks"
                },
                "s_node_3_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node_1_node_1_node": {
                  "VBG": "revolving"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "back."
                ]
              }
            },
            "sentence": "Richard and I create eye contact, and Betty pushes the revolving door forward and looks back."
          },
          "jazzyState": {
            "text": "Richard and I create eye contact, and Betty pushes the revolving door forward and looks back.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 14,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The revolving door revolves forward.",
      "wordCount": 5,
      "order": 15,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The revolving door revolves forward.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The revolving door revolves forward.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "revolves",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, revolves-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "revolves"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, revolving-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(revolves-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "revolves"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(revolves-4, forward-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "4",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "revolves"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(revolves-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "revolves"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "RB": "forward"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "revolves"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forward."
                ]
              }
            },
            "sentence": "The revolving door revolves forward."
          },
          "jazzyState": {
            "text": "The revolving door revolves forward.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 16,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The revolving door opens to lobby.",
      "wordCount": 6,
      "order": 17,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The revolving door opens to lobby.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The revolving door opens to lobby.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "opens",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "lobby",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, opens-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, revolving-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(opens-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(opens-4, lobby-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lobby"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(opens-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(lobby-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lobby"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VB": "lobby"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "opens"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lobby."
                ]
              }
            },
            "sentence": "The revolving door opens to lobby."
          },
          "jazzyState": {
            "text": "The revolving door opens to lobby.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 18,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A red light flashes in the lobby.",
      "wordCount": 7,
      "order": 19,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A red light flashes in the lobby.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A red light flashes in the lobby.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "flashes",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lobby",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flashes-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(flashes-4, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(flashes-4, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(flashes-4, light-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(flashes-4, lobby-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lobby"
                },
                "gov": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flashes-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "flashes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(lobby-7, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lobby"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lobby-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lobby"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "lobby"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flashes"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lobby."
                ]
              }
            },
            "sentence": "A red light flashes in the lobby."
          },
          "jazzyState": {
            "text": "A red light flashes in the lobby.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 20,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho whips two limbs and taps both Betty and Richard on the forehead.",
      "wordCount": 13,
      "order": 21,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho whips two limbs and taps both Betty and Richard on the forehead.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho whips two limbs and taps both Betty and Richard on the forehead.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "whips",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "taps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "both",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, whips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(whips-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(whips-2, limbs-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(whips-2, taps-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "taps"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(whips-2, Betty-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whips-2, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-4, two-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(limbs-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(limbs-4, taps-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "taps"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "cc:preconj(limbs-4, both-7)",
                  "name": "preconjunct",
                  "tag": "cc:preconj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "both",
                  "ner": "O",
                  "tag": "CC",
                  "word": "both"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(limbs-4, Betty-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(limbs-4, Richard-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-8, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-8, Richard-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(Betty-8, forehead-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "13",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forehead-13, on-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "13",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(forehead-13, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_2_node_1_node": {
                  "CC": "both"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_1_node_1_node_0_node_0_node_0_node": {
                  "CD": "two"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_2_node_0_node": {
                  "NNP": "taps"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_2_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_1_node_0_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "whips"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forehead."
                ]
              }
            },
            "sentence": "Psycho whips two limbs and taps both Betty and Richard on the forehead."
          },
          "jazzyState": {
            "text": "Psycho whips two limbs and taps both Betty and Richard on the forehead.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 22,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho flows into lobby.",
      "wordCount": 4,
      "order": 23,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho flows into lobby.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho flows into lobby.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "flows",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lobby",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(flows-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(flows-2, lobby-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lobby"
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flows-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "flow",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "flows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(lobby-4, into-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lobby",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lobby"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "lobby"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "flows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lobby."
                ]
              }
            },
            "sentence": "Psycho flows into lobby."
          },
          "jazzyState": {
            "text": "Psycho flows into lobby.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 24,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Three Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button.",
      "wordCount": 21,
      "order": 25,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Three Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button.",
          "wordCount": 21,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Three Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Three",
                "net": "NUMBER"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "yawn",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "stretch",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "afore",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "circular",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "wrap",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wrap-19)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(yawn-4, Three-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(yawn-4, Secret-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(yawn-4, limbs-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(yawn-4, Sentry-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(yawn-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(yawn-4, stretch-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stretch",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stretch"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(yawn-4, ,-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(yawn-4, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(stretch-6, podiums-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "9",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "6",
                  "lemma": "stretch",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stretch"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(stretch-6, tunnel-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "13",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "6",
                  "lemma": "stretch",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stretch"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(podiums-9, behind-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "9",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(podiums-9, three-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "9",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(podiums-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(podiums-9, tunnel-13)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "13",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "9",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(tunnel-13, afore-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "afore",
                  "ner": "O",
                  "tag": "NN",
                  "word": "afore"
                },
                "gov": {
                  "index": "13",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tunnel-13, circular-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "circular",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "circular"
                },
                "gov": {
                  "index": "13",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-16, \u0027s-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "16",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-18, Psycho-16)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "16",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "18",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wrap-19, limbs-18)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "18",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wrap-19, yawn-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "yawn",
                  "ner": "O",
                  "tag": "NN",
                  "word": "yawn"
                },
                "gov": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wrap-19, stretch-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stretch",
                  "ner": "O",
                  "tag": "NN",
                  "word": "stretch"
                },
                "gov": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(wrap-19, button-23)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "23",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wrap-19, .-24)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "24",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "19",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(button-23, around-20)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "20",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "23",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-23, a-21)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "21",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "23",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-23, red-22)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "22",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "23",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_1_node_3_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_3_node_1_node_3_node_1_node_0_node": {
                  "IN": "around"
                },
                "s_node_1_node_3_node_1_node_0_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_3_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node_0_node_3_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_3_node_1_node_0_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_node_3_node_1_node_0_node_1_node_0_node": {
                  "JJ": "podiums"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node_3_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_3_node_1_node_3_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_3_node_1_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "yawn"
                },
                "s_node_1_node_3_node_1_node_3_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Three"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "behind"
                },
                "s_node_1_node_3_node_1_node_0_node_1_node_2_node": {
                  "JJ": "afore"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_3_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_3_node_1_node_1_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_3_node_1_node_3_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node": {
                  "VBP": "stretch"
                },
                "s_node_1_node_3_node_1_node_0_node_2_node": {
                  "JJ": "circular"
                },
                "s_node_1_node_3_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_node_3_node_1_node_3_node_0_node_2_node": {
                  "NN": "wrap"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "Three Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button."
          },
          "jazzyState": {
            "text": "Three Secret Sentry yawn and stretch behind three podiums and afore circular tunnel, and Psycho\u0027s limbs wrap around a red button.",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ],
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 26,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead.",
      "wordCount": 22,
      "order": 27,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead.",
          "wordCount": 22,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "knock",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-2, Richard-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(falls-4, knock-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-4, steps-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(falls-4, and-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(falls-4, forward-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-4, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(falls-4, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(falls-4, falls-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-4, .-26)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "26",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(falls-9, knock-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                },
                "gov": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-9, Betty-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(falls-9, forward-10)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-9, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(falls-9, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-15, three-13)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "15",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(limbs-15, Psycho-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "15",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(knock-16, Sentry-18)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "18",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:tmod(knock-16, one-19)",
                  "name": "temporal modifier",
                  "tag": "nmod:tmod"
                },
                "dep": {
                  "index": "19",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:tmod(knock-16, three-23)",
                  "name": "temporal modifier",
                  "tag": "nmod:tmod"
                },
                "dep": {
                  "index": "23",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(knock-16, forehead-25)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "25",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(knock-16, limbs-15)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "16",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-18, Secret-17)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "17",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(one-19, ,-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "19",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(one-19, two-21)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "21",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "19",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(one-19, and-22)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "22",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "19",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(one-19, three-23)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "23",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "19",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forehead-25, upon-24)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "24",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "25",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_3_node_0_node_2_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_1_node": {
                  "RB": "forward"
                },
                "s_node_3_node_3_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_3_node_1_node_2_node_0_node": {
                  "CD": "one"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_3_node_1_node_2_node_3_node": {
                  "CC": "and"
                },
                "s_node_3_node_3_node_1_node_1_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_3_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_3_node_1_node_3_node_0_node": {
                  "IN": "upon"
                },
                "s_node_0_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_0_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_3_node_1_node_2_node_4_node": {
                  "CD": "three"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "steps"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_3_node_3_node_1_node_1_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_3_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_1_node_1_node": {
                  "RB": "forward"
                },
                "s_node_3_node_3_node_1_node_3_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_3_node_1_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_3_node_1_node_2_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_3_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_3_node_1_node_0_node": {
                  "VB": "knock"
                },
                "s_node_0_node_1_node_2_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_3_node_0_node_0_node": {
                  "CD": "three"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_0_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_3_node_0_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_3_node_3_node_1_node_2_node_2_node": {
                  "CD": "two"
                },
                "s_node_3_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_3_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_3_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forehead."
                ]
              }
            },
            "sentence": "Richard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead."
          },
          "jazzyState": {
            "text": "Richard steps and falls forward, and Betty falls forward, and three Psycho limbs knock Secret Sentry one, two and three upon forehead.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 28,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard hits head on revolving door frame, and Betty slides with revolving door.",
      "wordCount": 13,
      "order": 29,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard hits head on revolving door frame, and Betty slides with revolving door.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard hits head on revolving door frame, and Betty slides with revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "hits",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "frame",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hits-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hits-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hits-2, head-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hits-2, slides-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hits-2, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(head-3, frame-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "7",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(head-3, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(head-3, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(head-3, slides-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(frame-7, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "7",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(frame-7, revolving-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "7",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(frame-7, door-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "7",
                  "lemma": "frame",
                  "ner": "O",
                  "tag": "NN",
                  "word": "frame"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slides-11, Betty-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "11",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(slides-11, door-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "11",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-14, with-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-14, revolving-13)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "frame"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "hits"
                },
                "s_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "NN": "head"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBZ": "slides"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "revolving"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Richard hits head on revolving door frame, and Betty slides with revolving door."
          },
          "jazzyState": {
            "text": "Richard hits head on revolving door frame, and Betty slides with revolving door.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 30,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Betty falls flat on floor, and I think, \u003cBetty,\u003e and Richard slides to a sit, and Secret Sentry one, two and three fall to ground.",
      "wordCount": 25,
      "order": 31,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Betty falls flat on floor, and I think, DIALOG_OBJECT_1, and Richard slides to a sit, and Secret Sentry one, two and three fall to ground.",
          "wordCount": 24,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Betty falls flat on floor, and I think, DIALOG_OBJECT_1, and Richard slides to a sit, and Secret Sentry one, two and three fall to ground.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "flat",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "NNS",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "sit",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "fall",
                "net": "DATE"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(falls-2, flat-3)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "flat",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(falls-2, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(falls-2, think-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-31)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "31",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(flat-3, floor-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flat",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flat"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-5, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(think-9, sit-18)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                },
                "gov": {
                  "index": "9",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(think-9, Sentry-22)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "9",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-9, I-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "9",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-9, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-11, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(DIALOG_OBJECT_1-11, and-13)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "13",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(DIALOG_OBJECT_1-11, slides-15)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "15",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slides-15, Richard-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "15",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(sit-18, to-16)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "16",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "string": "dep(sit-18, a-17)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "17",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sit-18, ,-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sit-18, and-20)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "20",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sit-18, Sentry-22)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sit-18, DIALOG_OBJECT_1-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sit-18, slides-15)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sit",
                  "ner": "O",
                  "tag": "VB",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-22, Secret-21)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "21",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "string": "dep(Sentry-22, one-23)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "23",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "string": "dep(Sentry-22, two-25)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "25",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "string": "dep(Sentry-22, fall-28)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "28",
                  "lemma": "fall",
                  "ner": "DATE",
                  "tag": "NN",
                  "word": "fall"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(Sentry-22, ground-30)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "30",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(one-23, ,-24)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "24",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "23",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(one-23, two-25)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "25",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "23",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(one-23, and-26)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "26",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "23",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(one-23, fall-28)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "28",
                  "lemma": "fall",
                  "ner": "DATE",
                  "tag": "NN",
                  "word": "fall"
                },
                "gov": {
                  "index": "23",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(fall-28, three-27)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "27",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "28",
                  "lemma": "fall",
                  "ner": "DATE",
                  "tag": "NN",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-30, to-29)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "29",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "30",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_node_3_node": {
                  "NNP": "Richard"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_2_node": {
                  "NN": "fall"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "JJ": "flat"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_node_4_node": {
                  "NNP": "slides"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_0_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_node_2_node": {
                  "CD": "two"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node": {
                  "VB": "ground"
                },
                "s_node_3_node_1_node_2_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node_0_node": {
                  "PRP": "I"
                },
                "s_node_3_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_3_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_1_node_1_node_1_node": {
                  "NN": "sit"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_0_node": {
                  "JJ": "Secret"
                },
                "s_node_3_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_node_4_node": {
                  "CD": "three"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_3_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_3_node_1_node_2_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_1_node_0_node": {
                  "CD": "one"
                },
                "s_node_3_node_1_node_2_node_0_node_3_node_1_node_0_node": {
                  "JJ": "Sentry"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ground."
                ]
              }
            },
            "sentence": "Betty falls flat on floor, and I think, DIALOG_OBJECT_1, and Richard slides to a sit, and Secret Sentry one, two and three fall to ground."
          },
          "jazzyState": {
            "text": "Betty falls flat on floor, and I think, DIALOG_OBJECT_1, and Richard slides to a sit, and Secret Sentry one, two and three fall to ground.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cBetty,\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Betty,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Betty-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Betty-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003cBetty,\u003e"
          },
          "jazzyState": {
            "text": "\u003cBetty,\u003e",
            "misspelledWords": {
              "Betty": [
                "petty"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003cBetty,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e...MOVE AWAY!!!\u003c",
      "wordCount": 2,
      "order": 32,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e...MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(MOVE-2, !!!-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "NNP": "!!!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "NNP": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e...MOVE"
                ]
              }
            },
            "sentence": "\u003e...MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "\u003e...MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e...MOVE AWAY!!!\u003c",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
              "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho poses all three Secret Sentry standing behind three podiums.",
      "wordCount": 10,
      "order": 33,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho poses all three Secret Sentry standing behind three podiums.",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho poses all three Secret Sentry standing behind three podiums.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "poses",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "all",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "standing",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, poses-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pose",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "poses"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(poses-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pose",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "poses"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(poses-2, standing-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pose",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "poses"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(poses-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pose",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "poses"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(standing-7, all-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "all",
                  "ner": "O",
                  "tag": "DT",
                  "word": "all"
                },
                "gov": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(standing-7, three-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(standing-7, Secret-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(standing-7, Sentry-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(standing-7, podiums-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "10",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "7",
                  "lemma": "standing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "standing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(podiums-10, behind-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "10",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(podiums-10, three-9)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "10",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "behind"
                },
                "s_node_1_node_1_node_0_node_3_node": {
                  "NNP": "Sentry"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "DT": "all"
                },
                "s_node_1_node_1_node_0_node_4_node": {
                  "NN": "standing"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "poses"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CD": "three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "podiums."
                ]
              }
            },
            "sentence": "Psycho poses all three Secret Sentry standing behind three podiums."
          },
          "jazzyState": {
            "text": "Psycho poses all three Secret Sentry standing behind three podiums.",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 4,
      "order": 34,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The revolving door is open.",
      "wordCount": 5,
      "order": 35,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The revolving door is open.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The revolving door is open.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, revolving-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-5, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(open-5, is-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "open."
                ]
              }
            },
            "sentence": "The revolving door is open."
          },
          "jazzyState": {
            "text": "The revolving door is open.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003e|...MOVE AWAY! MOVE AWAY!!!\u003c",
      "wordCount": 4,
      "order": 36,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003e|...MOVE AWAY!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "...MOVE AWAY!",
            "coreAnnotations": [
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, ...-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-2, AWAY-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(MOVE-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "MOVE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node": {
                  "NNP": "AWAY"
                },
                "s_node_0_node": {
                  "COLON": "..."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003e|...MOVE"
                ]
              }
            },
            "sentence": "\u003e|...MOVE AWAY!"
          },
          "jazzyState": {
            "text": "\u003e|...MOVE AWAY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003e|...MOVE AWAY!",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
              "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "MOVE AWAY!!!\u003c",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "MOVE AWAY!!!",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "MOVE",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "AWAY",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "!!!",
                "net": "NUMBER"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, MOVE-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(MOVE-1, AWAY-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "away",
                  "ner": "O",
                  "tag": "RB",
                  "word": "AWAY"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(MOVE-1, !!!-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!!!",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "!!!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "MOVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "AWAY"
                },
                "s_node_2_node": {
                  "NNP": "!!!"
                },
                "s_node_0_node": {
                  "NNP": "MOVE"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "MOVE AWAY!!!\u003c"
          },
          "jazzyState": {
            "text": "MOVE AWAY!!!\u003c",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "MOVE AWAY!!!\u003c",
            "dialogMark": [
              "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step over Richard and Betty. I push revolving door. \u003cBad.\u003e",
      "wordCount": 11,
      "order": 37,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I step over Richard and Betty.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step over Richard and Betty.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(step-2, Richard-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(step-2, Betty-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Richard-4, over-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-4, Betty-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Richard"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Betty."
                ]
              }
            },
            "sentence": "I step over Richard and Betty."
          },
          "jazzyState": {
            "text": "I step over Richard and Betty.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I push revolving door.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I push revolving door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, push-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(push-2, door-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-4, revolving-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "revolving"
                },
                "gov": {
                  "index": "4",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "push"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I push revolving door."
          },
          "jazzyState": {
            "text": "I push revolving door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cBad.\u003e",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Bad.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Bad",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Bad-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Bad"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Bad-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "bad",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Bad"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node": {
                  "JJ": "Bad"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003cBad.\u003e"
                ]
              }
            },
            "sentence": "\u003cBad.\u003e"
          },
          "jazzyState": {
            "text": "\u003cBad.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cBad.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard falls to floor.",
      "wordCount": 4,
      "order": 38,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Richard falls to floor.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard falls to floor.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-2, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(falls-2, floor-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "floor."
                ]
              }
            },
            "sentence": "Richard falls to floor."
          },
          "jazzyState": {
            "text": "Richard falls to floor.",
            "misspelledWords": {
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Two Psycho limbs span to Betty and Richard. Psycho pulls Betty and Richard from revolving door.",
      "wordCount": 16,
      "order": 39,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Two Psycho limbs span to Betty and Richard.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Two Psycho limbs span to Betty and Richard.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "span",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, span-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-3, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(limbs-3, Psycho-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(span-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(span-4, Betty-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(span-4, Richard-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(span-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Betty-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-6, Richard-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node_2_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "span"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Richard."
                ]
              }
            },
            "sentence": "Two Psycho limbs span to Betty and Richard."
          },
          "jazzyState": {
            "text": "Two Psycho limbs span to Betty and Richard.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho pulls Betty and Richard from revolving door.",
          "wordCount": 8,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho pulls Betty and Richard from revolving door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pulls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pulls-2, Betty-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pulls-2, Richard-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(pulls-2, door-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pulls-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-3, Richard-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-8, from-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-8, revolving-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "revolve",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "revolving"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "JJ": "revolving"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Betty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Psycho pulls Betty and Richard from revolving door."
          },
          "jazzyState": {
            "text": "Psycho pulls Betty and Richard from revolving door.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Richard and Betty dangle from limbs. \u003c|Like on hangers.\u003e",
      "wordCount": 9,
      "order": 40,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Richard and Betty dangle from limbs.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Richard and Betty dangle from limbs.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "dangle",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dangle-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dangle",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "dangle"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-1, Betty-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dangle-4, Richard-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dangle",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "dangle"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dangle-4, Betty-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dangle",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "dangle"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(dangle-4, limbs-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dangle",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "dangle"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dangle-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "dangle",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "dangle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(limbs-6, from-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "dangle"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "limbs."
                ]
              }
            },
            "sentence": "Richard and Betty dangle from limbs."
          },
          "jazzyState": {
            "text": "Richard and Betty dangle from limbs.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Like on hangers.\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Like on hangers.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Like",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hangers",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hangers-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "hanger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hangers"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hangers-3, Like-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Like"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hanger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hangers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hangers-3, on-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "3",
                  "lemma": "hanger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hangers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hangers-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "hanger",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hangers"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NNS": "hangers"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Like"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "hangers.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Like on hangers.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Like on hangers.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Like on hangers.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Revolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall.",
      "wordCount": 17,
      "order": 41,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Revolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall.",
          "wordCount": 17,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Present"
          ],
          "nlpState": {
            "sentence": "Revolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Revolving",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "clicks",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "closed",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "transparent",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sheet",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "rises",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ceiling",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, closed-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(clicks-3, Revolving-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "revolving",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Revolving"
                },
                "gov": {
                  "index": "3",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "clicks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(clicks-3, door-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "3",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "clicks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(closed-4, clicks-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "click",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "clicks"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(closed-4, .-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(closed-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(closed-4, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(closed-4, rises-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rises"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sheet-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(sheet-9, transparent-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "transparent",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "transparent"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rises-10, sheet-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                },
                "gov": {
                  "index": "10",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rises"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(rises-10, floor-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "12",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "10",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rises"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(rises-10, ceiling-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "14",
                  "lemma": "ceiling",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ceiling"
                },
                "gov": {
                  "index": "10",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "rises"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-12, from-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(ceiling-14, wall-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "18",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "14",
                  "lemma": "ceiling",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ceiling"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ceiling-14, to-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "14",
                  "lemma": "ceiling",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ceiling"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-18, the-16)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "16",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "18",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-18, window-17)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "17",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "18",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-18, along-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "18",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_2_node": {
                  "NNS": "clicks"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "along"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_0_node_1_node": {
                  "JJ": "transparent"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_node_2_node": {
                  "NN": "wall"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_1_node_0_node": {
                  "NN": "ceiling"
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node": {
                  "VBG": "Revolving"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBZ": "rises"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_0_node_1_node": {
                  "VBD": "closed"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "door"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_3_node_0_node_2_node": {
                  "NN": "sheet"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Revolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall."
          },
          "jazzyState": {
            "text": "Revolving door clicks closed, and a transparent sheet rises from floor to ceiling along the window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Forward.\u003e I feel and think, \u003c|Corner.\u003e ,,Put Richard and Betty in corner, Psycho.\u0027\u0027 I point left to corner. I look at Psycho. \u0027\u0027Please.\u0027\u0027",
      "wordCount": 23,
      "order": 42,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Forward.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Forward.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Forward-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Forward"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Forward-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Forward"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBN": "Forward"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Forward.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Forward.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Forward.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Forward.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Corner.\u003e",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Corner.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Corner",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Corner-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Corner"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Corner-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Corner"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Corner"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Corner.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Corner.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Corner.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Corner.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Put Richard and Betty in corner, Psycho.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Put Richard and Betty in corner, Psycho.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Put",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Put-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Put"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Put-1, Richard-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "1",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Put"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Put-1, Betty-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Put"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(Put-1, corner-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "1",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Put"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Put-1, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "put",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Put"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-2, Betty-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-6, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(corner-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(corner-6, Psycho-8)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node_1_node_2_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "in"
                },
                "s_node_0_node_2_node_1_node_0_node": {
                  "NN": "corner"
                },
                "s_node_0_node_0_node": {
                  "VB": "Put"
                },
                "s_node_0_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "NNP": "Richard"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Psycho.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Put Richard and Betty in corner, Psycho.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Put Richard and Betty in corner, Psycho.\u0027\u0027",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Put Richard and Betty in corner, Psycho.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I point left to corner.",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "PastParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I point left to corner.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "left",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, point-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "string": "dep(point-2, left-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "left"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(point-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(left-3, corner-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                },
                "gov": {
                  "index": "3",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(corner-5, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "VB": "corner"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "point"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "left"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "corner."
                ]
              }
            },
            "sentence": "I point left to corner."
          },
          "jazzyState": {
            "text": "I point left to corner.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at Psycho.",
          "wordCount": 4,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I look at Psycho."
          },
          "jazzyState": {
            "text": "I look at Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Please.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "Please.",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Please",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Please-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Please"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Please-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Please"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "Please"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u0027\u0027Please.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Please.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Please.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Please.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 6,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho lays Richard and Betty in corner.",
      "wordCount": 7,
      "order": 43,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho lays Richard and Betty in corner.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho lays Richard and Betty in corner.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lays",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lays-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lays-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lays-2, Richard-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lays-2, Betty-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lays-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lays"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Richard-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Richard-3, Betty-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(Richard-3, corner-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-7, in-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "corner"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "lays"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "corner."
                ]
              }
            },
            "sentence": "Psycho lays Richard and Betty in corner."
          },
          "jazzyState": {
            "text": "Psycho lays Richard and Betty in corner.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The three unconscious Secret Sentry heads turn to follow. One says with mouth moving and a deep voice, ,,Welcome to Secret Sentry Building. How may I help you?\u0027\u0027",
      "wordCount": 28,
      "order": 44,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "The three unconscious Secret Sentry heads turn to follow.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The three unconscious Secret Sentry heads turn to follow.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "JJ",
                "text": "unconscious",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "heads",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "turn",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "follow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, turn-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(heads-6, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(heads-6, three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(heads-6, unconscious-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "unconscious",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unconscious"
                },
                "gov": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(heads-6, Secret-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(heads-6, Sentry-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(turn-7, heads-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "head",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "heads"
                },
                "gov": {
                  "index": "7",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(turn-7, follow-9)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "9",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "follow"
                },
                "gov": {
                  "index": "7",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(turn-7, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(follow-9, to-8)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "follow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNP": "Sentry"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CD": "three"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_4_node": {
                  "NNS": "heads"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node": {
                  "VB": "follow"
                },
                "s_node_0_node_2_node_1_node": {
                  "NNP": "Secret"
                },
                "s_node_0_node_2_node_0_node": {
                  "JJ": "unconscious"
                },
                "s_node_1_node_0_node": {
                  "VBP": "turn"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "follow."
                ]
              }
            },
            "sentence": "The three unconscious Secret Sentry heads turn to follow."
          },
          "jazzyState": {
            "text": "The three unconscious Secret Sentry heads turn to follow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "One says with mouth moving and a deep voice, DIALOG_OBJECT_1",
          "wordCount": 9,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "One says with mouth moving and a deep voice, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "One",
                "net": "NUMBER"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mouth",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "moving",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "deep",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "voice",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, One-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(says-2, mouth-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(says-2, voice-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mouth-4, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(mouth-4, moving-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "moving"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(mouth-4, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(mouth-4, voice-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mouth"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(voice-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(voice-9, deep-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "deep",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "deep"
                },
                "gov": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(voice-9, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(voice-9, DIALOG_OBJECT_1-11)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "11",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "9",
                  "lemma": "voice",
                  "ner": "O",
                  "tag": "NN",
                  "word": "voice"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_2_node": {
                  "NN": "voice"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NN": "mouth"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_1_node": {
                  "JJ": "deep"
                },
                "s_node_1_node_1_node_1_node_2_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "One"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "VBG": "moving"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "One says with mouth moving and a deep voice, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "One says with mouth moving and a deep voice, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Welcome to Secret Sentry Building.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Welcome to Secret Sentry Building.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Welcome",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Welcome-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "welcome",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Welcome"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(Welcome-1, Building-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Building",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Building"
                },
                "gov": {
                  "index": "1",
                  "lemma": "welcome",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Welcome"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Welcome-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "welcome",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Welcome"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Building-5, to-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Building",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Building-5, Secret-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Building",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Building"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Building-5, Sentry-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Sentry",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Building",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NNP": "Building"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Welcome"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Building."
                ]
              }
            },
            "sentence": ",,Welcome to Secret Sentry Building."
          },
          "jazzyState": {
            "text": ",,Welcome to Secret Sentry Building.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Welcome to Secret Sentry Building.",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "How may I help you?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How may I help you?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "may",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "help",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, help-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(help-4, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(help-4, may-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "may",
                  "ner": "O",
                  "tag": "MD",
                  "word": "may"
                },
                "gov": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(help-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(help-4, you-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(help-4, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "help",
                  "ner": "O",
                  "tag": "VB",
                  "word": "help"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "help"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_2_node_1_node": {
                  "PRP": "you"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "I"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_node_0_node": {
                  "MD": "may"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "How may I help you?\u0027\u0027"
          },
          "jazzyState": {
            "text": "How may I help you?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "How may I help you?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I point to corner and Betty and Richard. \u003c|Good puppeteer.\u003e I step. ,,Did you learn from another puppet master?\u0027\u0027 I look out window wall.",
      "wordCount": 24,
      "order": 45,
      "sentenceCount": 5,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I point to corner and Betty and Richard.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I point to corner and Betty and Richard.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, point-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(point-2, corner-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(point-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(corner-4, to-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(corner-4, Betty-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(corner-4, Richard-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "VB",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-6, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-6, Richard-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "corner"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "point"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Richard."
                ]
              }
            },
            "sentence": "I point to corner and Betty and Richard."
          },
          "jazzyState": {
            "text": "I point to corner and Betty and Richard.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Good puppeteer.\u003e",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Good puppeteer.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Good",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puppeteer",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, puppeteer-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "puppeteer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppeteer"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(puppeteer-2, Good-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "good",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Good"
                },
                "gov": {
                  "index": "2",
                  "lemma": "puppeteer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppeteer"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(puppeteer-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "puppeteer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppeteer"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VB": "puppeteer"
                },
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "Good"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "puppeteer.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Good puppeteer.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Good puppeteer.\u003e",
            "misspelledWords": {
              "puppeteer": []
            }
          },
          "dialogState": {
            "sentence": "\u003c|Good puppeteer.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I step.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "step"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "step."
                ]
              }
            },
            "sentence": "I step."
          },
          "jazzyState": {
            "text": "I step.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Did you learn from another puppet master?\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 4,
          "tense": [
            "Past",
            "Present"
          ],
          "nlpState": {
            "sentence": "Did you learn from another puppet master?",
            "coreAnnotations": [
              {
                "pos": "VBD",
                "text": "Did",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "learn",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "another",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puppet",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "master",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Did-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "Did"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(Did-1, learn-3)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "Did"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Did-1, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "Did"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(learn-3, you-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(learn-3, master-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "master",
                  "ner": "O",
                  "tag": "NN",
                  "word": "master"
                },
                "gov": {
                  "index": "3",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(master-7, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "master",
                  "ner": "O",
                  "tag": "NN",
                  "word": "master"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(master-7, another-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "another",
                  "ner": "O",
                  "tag": "DT",
                  "word": "another"
                },
                "gov": {
                  "index": "7",
                  "lemma": "master",
                  "ner": "O",
                  "tag": "NN",
                  "word": "master"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(master-7, puppet-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "puppet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puppet"
                },
                "gov": {
                  "index": "7",
                  "lemma": "master",
                  "ner": "O",
                  "tag": "NN",
                  "word": "master"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "DT": "another"
                },
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node_2_node": {
                  "NN": "master"
                },
                "s_node_2_node_0_node": {
                  "VB": "learn"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NN": "puppet"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBD": "Did"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Did you learn from another puppet master?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Did you learn from another puppet master?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Did you learn from another puppet master?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look out window wall.",
          "wordCount": 5,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look out window wall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "out",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(look-2, out-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "out",
                  "ner": "O",
                  "tag": "RP",
                  "word": "out"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(look-2, wall-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-5, window-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "NN": "window"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "out"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "I look out window wall."
          },
          "jazzyState": {
            "text": "I look out window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three land on street.",
      "wordCount": 5,
      "order": 46,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three land on street.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three land on street.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "land",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Gee-1, land-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(land-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(land-3, street-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-5, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "land"
                },
                "s_node_0_node_2_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "Forty-three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Gee Forty-three land on street."
          },
          "jazzyState": {
            "text": "Gee Forty-three land on street.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,I learn with questions.\u0027\u0027 Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard.",
      "wordCount": 18,
      "order": 47,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,I learn with questions.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I learn with questions.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "learn",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "questions",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, learn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(learn-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(learn-2, questions-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "4",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                },
                "gov": {
                  "index": "2",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(learn-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "learn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "learn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(questions-4, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "4",
                  "lemma": "question",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "questions"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "questions"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "learn"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "questions.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I learn with questions.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I learn with questions.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I learn with questions.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard.",
          "wordCount": 14,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "guide",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "unconscious",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "far",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "near",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "LOCATION"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, guide-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "guide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "guide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(guide-4, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "guide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "guide"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(guide-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "guide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "guide"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(guide-4, Sentry-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "4",
                  "lemma": "guide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "guide"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(guide-4, corner-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "4",
                  "lemma": "guide",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "guide"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-7, unconscious-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "unconscious",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "unconscious"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-7, Secret-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-11, to-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(corner-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(corner-11, far-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "far",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "far"
                },
                "gov": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:near(corner-11, Betty-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:near"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:near(corner-11, Richard-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:near"
                },
                "dep": {
                  "index": "15",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "11",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Betty-13, near-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "near",
                  "ner": "O",
                  "tag": "IN",
                  "word": "near"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-13, and-14)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "14",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-13, Richard-15)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "15",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Betty",
                  "ner": "LOCATION",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "JJ": "far"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBD": "unconscious"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "NN": "corner"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_0_node_2_node": {
                  "NN": "guide"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "near"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Richard."
                ]
              }
            },
            "sentence": "Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limbs guide unconscious Secret Sentry to the far corner near Betty and Richard.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": [],
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Gee Forty-three landing.\u0027\u0027 I stand.",
      "wordCount": 5,
      "order": 48,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Gee Forty-three landing.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Gee Forty-three landing.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "landing",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, landing-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(landing-3, Gee-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "3",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(landing-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(landing-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "landing"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "Forty-three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "landing.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Gee Forty-three landing.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Gee Forty-three landing.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Gee Forty-three landing.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look at podiums before tunnel. \u003c|Into building.\u003e",
      "wordCount": 8,
      "order": 49,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look at podiums before tunnel.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at podiums before tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, podiums-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "4",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(look-2, tunnel-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(podiums-4, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "4",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-6, before-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I look at podiums before tunnel."
          },
          "jazzyState": {
            "text": "I look at podiums before tunnel.",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Into building.\u003e",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Into building.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Into",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, building-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(building-2, Into-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Into",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Into"
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(building-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "building"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "Into"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "building.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Into building.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Into building.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Into building.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Sweat drips.",
      "wordCount": 2,
      "order": 50,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Sweat drips.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Sweat drips.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Sweat",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drips-2, Sweat-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sweat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "drips"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Sweat"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "drips."
                ]
              }
            },
            "sentence": "Sweat drips."
          },
          "jazzyState": {
            "text": "Sweat drips.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I point to three podiums. \u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027 I think, \u003c|Congov, too.\u003e",
      "wordCount": 27,
      "order": 51,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I point to three podiums.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I point to three podiums.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, point-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(point-2, podiums-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(point-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(podiums-5, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(podiums-5, three-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "point"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "CD": "three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "podiums."
                ]
              }
            },
            "sentence": "I point to three podiums."
          },
          "jazzyState": {
            "text": "I point to three podiums.",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027",
          "wordCount": 18,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "please",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "move",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "armor",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "an",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "angle",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(Psycho-1, congov-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "18",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, please-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(Psycho-1, Betty-22)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "22",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ?-23)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "23",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(please-3, podiums-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(please-3, angle-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "9",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(please-3, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(please-3, floor-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "12",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(please-3, wall-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "14",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "3",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(podiums-6, move-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "NN",
                  "word": "move"
                },
                "gov": {
                  "index": "6",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(podiums-6, armor-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "armor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "armor"
                },
                "gov": {
                  "index": "6",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(angle-9, at-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "9",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(angle-9, an-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "an"
                },
                "gov": {
                  "index": "9",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-12, from-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-14, to-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "14",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-18, over-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "18",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(congov-18, the-17)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "17",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "18",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(congov-18, and-19)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "19",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "18",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(congov-18, Betty-22)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "22",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "18",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Betty-22, Richard-20)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "20",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "22",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Betty-22, ,-21)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "21",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "22",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "NN": "armor"
                },
                "s_node_3_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_0_node": {
                  "IN": "at"
                },
                "s_node_2_node_0_node": {
                  "VB": "please"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NNP": "congov"
                },
                "s_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_0_node_1_node": {
                  "NN": "angle"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_5_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_1_node_3_node": {
                  "NNP": "Richard"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_0_node_0_node": {
                  "DT": "an"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VB": "move"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "VBZ": "Betty"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_2_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_2_node_1_node_0_node": {
                  "NN": "floor"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ],
              "armor": [
                "armer",
                "Armour"
              ],
              "Psycho": [
                "psyche"
              ],
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Psycho, please move armor podiums at an angle, from floor to wall, over the congov and Richard, Betty?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Congov, too.\u003e",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Congov, too.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Congov",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "too",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Congov-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Congov",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Congov"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Congov-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Congov",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Congov"
                }
              },
              {
                "reln": {
                  "string": "dep(Congov-1, too-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "too",
                  "ner": "O",
                  "tag": "RB",
                  "word": "too"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Congov",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Congov"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(too-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "too",
                  "ner": "O",
                  "tag": "RB",
                  "word": "too"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node": {
                  "RB": "too"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "RB": "Congov"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "too.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Congov, too.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Congov, too.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Congov, too.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three float to window wall.",
      "wordCount": 6,
      "order": 52,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three float to window wall.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Gee Forty-three float to window wall.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "float",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Forty-three-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Forty-three-2, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "string": "dep(Forty-three-2, float-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "NN",
                  "word": "float"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Forty-three-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(float-3, wall-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "3",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "NN",
                  "word": "float"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-6, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-6, window-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_0_node": {
                  "VBP": "float"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "window"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Gee Forty-three float to window wall."
          },
          "jazzyState": {
            "text": "Gee Forty-three float to window wall.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov.",
      "wordCount": 19,
      "order": 53,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov.",
          "wordCount": 19,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lifts",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "moves",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "armor",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "leans",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "armor",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "podiums",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "angle",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "against",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lifts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lifts-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lifts-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lifts-2, moves-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "moves"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lifts-2, .-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lifts-2, podiums-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lifts-2, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lifts-2, leans-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lifts-2, leans-8\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(moves-4, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "4",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "moves"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(podiums-6, armor-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "armor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "armor"
                },
                "gov": {
                  "index": "6",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leans-8, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(leans-8, leans-8\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(leans-8, podiums-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(leans-8, angle-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "12",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(leans-8, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:against(leans-8\u0027, wall-17)",
                  "name": "nmod_preposition",
                  "tag": "nmod:against"
                },
                "dep": {
                  "index": "17",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lean",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "leans"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(podiums-10, armor-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "armor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "armor"
                },
                "gov": {
                  "index": "10",
                  "lemma": "podium",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "podiums"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(angle-12, at-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "12",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(angle-12, floor-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "14",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "12",
                  "lemma": "angle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "angle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-14, on-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "14",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-17, against-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "against",
                  "ner": "O",
                  "tag": "IN",
                  "word": "against"
                },
                "gov": {
                  "index": "17",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(wall-17, congov-19)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "19",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "17",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-19, over-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "19",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_2_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node_0_node": {
                  "IN": "against"
                },
                "s_node_1_node_2_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_0_node_1_node_0_node": {
                  "NN": "angle"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_0_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_2_node_2_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_3_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_1_node_2_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "armor"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_3_node_0_node": {
                  "NN": "armor"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_node": {
                  "NN": "wall"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "lifts"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNS": "podiums"
                },
                "s_node_1_node_2_node_2_node_0_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "leans"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_2_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_2_node": {
                  "VBZ": "moves"
                },
                "s_node_1_node_2_node_2_node_0_node_0_node": {
                  "IN": "at"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_1_node_1_node": {
                  "NNP": "congov"
                },
                "s_node_1_node_2_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "congov."
                ]
              }
            },
            "sentence": "Psycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov."
          },
          "jazzyState": {
            "text": "Psycho lifts and moves armor podiums and leans armor podiums at angle on floor and against wall over congov.",
            "misspelledWords": {
              "podiums": [
                "bottoms"
              ],
              "armor": [
                "armer",
                "Armour"
              ],
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I feel and think, \u003c|Why Psycho move?\u003e \u0027\u0027What is the red button?\u0027\u0027 I say. I look at tunnel.",
      "wordCount": 18,
      "order": 54,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I feel and think, DIALOG_OBJECT_1",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "feel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, feel-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(feel-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(feel-2, think-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "2",
                  "lemma": "feel",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "feel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "think"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "feel"
                },
                "s_node_1_node_4_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I feel and think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I feel and think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Why Psycho move?\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why Psycho move?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "move",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, move-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "move"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(move-3, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "move"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(move-3, Psycho-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "move"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(move-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "move",
                  "ner": "O",
                  "tag": "VB",
                  "word": "move"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "VB": "move"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Why Psycho move?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Why Psycho move?\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Why Psycho move?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027What is the red button?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What is the red button?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, What-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(What-1, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(What-1, button-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(What-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-5, red-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "red"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027What is the red button?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027What is the red button?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027What is the red button?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I say.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, say-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "say"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "say."
                ]
              }
            },
            "sentence": "I say."
          },
          "jazzyState": {
            "text": "I say.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at tunnel.",
          "wordCount": 4,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, tunnel-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-4, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I look at tunnel."
          },
          "jazzyState": {
            "text": "I look at tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Dark tunnel is beyond Psycho.",
      "wordCount": 5,
      "order": 55,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Dark tunnel is beyond Psycho.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Dark tunnel is beyond Psycho.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Dark",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "beyond",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tunnel-2, Dark-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Dark"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Psycho-5, tunnel-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Psycho-5, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-5, beyond-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "beyond",
                  "ner": "O",
                  "tag": "IN",
                  "word": "beyond"
                },
                "gov": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "beyond"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Dark"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "Dark tunnel is beyond Psycho."
          },
          "jazzyState": {
            "text": "Dark tunnel is beyond Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,The red button is a trigger to lower a blast sheet to seal the tunnel. The blast shield seals in the cyanide, and it creates another wall. The blast shield must be closed to open the steel door to shaft,\u0027\u0027 says Psycho. \u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027",
      "wordCount": 69,
      "order": 56,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,The red button is a trigger to lower a blast sheet to seal the tunnel.",
          "wordCount": 15,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The red button is a trigger to lower a blast sheet to seal the tunnel.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trigger",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "lower",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sheet",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "seal",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, trigger-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-3, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trigger-6, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(trigger-6, button-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(trigger-6, is-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(trigger-6, a-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(trigger-6, lower-8)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lower"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trigger",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trigger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(lower-8, to-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lower"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lower-8, sheet-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lower"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(lower-8, seal-13)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "13",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "seal"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "VB",
                  "word": "lower"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sheet-11, a-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sheet-11, blast-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(seal-13, to-12)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "13",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "seal"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(seal-13, tunnel-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "13",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "VB",
                  "word": "seal"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-15, the-14)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "14",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_2_node": {
                  "NN": "sheet"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "blast"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "lower"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "trigger"
                },
                "s_node_0_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node_1_node_0_node": {
                  "VB": "seal"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": ",,The red button is a trigger to lower a blast sheet to seal the tunnel."
          },
          "jazzyState": {
            "text": ",,The red button is a trigger to lower a blast sheet to seal the tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The red button is a trigger to lower a blast sheet to seal the tunnel.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The blast shield seals in the cyanide, and it creates another wall.",
          "wordCount": 12,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The blast shield seals in the cyanide, and it creates another wall.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shield",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "seals",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cyanide",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "creates",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "another",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, creates-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(seals-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(seals-4, blast-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(seals-4, shield-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                },
                "gov": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(seals-4, cyanide-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                },
                "gov": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(seals-4, it-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "10",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cyanide-7, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cyanide-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cyanide-7, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(cyanide-7, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(cyanide-7, it-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(creates-11, seals-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "seal",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "seals"
                },
                "gov": {
                  "index": "11",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(creates-11, wall-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "11",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(creates-11, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "11",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "creates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-13, another-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "another",
                  "ner": "O",
                  "tag": "DT",
                  "word": "another"
                },
                "gov": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBZ": "creates"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_node_2_node": {
                  "NN": "shield"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_3_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_3_node_0_node": {
                  "PRP": "it"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "blast"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "DT": "another"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "NN": "cyanide"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "seals"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "The blast shield seals in the cyanide, and it creates another wall."
          },
          "jazzyState": {
            "text": "The blast shield seals in the cyanide, and it creates another wall.",
            "misspelledWords": {
              "cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The blast shield must be closed to open the steel door to shaft,\u0027\u0027",
          "wordCount": 13,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The blast shield must be closed to open the steel door to shaft,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shield",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "must",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "closed",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shaft",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, closed-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(shield-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-3, blast-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(closed-6, shield-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(closed-6, must-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "must",
                  "ner": "O",
                  "tag": "MD",
                  "word": "must"
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(closed-6, be-5)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(closed-6, open-8)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(closed-6, ,-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "closed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(open-8, to-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(open-8, door-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "8",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(open-8, shaft-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "13",
                  "lemma": "shaft",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shaft"
                },
                "gov": {
                  "index": "8",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-11, steel-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(shaft-13, to-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "13",
                  "lemma": "shaft",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shaft"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NN": "blast"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "open"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBN": "closed"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "shaft"
                },
                "s_node_0_node_2_node": {
                  "NN": "shield"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_0_node": {
                  "MD": "must"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "The blast shield must be closed to open the steel door to shaft,\u0027\u0027"
          },
          "jazzyState": {
            "text": "The blast shield must be closed to open the steel door to shaft,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "The blast shield must be closed to open the steel door to shaft,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027",
          "wordCount": 27,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "PastParticiple",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "programmed",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "cells",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "surrounding",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "use",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "energy",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "store",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pulse",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "once",
                "net": "DATE"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "sacrificed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, programmed-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(programmed-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(programmed-3, have-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(programmed-3, cells-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "cell",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cells"
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(programmed-3, surrounding-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "surround",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "surrounding"
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(programmed-3, .-28)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "28",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programmed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cells-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "cell",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cells"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(surrounding-6, push-17)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "17",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                },
                "gov": {
                  "index": "6",
                  "lemma": "surround",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "surrounding"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(surrounding-6, button-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "6",
                  "lemma": "surround",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "surrounding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(surrounding-6, use-11)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                },
                "gov": {
                  "index": "6",
                  "lemma": "surround",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "surrounding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-9, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-9, red-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "9",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(use-11, and-16)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "16",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(use-11, push-17)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "17",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                },
                "gov": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(use-11, to-10)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "10",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(use-11, store-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "store",
                  "ner": "O",
                  "tag": "NN",
                  "word": "store"
                },
                "gov": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(use-11, pulse-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pulse"
                },
                "gov": {
                  "index": "11",
                  "lemma": "use",
                  "ner": "O",
                  "tag": "VB",
                  "word": "use"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(store-13, energy-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "energy",
                  "ner": "O",
                  "tag": "NN",
                  "word": "energy"
                },
                "gov": {
                  "index": "13",
                  "lemma": "store",
                  "ner": "O",
                  "tag": "NN",
                  "word": "store"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(store-13, and-14)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "14",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "13",
                  "lemma": "store",
                  "ner": "O",
                  "tag": "NN",
                  "word": "store"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(store-13, pulse-15)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "15",
                  "lemma": "pulse",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pulse"
                },
                "gov": {
                  "index": "13",
                  "lemma": "store",
                  "ner": "O",
                  "tag": "NN",
                  "word": "store"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(push-17, button-20)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "20",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "17",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "string": "dep(push-17, sacrificed-27)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "27",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sacrificed"
                },
                "gov": {
                  "index": "17",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VB",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-20, the-18)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "18",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "20",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-20, red-19)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "19",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "20",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-25, my-22)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "22",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "25",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(body-25, Gee-23)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "23",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "25",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(body-25, Forty-three-24)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "24",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "25",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sacrificed-27, once-21)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "21",
                  "lemma": "once",
                  "ner": "DATE",
                  "tag": "RB",
                  "word": "once"
                },
                "gov": {
                  "index": "27",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sacrificed"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(sacrificed-27, body-25)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "25",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "27",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sacrificed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(sacrificed-27, is-26)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "26",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "27",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sacrificed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_3_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_node_0_node": {
                  "VB": "use"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_node_1_node_1_node": {
                  "NN": "store"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_0_node": {
                  "VB": "pulse"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "VBG": "surrounding"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "cells"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBP": "have"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "programmed"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_1_node_1_node": {
                  "VBN": "sacrificed"
                },
                "s_node_1_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_0_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_3_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_0_node": {
                  "IN": "once"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_3_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_2_node": {
                  "VB": "push"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_node_1_node_0_node": {
                  "NN": "energy"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_2_node_4_node_1_node_0_node_3_node": {
                  "NN": "body"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "sacrificed.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027I have programmed the cells surrounding the red button to use energy store and pulse and push the red button once my Gee Forty-three body is sacrificed.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look through dark tunnel. ,,Sacrifice?\u0027\u0027",
      "wordCount": 6,
      "order": 57,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look through dark tunnel.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look through dark tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dark",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(look-2, tunnel-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-5, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tunnel-5, dark-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dark"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "dark"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I look through dark tunnel."
          },
          "jazzyState": {
            "text": "I look through dark tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Sacrifice?\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Sacrifice?",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Sacrifice",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sacrifice-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Sacrifice"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sacrifice-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "sacrifice",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Sacrifice"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Sacrifice"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Sacrifice?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Sacrifice?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Sacrifice?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look at motionless Gee Forty-three.",
      "wordCount": 6,
      "order": 58,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look at motionless Gee Forty-three.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at motionless Gee Forty-three.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "motionless",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, Gee-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "5",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-5, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Gee-5, motionless-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "motionless",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "motionless"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-5, Forty-three-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "motionless"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Forty-three."
                ]
              }
            },
            "sentence": "I look at motionless Gee Forty-three."
          },
          "jazzyState": {
            "text": "I look at motionless Gee Forty-three.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,I will cover the tunnel entrance until my body is destroyed. After my body is destroyed my core will eject.\u0027\u0027",
      "wordCount": 22,
      "order": 59,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I will cover the tunnel entrance until my body is destroyed.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "I will cover the tunnel entrance until my body is destroyed.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "cover",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "entrance",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "until",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "destroyed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cover-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cover-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(cover-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(cover-3, entrance-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(cover-3, destroyed-11)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                },
                "gov": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-3, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VB",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(entrance-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(entrance-6, tunnel-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "6",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-9, my-8)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "8",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "9",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(destroyed-11, until-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "until",
                  "ner": "O",
                  "tag": "IN",
                  "word": "until"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(destroyed-11, body-9)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "9",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(destroyed-11, is-10)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "10",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "VBN": "destroyed"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "entrance"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "until"
                },
                "s_node_1_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "cover"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "destroyed."
                ]
              }
            },
            "sentence": ",,I will cover the tunnel entrance until my body is destroyed."
          },
          "jazzyState": {
            "text": ",,I will cover the tunnel entrance until my body is destroyed.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I will cover the tunnel entrance until my body is destroyed.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "After my body is destroyed my core will eject.\u0027\u0027",
          "wordCount": 9,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PastParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "After my body is destroyed my core will eject.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "After",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "destroyed",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "eject",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, eject-9)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "9",
                  "lemma": "eject",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eject"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-3, my-2)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "2",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(destroyed-5, After-1)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "1",
                  "lemma": "after",
                  "ner": "O",
                  "tag": "IN",
                  "word": "After"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(destroyed-5, body-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(destroyed-5, is-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(destroyed-5, core-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-7, my-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "csubj(eject-9, destroyed-5)",
                  "name": "clausal subject",
                  "tag": "csubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                },
                "gov": {
                  "index": "9",
                  "lemma": "eject",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eject"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(eject-9, will-8)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "8",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "9",
                  "lemma": "eject",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eject"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eject-9, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "9",
                  "lemma": "eject",
                  "ner": "O",
                  "tag": "VB",
                  "word": "eject"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "VB": "eject"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "VBN": "destroyed"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_0_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_0_node_0_node": {
                  "IN": "After"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "eject.\u0027\u0027"
                ]
              }
            },
            "sentence": "After my body is destroyed my core will eject.\u0027\u0027"
          },
          "jazzyState": {
            "text": "After my body is destroyed my core will eject.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "After my body is destroyed my core will eject.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,I don\u0027t remember discussing your core.\u0027\u0027 I wipe sweat from forehead with forearm.",
      "wordCount": 13,
      "order": 60,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I don\u0027t remember discussing your core.\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I don\u0027t remember discussing your core.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "remember",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "discussing",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, remember-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(remember-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(remember-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(remember-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(remember-4, discussing-5)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "discuss",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "discussing"
                },
                "gov": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(remember-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "remember",
                  "ner": "O",
                  "tag": "VB",
                  "word": "remember"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(discussing-5, core-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "5",
                  "lemma": "discuss",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "discussing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-7, your-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "remember"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "VBG": "discussing"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "PRP$": "your"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "core.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I don\u0027t remember discussing your core.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I don\u0027t remember discussing your core.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I don\u0027t remember discussing your core.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I wipe sweat from forehead with forearm.",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I wipe sweat from forehead with forearm.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wipe",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sweat",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "forearm",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipe-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipe-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wipe-2, sweat-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sweat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(wipe-2, forehead-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "5",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipe-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forehead-5, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(forehead-5, forearm-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "forearm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forearm"
                },
                "gov": {
                  "index": "5",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forearm-7, with-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "forearm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forearm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "sweat"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "forehead"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "forearm"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "wipe"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forearm."
                ]
              }
            },
            "sentence": "I wipe sweat from forehead with forearm."
          },
          "jazzyState": {
            "text": "I wipe sweat from forehead with forearm.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027",
      "wordCount": 12,
      "order": 61,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A synthetic diamond core contains memory and mind of Psycho.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "synthetic",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "diamond",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "contains",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "memory",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, contains-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "contain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "contains"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(core-4, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "4",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(core-4, synthetic-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "synthetic",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "synthetic"
                },
                "gov": {
                  "index": "4",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(core-4, diamond-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "diamond",
                  "ner": "O",
                  "tag": "NN",
                  "word": "diamond"
                },
                "gov": {
                  "index": "4",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(contains-5, core-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "5",
                  "lemma": "contain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "contains"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(contains-5, memory-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "memory",
                  "ner": "O",
                  "tag": "NN",
                  "word": "memory"
                },
                "gov": {
                  "index": "5",
                  "lemma": "contain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "contains"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(contains-5, mind-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "contain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "contains"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(contains-5, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "contain",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "contains"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(memory-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "memory",
                  "ner": "O",
                  "tag": "NN",
                  "word": "memory"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(memory-6, mind-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "mind",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "6",
                  "lemma": "memory",
                  "ner": "O",
                  "tag": "NN",
                  "word": "memory"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(memory-6, Psycho-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "memory",
                  "ner": "O",
                  "tag": "NN",
                  "word": "memory"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-10, of-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "10",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "core"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "synthetic"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NN": "mind"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NN": "memory"
                },
                "s_node_0_node_2_node": {
                  "NN": "diamond"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "contains"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Psycho.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,A synthetic diamond core contains memory and mind of Psycho.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|A core.\u003e ,,How long will.\u0027\u0027 I look at the bodies in corner. \u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027",
      "wordCount": 24,
      "order": 62,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|A core.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A core.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(core-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "core"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "A"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "core.\u003e"
                ]
              }
            },
            "sentence": "\u003c|A core.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|A core.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|A core.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How long will.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "How long will.",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, will-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(long-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "RB",
                  "word": "long"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(will-3, long-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "RB",
                  "word": "long"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(will-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "MD": "will"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "RB": "long"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "will.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,How long will.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How long will.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,How long will.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at the bodies in corner.",
          "wordCount": 7,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at the bodies in corner.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "bodies",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "corner",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, bodies-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bodies"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodies-5, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bodies"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodies-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bodies"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(bodies-5, corner-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                },
                "gov": {
                  "index": "5",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "bodies"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(corner-7, in-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "corner",
                  "ner": "O",
                  "tag": "NN",
                  "word": "corner"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNS": "bodies"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "corner"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "corner."
                ]
              }
            },
            "sentence": "I look at the bodies in corner."
          },
          "jazzyState": {
            "text": "I look at the bodies in corner.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027",
          "wordCount": 12,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "How long will you and this, this portal hold the Gee Forty-three?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "this",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "this",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "portal",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "hold",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, will-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(will-3, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(will-3, long-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "RB",
                  "word": "long"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(will-3, you-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(will-3, this-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(will-3, ?-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(you-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(you-4, this-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(you-4, hold-10)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "10",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                },
                "gov": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(hold-10, this-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "this",
                  "ner": "O",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "10",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hold-10, portal-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "portal",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "portal"
                },
                "gov": {
                  "index": "10",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              },
              {
                "reln": {
                  "string": "dep(hold-10, Gee-12)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "12",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "10",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "NN",
                  "word": "hold"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-12, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-12, Forty-three-13)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "12",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "hold"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node": {
                  "NN": "portal"
                },
                "s_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "JJ": "long"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_0_node": {
                  "DT": "this"
                },
                "s_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "DT": "this"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027How long will you and this, this portal hold the Gee Forty-three?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027",
      "wordCount": 15,
      "order": 63,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The security sheet will be destroyed by Gee Forty-three before three minutes cycle.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "security",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "sheet",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "destroyed",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "minutes",
                "net": "DURATION"
              },
              {
                "pos": "NN",
                "text": "cycle",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, destroyed-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sheet-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sheet-3, security-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "security",
                  "ner": "O",
                  "tag": "NN",
                  "word": "security"
                },
                "gov": {
                  "index": "3",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(destroyed-6, sheet-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "sheet",
                  "ner": "O",
                  "tag": "NN",
                  "word": "sheet"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(destroyed-6, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(destroyed-6, be-5)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:agent(destroyed-6, Gee-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:agent"
                },
                "dep": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(destroyed-6, cycle-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "13",
                  "lemma": "cycle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cycle"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(destroyed-6, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-8, by-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-8, Forty-three-9)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cycle-13, before-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "13",
                  "lemma": "cycle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cycle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(cycle-13, three-11)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "three",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "13",
                  "lemma": "cycle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cycle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cycle-13, minutes-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                },
                "gov": {
                  "index": "13",
                  "lemma": "cycle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cycle"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "CD": "three"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "security"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBN": "destroyed"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node": {
                  "NNS": "minutes"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_0_node_2_node": {
                  "NN": "sheet"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node": {
                  "NN": "cycle"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "cycle.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,The security sheet will be destroyed by Gee Forty-three before three minutes cycle.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stop by Psycho.",
      "wordCount": 4,
      "order": 64,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stop by Psycho.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stop by Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stop-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stop-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(stop-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, by-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stop"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I stop by Psycho."
          },
          "jazzyState": {
            "text": "I stop by Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Limbs cover red button.",
      "wordCount": 4,
      "order": 65,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Limbs cover red button.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Limbs cover red button.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "cover",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cover-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cover-2, Limbs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(cover-2, button-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-4, red-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "4",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "button"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_node_0_node": {
                  "VBP": "cover"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "Limbs cover red button."
          },
          "jazzyState": {
            "text": "Limbs cover red button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The tunnel is circular.",
      "wordCount": 4,
      "order": 66,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The tunnel is circular.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The tunnel is circular.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "circular",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, circular-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "circular",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "circular"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(circular-4, tunnel-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "circular",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "circular"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(circular-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "circular",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "circular"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(circular-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "circular",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "circular"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "circular"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "circular."
                ]
              }
            },
            "sentence": "The tunnel is circular."
          },
          "jazzyState": {
            "text": "The tunnel is circular.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand. I look down tunnel. ,,Cyanide.\u0027\u0027",
      "wordCount": 7,
      "order": 67,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I stand.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "stand"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "stand."
                ]
              }
            },
            "sentence": "I stand."
          },
          "jazzyState": {
            "text": "I stand.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look down tunnel.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look down tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "down",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(look-2, down-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "down",
                  "ner": "O",
                  "tag": "RP",
                  "word": "down"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(look-2, tunnel-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "down"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I look down tunnel."
          },
          "jazzyState": {
            "text": "I look down tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Cyanide.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Cyanide.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Cyanide",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Cyanide-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Cyanide-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Cyanide"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Cyanide.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Cyanide.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Cyanide.\u0027\u0027",
            "misspelledWords": {
              "Cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Cyanide.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Tunnel is dark.",
      "wordCount": 3,
      "order": 68,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Tunnel is dark.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Tunnel is dark.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "dark",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dark-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dark"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dark-3, Tunnel-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Tunnel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dark"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dark-3, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dark"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dark-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "dark",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "dark"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "JJ": "dark"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "dark."
                ]
              }
            },
            "sentence": "Tunnel is dark."
          },
          "jazzyState": {
            "text": "Tunnel is dark.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,Yes.\u0027\u0027",
      "wordCount": 3,
      "order": 69,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Yes.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Yes.",
            "coreAnnotations": [
              {
                "pos": "UH",
                "text": "Yes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Yes-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Yes-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "yes",
                  "ner": "O",
                  "tag": "UH",
                  "word": "Yes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "UH": "Yes"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Yes.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Yes.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Yes.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Yes.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I turn and point. ,,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027",
      "wordCount": 16,
      "order": 70,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I turn and point.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I turn and point.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "turn",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, turn-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(turn-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(turn-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(turn-2, point-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "2",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(turn-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBP": "point"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "turn"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "point."
                ]
              }
            },
            "sentence": "I turn and point."
          },
          "jazzyState": {
            "text": "I turn and point.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027",
          "wordCount": 12,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How long will the window wall prevent the Gee Forty-three from entering?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "prevent",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "entering",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, prevent-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(long-2, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "2",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "RB",
                  "word": "long"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-6, window-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "string": "dep(prevent-7, long-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "RB",
                  "word": "long"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(prevent-7, will-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(prevent-7, wall-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(prevent-7, Gee-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(prevent-7, entering-12)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "12",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "entering"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(prevent-7, ?-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-9, Forty-three-10)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "9",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(entering-12, from-11)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "11",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "12",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "entering"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "prevent"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADJP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "JJ": "long"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "wall"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "VBG": "entering"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node": {
                  "WRB": "How"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,How long will the window wall prevent the Gee Forty-three from entering?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "White light shines through window.",
      "wordCount": 5,
      "order": 71,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "White light shines through window.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "White light shines through window.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "White",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shines",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, White-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(White-1, shines-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                },
                "gov": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(White-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shines-3, light-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(shines-3, window-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shines"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(window-5, through-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "light"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shines"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "White"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "window."
                ]
              }
            },
            "sentence": "White light shines through window."
          },
          "jazzyState": {
            "text": "White light shines through window.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,The window wall minimum destruction time is one minute. Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027 says Psycho.",
      "wordCount": 28,
      "order": 72,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,The window wall minimum destruction time is one minute.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The window wall minimum destruction time is one minute.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "minimum",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "destruction",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "DURATION"
              },
              {
                "pos": "NN",
                "text": "minute",
                "net": "DURATION"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, minute-9)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(destruction-5, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(destruction-5, window-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(destruction-5, wall-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(destruction-5, minimum-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "minimum",
                  "ner": "O",
                  "tag": "NN",
                  "word": "minimum"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(minute-9, destruction-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                },
                "gov": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:tmod(minute-9, time-6)",
                  "name": "temporal modifier",
                  "tag": "nmod:tmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(minute-9, is-7)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "7",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(minute-9, one-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "one",
                  "ner": "DURATION",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(minute-9, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "9",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NN",
                  "word": "minute"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "CD": "one"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node": {
                  "NN": "destruction"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_0_node_1_node": {
                  "NN": "window"
                },
                "s_node_1_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_1_node_2_node": {
                  "NN": "time"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "minute"
                },
                "s_node_0_node_2_node": {
                  "NN": "wall"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "JJ": "minimum"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "minute."
                ]
              }
            },
            "sentence": ",,The window wall minimum destruction time is one minute."
          },
          "jazzyState": {
            "text": ",,The window wall minimum destruction time is one minute.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The window wall minimum destruction time is one minute.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027",
          "wordCount": 17,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Twenty",
                "net": "NUMBER"
              },
              {
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "more",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "force",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "destroy",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "minimum",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "destruction",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "time",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, have-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VB",
                  "word": "have"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Twenty-1, or-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "or",
                  "ner": "O",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "1",
                  "lemma": "twenty",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Twenty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:or(Twenty-1, Gee-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:or"
                },
                "dep": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "1",
                  "lemma": "twenty",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Twenty"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Gee-4, more-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "more"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-4, Forty-three-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-7, Twenty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "twenty",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Twenty"
                },
                "gov": {
                  "index": "7",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VB",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-7, Gee-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "7",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VB",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(have-7, will-6)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "6",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "7",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VB",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-7, force-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "force",
                  "ner": "O",
                  "tag": "NN",
                  "word": "force"
                },
                "gov": {
                  "index": "7",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VB",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(force-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "force",
                  "ner": "O",
                  "tag": "NN",
                  "word": "force"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(force-9, destroy-11)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                },
                "gov": {
                  "index": "9",
                  "lemma": "force",
                  "ner": "O",
                  "tag": "NN",
                  "word": "force"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(destroy-11, time-17)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "17",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(destroy-11, ,-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(destroy-11, to-10)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "10",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(destroy-11, wall-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "11",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-13, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(time-17, destruction-16)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "16",
                  "lemma": "destruction",
                  "ner": "O",
                  "tag": "NN",
                  "word": "destruction"
                },
                "gov": {
                  "index": "17",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(time-17, by-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "17",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(time-17, minimum-15)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "minimum",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "minimum"
                },
                "gov": {
                  "index": "17",
                  "lemma": "time",
                  "ner": "O",
                  "tag": "NN",
                  "word": "time"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "destroy"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_0_node": {
                  "IN": "by"
                },
                "s_node_0_node_0_node_2_node_1_node": {
                  "JJ": "Gee"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_0_node": {
                  "CD": "Twenty"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "force"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "have"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_0_node": {
                  "JJ": "minimum"
                },
                "s_node_0_node_0_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_2_node_0_node": {
                  "RBR": "more"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "UCP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NN": "Forty-three"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node": {
                  "NN": "destruction"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node_1_node": {
                  "CC": "or"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_2_node": {
                  "NN": "time"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027"
          },
          "jazzyState": {
            "text": "Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "Twenty or more Gee Forty-three will have the force to destroy the wall by minimum destruction time,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look down tunnel and say, ,,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027 I wipe forehead with handkerchief.",
      "wordCount": 21,
      "order": 73,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look down tunnel and say, DIALOG_OBJECT_1",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I look down tunnel and say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "down",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(look-2, down-3)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "3",
                  "lemma": "down",
                  "ner": "O",
                  "tag": "RP",
                  "word": "down"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(look-2, tunnel-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(look-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(look-2, say-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VB",
                  "word": "say"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(look-2, DIALOG_OBJECT_1-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-6, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "6",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VB",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_4_node": {
                  "VBZ": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "RP": "down"
                },
                "s_node_1_node_2_node": {
                  "VBP": "say"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_0_node_2_node": {
                  "NN": "tunnel"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node_2_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I look down tunnel and say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I look down tunnel and say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho, could you please get me the congov\u0027s emergency pack?",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "could",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "please",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "get",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "congov",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "emergency",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, get-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(please-5, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(please-5, could-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "could",
                  "ner": "O",
                  "tag": "MD",
                  "word": "could"
                },
                "gov": {
                  "index": "5",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(please-5, you-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "5",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(get-6, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "parataxis(get-6, please-5)",
                  "name": "parataxis",
                  "tag": "parataxis"
                },
                "dep": {
                  "index": "5",
                  "lemma": "please",
                  "ner": "O",
                  "tag": "VB",
                  "word": "please"
                },
                "gov": {
                  "index": "6",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(get-6, pack-12)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "12",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "6",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(get-6, ?-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "6",
                  "lemma": "get",
                  "ner": "O",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(congov-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(congov-9, \u0027s-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "9",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pack-12, me-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "12",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(pack-12, congov-9)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "9",
                  "lemma": "congov",
                  "ner": "O",
                  "tag": "NN",
                  "word": "congov"
                },
                "gov": {
                  "index": "12",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pack-12, emergency-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "emergency",
                  "ner": "O",
                  "tag": "NN",
                  "word": "emergency"
                },
                "gov": {
                  "index": "12",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_0_node_0_node": {
                  "VB": "get"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node": {
                  "PRP": "you"
                },
                "s_node_4_node_1_node_1_node_0_node_1_node": {
                  "NN": "congov"
                },
                "s_node_2_node": {
                  "MD": "could"
                },
                "s_node_4_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node_1_node_1_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_4_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_1_node_2_node": {
                  "NN": "pack"
                },
                "s_node_4_node_0_node": {
                  "VB": "please"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_4_node_1_node_0_node_1_node": {
                  "PRP": "me"
                },
                "s_node_4_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_4_node_1_node_1_node_1_node": {
                  "NN": "emergency"
                },
                "s_node_5_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "VBG": "Psycho"
                },
                "s_node_4_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "S"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ],
              "congov\u0027s": []
            }
          },
          "dialogState": {
            "sentence": ",,Psycho, could you please get me the congov\u0027s emergency pack?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I wipe forehead with handkerchief.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I wipe forehead with handkerchief.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wipe",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "handkerchief",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wipe-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wipe-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wipe-2, forehead-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forehead",
                  "ner": "O",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(wipe-2, handkerchief-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "handkerchief",
                  "ner": "O",
                  "tag": "NN",
                  "word": "handkerchief"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wipe-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wipe",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wipe"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(handkerchief-5, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "handkerchief",
                  "ner": "O",
                  "tag": "NN",
                  "word": "handkerchief"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "handkerchief"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "wipe"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "handkerchief."
                ]
              }
            },
            "sentence": "I wipe forehead with handkerchief."
          },
          "jazzyState": {
            "text": "I wipe forehead with handkerchief.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Tunnel is white panels with black borders.",
      "wordCount": 7,
      "order": 74,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Tunnel is white panels with black borders.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Tunnel is white panels with black borders.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "panels",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "black",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "borders",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, panels-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(panels-4, Tunnel-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Tunnel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(panels-4, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(panels-4, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(panels-4, borders-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "border",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "borders"
                },
                "gov": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(panels-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "panel",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "panels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(borders-7, with-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "border",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "borders"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(borders-7, black-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "black",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "black"
                },
                "gov": {
                  "index": "7",
                  "lemma": "border",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "borders"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "black"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "JJ": "white"
                },
                "s_node_0_node": {
                  "NN": "Tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "borders"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "panels"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "borders."
                ]
              }
            },
            "sentence": "Tunnel is white panels with black borders."
          },
          "jazzyState": {
            "text": "Tunnel is white panels with black borders.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho grabs the emergency pack from Secret Sentry. Psycho lifts the pack, and a limb swings and holds the pack afore me.",
      "wordCount": 22,
      "order": 75,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho grabs the emergency pack from Secret Sentry.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho grabs the emergency pack from Secret Sentry.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "grabs",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "emergency",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Secret",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Sentry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, grabs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grabs-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(grabs-2, pack-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(grabs-2, Sentry-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(grabs-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "grabs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pack-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pack-5, emergency-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "emergency",
                  "ner": "O",
                  "tag": "NN",
                  "word": "emergency"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Sentry-8, from-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Sentry-8, Secret-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "secret",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Secret"
                },
                "gov": {
                  "index": "8",
                  "lemma": "sentry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sentry"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "pack"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNP": "Secret"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "emergency"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NNP": "Sentry"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "grabs"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Sentry."
                ]
              }
            },
            "sentence": "Psycho grabs the emergency pack from Secret Sentry."
          },
          "jazzyState": {
            "text": "Psycho grabs the emergency pack from Secret Sentry.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho lifts the pack, and a limb swings and holds the pack afore me.",
          "wordCount": 14,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho lifts the pack, and a limb swings and holds the pack afore me.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "lifts",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "swings",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "holds",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "afore",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lifts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lifts-2, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lifts-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lifts-2, pack-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(lifts-2, swings-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "swing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swings"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lifts-2, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lifts-2, holds-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "lifts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pack-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pack-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pack-4, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pack-4, swings-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "swing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swings"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(swings-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "swing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swings"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(swings-9, limb-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "9",
                  "lemma": "swing",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "swings"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holds-11, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "11",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(holds-11, afore-14)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "14",
                  "lemma": "afore",
                  "ner": "O",
                  "tag": "VB",
                  "word": "afore"
                },
                "gov": {
                  "index": "11",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "holds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pack-13, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(afore-14, pack-13)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "14",
                  "lemma": "afore",
                  "ner": "O",
                  "tag": "VB",
                  "word": "afore"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(afore-14, me-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "14",
                  "lemma": "afore",
                  "ner": "O",
                  "tag": "VB",
                  "word": "afore"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_0_node": {
                  "VB": "afore"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NN": "pack"
                },
                "s_node_3_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBZ": "lifts"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBZ": "swings"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node": {
                  "VBZ": "holds"
                },
                "s_node_3_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "pack"
                },
                "s_node_3_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_node": {
                  "PRP": "me"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "me."
                ]
              }
            },
            "sentence": "Psycho lifts the pack, and a limb swings and holds the pack afore me."
          },
          "jazzyState": {
            "text": "Psycho lifts the pack, and a limb swings and holds the pack afore me.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Thanks.\u0027\u0027 I grab the pack. I open pack side pocket. \u003c|Contractor badge, pepper spray, panic emitter.\u003e I open pack side pocket. \u003c|Shock rod.\u003e I look through window wall.",
      "wordCount": 28,
      "order": 76,
      "sentenceCount": 7,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Thanks.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Thanks.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Thanks",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Thanks-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "thanks",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Thanks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Thanks-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "thanks",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Thanks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Thanks"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u0027\u0027Thanks.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027Thanks.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Thanks.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Thanks.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I grab the pack.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I grab the pack.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "grab",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, grab-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grab"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grab-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grab"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(grab-2, pack-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grab"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(grab-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "grab",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "grab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pack-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "pack"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "grab"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pack."
                ]
              }
            },
            "sentence": "I grab the pack."
          },
          "jazzyState": {
            "text": "I grab the pack.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I open pack side pocket.",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I open pack side pocket.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pocket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(open-2, pocket-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pocket-5, pack-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pocket-5, side-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "side"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "pocket"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "open"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "pack"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pocket."
                ]
              }
            },
            "sentence": "I open pack side pocket."
          },
          "jazzyState": {
            "text": "I open pack side pocket.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Contractor badge, pepper spray, panic emitter.\u003e",
          "wordCount": 6,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "Contractor badge, pepper spray, panic emitter.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Contractor",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "badge",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pepper",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "spray",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "panic",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "emitter",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, badge-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "badge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "badge"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(badge-2, Contractor-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "contractor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Contractor"
                },
                "gov": {
                  "index": "2",
                  "lemma": "badge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "badge"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(badge-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "badge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "badge"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(badge-2, spray-5)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "5",
                  "lemma": "spray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spray"
                },
                "gov": {
                  "index": "2",
                  "lemma": "badge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "badge"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(badge-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "badge",
                  "ner": "O",
                  "tag": "NN",
                  "word": "badge"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(spray-5, pepper-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pepper",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pepper"
                },
                "gov": {
                  "index": "5",
                  "lemma": "spray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spray"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spray-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "spray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spray"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(spray-5, emitter-8)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "8",
                  "lemma": "emitter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "emitter"
                },
                "gov": {
                  "index": "5",
                  "lemma": "spray",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spray"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(emitter-8, panic-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "panic",
                  "ner": "O",
                  "tag": "NN",
                  "word": "panic"
                },
                "gov": {
                  "index": "8",
                  "lemma": "emitter",
                  "ner": "O",
                  "tag": "NN",
                  "word": "emitter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "NN": "panic"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NN": "badge"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "spray"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_node": {
                  "NN": "emitter"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_0_node": {
                  "NN": "pepper"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Contractor"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "emitter.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Contractor badge, pepper spray, panic emitter.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Contractor badge, pepper spray, panic emitter.\u003e",
            "misspelledWords": {
              "emitter": [
                "emitted"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Contractor badge, pepper spray, panic emitter.\u003e",
            "originOfDialogFromOrderParagraph": 4,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I open pack side pocket.",
          "wordCount": 5,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I open pack side pocket.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "side",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pocket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(open-2, pocket-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pocket-5, pack-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(pocket-5, side-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NN",
                  "word": "side"
                },
                "gov": {
                  "index": "5",
                  "lemma": "pocket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pocket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "side"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "pocket"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "open"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "pack"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pocket."
                ]
              }
            },
            "sentence": "I open pack side pocket."
          },
          "jazzyState": {
            "text": "I open pack side pocket.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Shock rod.\u003e",
          "wordCount": 2,
          "orderParagraph": 6,
          "tense": [],
          "nlpState": {
            "sentence": "Shock rod.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Shock",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "rod",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Shock-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shock",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Shock"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Shock-1, rod-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rod",
                  "ner": "O",
                  "tag": "NN",
                  "word": "rod"
                },
                "gov": {
                  "index": "1",
                  "lemma": "shock",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Shock"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Shock-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "shock",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Shock"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "rod"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "Shock"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "rod.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Shock rod.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Shock rod.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Shock rod.\u003e",
            "originOfDialogFromOrderParagraph": 6,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I look through window wall.",
          "wordCount": 5,
          "orderParagraph": 7,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look through window wall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(look-2, wall-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-5, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-5, window-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "window"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "I look through window wall."
          },
          "jazzyState": {
            "text": "I look through window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Two Gee Forty-three land before window wall.",
      "wordCount": 7,
      "order": 77,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Two Gee Forty-three land before window wall.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Two Gee Forty-three land before window wall.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "land",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-2, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, land-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(land-4, Forty-three-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(land-4, wall-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-7, before-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-7, window-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "land"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "window"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Two Gee Forty-three land before window wall."
          },
          "jazzyState": {
            "text": "Two Gee Forty-three land before window wall.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look in pack. \u003c|Sex cap, bottle of water. No gas mask.\u003e \u0027\u0027So what about your core? Why not.\u0027\u0027 I fasten pack. I look at Psycho. \u0027\u0027Why not walk in with your body?\u0027\u0027",
      "wordCount": 33,
      "order": 78,
      "sentenceCount": 8,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look in pack.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look in pack.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(look-2, pack-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(pack-4, in-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "pack"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pack."
                ]
              }
            },
            "sentence": "I look in pack."
          },
          "jazzyState": {
            "text": "I look in pack.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Sex cap, bottle of water.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Sex cap, bottle of water.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Sex",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cap",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bottle",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "water",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cap-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cap"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cap-2, Sex-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sex",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sex"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cap-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "cap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cap"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(cap-2, bottle-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cap-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "cap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cap"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(bottle-4, water-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bottle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bottle"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(water-6, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "water",
                  "ner": "O",
                  "tag": "NN",
                  "word": "water"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "water"
                },
                "s_node_2_node_0_node": {
                  "NN": "bottle"
                },
                "s_node_0_node_1_node": {
                  "NN": "cap"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NN": "Sex"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "water."
                ]
              }
            },
            "sentence": "\u003c|Sex cap, bottle of water."
          },
          "jazzyState": {
            "text": "\u003c|Sex cap, bottle of water.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Sex cap, bottle of water.",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "No gas mask.\u003e",
          "wordCount": 3,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "No gas mask.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "gas",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "mask",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, gas-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gas"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(gas-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gas"
                }
              },
              {
                "reln": {
                  "string": "dep(gas-2, mask-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "mask",
                  "ner": "O",
                  "tag": "NN",
                  "word": "mask"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gas"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(gas-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "gas"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "mask"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "gas"
                },
                "s_node_0_node_0_node": {
                  "DT": "No"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "mask.\u003e"
                ]
              }
            },
            "sentence": "No gas mask.\u003e"
          },
          "jazzyState": {
            "text": "No gas mask.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "No gas mask.\u003e",
            "dialogMark": [
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027So what about your core?",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [],
          "nlpState": {
            "sentence": "So what about your core?",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "So",
                "net": "O"
              },
              {
                "pos": "WP",
                "text": "what",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, So-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "so",
                  "ner": "O",
                  "tag": "RB",
                  "word": "So"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(So-1, what-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "1",
                  "lemma": "so",
                  "ner": "O",
                  "tag": "RB",
                  "word": "So"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(So-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "so",
                  "ner": "O",
                  "tag": "RB",
                  "word": "So"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(what-2, core-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "5",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "2",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "what"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-5, about-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "about",
                  "ner": "O",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "5",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-5, your-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "5",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node": {
                  "RB": "So"
                },
                "s_node_1_node_0_node": {
                  "WP": "what"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "about"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "your"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027So what about your core?"
          },
          "jazzyState": {
            "text": "\u0027\u0027So what about your core?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027So what about your core?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Why not.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 5,
          "tense": [],
          "nlpState": {
            "sentence": "Why not.",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, not-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(not-2, Why-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(not-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "RB": "not"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "not.\u0027\u0027"
                ]
              }
            },
            "sentence": "Why not.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Why not.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Why not.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I fasten pack.",
          "wordCount": 3,
          "orderParagraph": 6,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I fasten pack.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "fasten",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fasten-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fasten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fasten"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fasten-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fasten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fasten"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(fasten-2, pack-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fasten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fasten"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fasten-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fasten",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fasten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "pack"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "fasten"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pack."
                ]
              }
            },
            "sentence": "I fasten pack."
          },
          "jazzyState": {
            "text": "I fasten pack.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look at Psycho.",
          "wordCount": 4,
          "orderParagraph": 7,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at Psycho.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, Psycho-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-4, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "I look at Psycho."
          },
          "jazzyState": {
            "text": "I look at Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Why not walk in with your body?\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 8,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Why not walk in with your body?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "your",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(walk-3, Why-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(walk-3, not-2)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(walk-3, body-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-3, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-7, in-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(body-7, with-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-7, your-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "your"
                },
                "gov": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_2_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "RP": "in"
                },
                "s_node_2_node_0_node": {
                  "VB": "walk"
                },
                "s_node_2_node_2_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "RB": "not"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_2_node_2_node_1_node_0_node": {
                  "PRP$": "your"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Why not walk in with your body?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Why not walk in with your body?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Why not walk in with your body?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 8,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho stands on limbs before tunnel entrance. ,,The white door will stop Psycho\u0027s body,\u0027\u0027 says Psycho.",
      "wordCount": 16,
      "order": 79,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho stands on limbs before tunnel entrance.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho stands on limbs before tunnel entrance.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stands",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "entrance",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stands-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stands-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(stands-2, limbs-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stands-2, entrance-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "7",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stands-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(limbs-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(entrance-7, before-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "7",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(entrance-7, tunnel-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "7",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "entrance"
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "stands"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "entrance."
                ]
              }
            },
            "sentence": "Psycho stands on limbs before tunnel entrance."
          },
          "jazzyState": {
            "text": "Psycho stands on limbs before tunnel entrance.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The white door will stop Psycho\u0027s body,\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The white door will stop Psycho\u0027s body,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stop-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VB",
                  "word": "stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stop-5, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VB",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(stop-5, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VB",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(stop-5, body-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VB",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-5, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VB",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-6, \u0027s-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-8, Psycho-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "8",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "stop"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,The white door will stop Psycho\u0027s body,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The white door will stop Psycho\u0027s body,\u0027\u0027",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,The white door will stop Psycho\u0027s body,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I strap pack to back.",
      "wordCount": 5,
      "order": 80,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I strap pack to back.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "I strap pack to back.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "strap",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pack",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pack-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pack-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "string": "dep(pack-3, strap-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "strap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "strap"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "advcl",
                  "string": "advcl:to(pack-3, back-5)",
                  "name": "advcl_preposition",
                  "tag": "advcl:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pack-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pack",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pack"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(back-5, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "VB": "back"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "NN": "pack"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "strap"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "back."
                ]
              }
            },
            "sentence": "I strap pack to back."
          },
          "jazzyState": {
            "text": "I strap pack to back.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Sweat drips.",
      "wordCount": 2,
      "order": 81,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Sweat drips.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Sweat drips.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Sweat",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drips-2, Sweat-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sweat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "drips"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Sweat"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "drips."
                ]
              }
            },
            "sentence": "Sweat drips."
          },
          "jazzyState": {
            "text": "Sweat drips.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three land on street.",
      "wordCount": 5,
      "order": 82,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three land on street.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three land on street.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "land",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Gee-1, land-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-1, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(land-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(land-3, street-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "3",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NN",
                  "word": "land"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-5, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "land"
                },
                "s_node_0_node_2_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "Forty-three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Gee Forty-three land on street."
          },
          "jazzyState": {
            "text": "Gee Forty-three land on street.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Will they know about?\u003e",
      "wordCount": 4,
      "order": 83,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Will they know about?\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Will they know about?",
            "coreAnnotations": [
              {
                "pos": "MD",
                "text": "Will",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(know-3, Will-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "Will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-3, they-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(know-3, about-4)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "about",
                  "ner": "O",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-3, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node": {
                  "PRP": "they"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "RP": "about"
                },
                "s_node_2_node_0_node": {
                  "VB": "know"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "MD": "Will"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Will they know about?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Will they know about?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Will they know about?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s limbs slowly wave from core to tip.",
      "wordCount": 8,
      "order": 84,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s limbs slowly wave from core to tip.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limbs slowly wave from core to tip.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "slowly",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "wave",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tip",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wave-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wave-5, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(wave-5, slowly-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "slowly",
                  "ner": "O",
                  "tag": "RB",
                  "word": "slowly"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(wave-5, core-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(wave-5, tip-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "9",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wave-5, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "wave"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-7, from-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tip-9, to-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tip"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node": {
                  "VBD": "wave"
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node": {
                  "RB": "slowly"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_2_node_1_node": {
                  "NN": "tip"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tip."
                ]
              }
            },
            "sentence": "Psycho\u0027s limbs slowly wave from core to tip."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limbs slowly wave from core to tip.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Sweat drips.",
      "wordCount": 2,
      "order": 85,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Sweat drips.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Sweat drips.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Sweat",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "drips",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, drips-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(drips-2, Sweat-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sweat",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Sweat"
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(drips-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "drip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "drips"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "drips"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Sweat"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "drips."
                ]
              }
            },
            "sentence": "Sweat drips."
          },
          "jazzyState": {
            "text": "Sweat drips.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027",
      "wordCount": 13,
      "order": 86,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Will the Gee Forty-three know if one of them has killed my parents?",
            "coreAnnotations": [
              {
                "pos": "MD",
                "text": "Will",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VB",
                "text": "know",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "if",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "them",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "has",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "killed",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "parents",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Gee",
                  "ner": "MISC",
                  "tag": "NNP",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-3, Forty-three-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Gee",
                  "ner": "MISC",
                  "tag": "NNP",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(know-5, Will-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "Will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-5, Gee-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Gee",
                  "ner": "MISC",
                  "tag": "NNP",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(know-5, killed-11)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-5, ?-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VB",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(one-7, them-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "9",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "them"
                },
                "gov": {
                  "index": "7",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(them-9, of-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "9",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "them"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(killed-11, if-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "if",
                  "ner": "O",
                  "tag": "IN",
                  "word": "if"
                },
                "gov": {
                  "index": "11",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-11, one-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "11",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(killed-11, has-10)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "10",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                },
                "gov": {
                  "index": "11",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(killed-11, parents-13)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                },
                "gov": {
                  "index": "11",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(parents-13, my-12)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "12",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "13",
                  "lemma": "parent",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "parents"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VB": "know"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "if"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_2_node_1_node_1_node_0_node_0_node": {
                  "CD": "one"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node_1_node": {
                  "PRP": "them"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBZ": "has"
                },
                "s_node_1_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBN": "killed"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "parents"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "MD": "Will"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Will the Gee Forty-three know if one of them has killed my parents?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Psycho. Psycho stands before tunnel. \u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027",
      "wordCount": 17,
      "order": 87,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho stands before tunnel.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho stands before tunnel.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stands",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stands-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stands-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "psycho",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stands-2, tunnel-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stands-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-4, before-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "stands"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "Psycho stands before tunnel."
          },
          "jazzyState": {
            "text": "Psycho stands before tunnel.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The Gee Forty-three know only to kill you and me.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBP",
                "text": "know",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "only",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, Forty-three-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-4, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(know-4, only-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "only",
                  "ner": "O",
                  "tag": "RB",
                  "word": "only"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(know-4, kill-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-4, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(kill-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-7, you-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-7, me-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(you-8, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(you-8, me-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "8",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node": {
                  "PRP": "me"
                },
                "s_node_1_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "only"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "VB": "kill"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBP": "know"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "me.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027The Gee Forty-three know only to kill you and me.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I point to Gee Forty-three landing on street. ,,Ten.\u0027\u0027",
      "wordCount": 9,
      "order": 88,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I point to Gee Forty-three landing on street.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I point to Gee Forty-three landing on street.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "point",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "landing",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, point-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(point-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(point-2, Gee-4)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(point-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "point",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "point"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(Gee-4, to-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Gee-4, landing-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                },
                "gov": {
                  "index": "4",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(landing-6, Forty-three-5)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "6",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(landing-6, street-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "8",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "6",
                  "lemma": "landing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "landing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-8, on-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "8",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "Forty-three"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "point"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "landing"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "I point to Gee Forty-three landing on street."
          },
          "jazzyState": {
            "text": "I point to Gee Forty-three landing on street.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Ten.\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Ten.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Ten",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Ten-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Ten"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Ten-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Ten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "CD": "Ten"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,Ten.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Ten.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Ten.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Ten.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027",
      "wordCount": 16,
      "order": 89,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027",
          "wordCount": 14,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "The Government will complete the process to disconnect the tap before eleven minutes expire.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Government",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "complete",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "process",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "disconnect",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tap",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eleven",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "minutes",
                "net": "DURATION"
              },
              {
                "pos": "VBP",
                "text": "expire",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, complete-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "complete",
                  "ner": "O",
                  "tag": "VB",
                  "word": "complete"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Government-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Government",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Government"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(complete-4, Government-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Government",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Government"
                },
                "gov": {
                  "index": "4",
                  "lemma": "complete",
                  "ner": "O",
                  "tag": "VB",
                  "word": "complete"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(complete-4, will-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "4",
                  "lemma": "complete",
                  "ner": "O",
                  "tag": "VB",
                  "word": "complete"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(complete-4, process-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "process",
                  "ner": "O",
                  "tag": "NN",
                  "word": "process"
                },
                "gov": {
                  "index": "4",
                  "lemma": "complete",
                  "ner": "O",
                  "tag": "VB",
                  "word": "complete"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(complete-4, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "complete",
                  "ner": "O",
                  "tag": "VB",
                  "word": "complete"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(process-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "process",
                  "ner": "O",
                  "tag": "NN",
                  "word": "process"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(process-6, disconnect-8)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                },
                "gov": {
                  "index": "6",
                  "lemma": "process",
                  "ner": "O",
                  "tag": "NN",
                  "word": "process"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(disconnect-8, to-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(disconnect-8, tap-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                },
                "gov": {
                  "index": "8",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(disconnect-8, expire-14)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "14",
                  "lemma": "expire",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "expire"
                },
                "gov": {
                  "index": "8",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tap-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(minutes-13, eleven-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "eleven",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "eleven"
                },
                "gov": {
                  "index": "13",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(expire-14, before-11)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "11",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "14",
                  "lemma": "expire",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "expire"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(expire-14, minutes-13)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "13",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                },
                "gov": {
                  "index": "14",
                  "lemma": "expire",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "expire"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "disconnect"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_0_node_0_node": {
                  "NNS": "eleven"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "process"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "complete"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "tap"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_0_node_1_node": {
                  "NNS": "minutes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "Government"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_1_node": {
                  "VBP": "expire"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "expire.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The Government will complete the process to disconnect the tap before eleven minutes expire.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|What is timing of eleven minutes?\u003e I say, ,,Betty and Richard change the tap. How will they disconnect?\u0027\u0027",
      "wordCount": 18,
      "order": 90,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|What is timing of eleven minutes?\u003e",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What is timing of eleven minutes?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "timing",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eleven",
                "net": "DURATION"
              },
              {
                "pos": "NNS",
                "text": "minutes",
                "net": "DURATION"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, What-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(What-1, is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(What-1, timing-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "timing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "timing"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(What-1, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(timing-3, minutes-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                },
                "gov": {
                  "index": "3",
                  "lemma": "timing",
                  "ner": "O",
                  "tag": "NN",
                  "word": "timing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(minutes-6, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(minutes-6, eleven-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "eleven",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "eleven"
                },
                "gov": {
                  "index": "6",
                  "lemma": "minute",
                  "ner": "DURATION",
                  "tag": "NNS",
                  "word": "minutes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "eleven"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "timing"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "minutes"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|What is timing of eleven minutes?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|What is timing of eleven minutes?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|What is timing of eleven minutes?\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Betty and Richard change the tap.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Betty and Richard change the tap.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Betty",
                "net": "PERSON"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Richard",
                "net": "PERSON"
              },
              {
                "pos": "VBP",
                "text": "change",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tap",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, change-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "change",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "change"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Betty-1, and-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Betty-1, Richard-3)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(change-4, Betty-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Betty",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Betty"
                },
                "gov": {
                  "index": "4",
                  "lemma": "change",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "change"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(change-4, Richard-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Richard",
                  "ner": "PERSON",
                  "tag": "NNP",
                  "word": "Richard"
                },
                "gov": {
                  "index": "4",
                  "lemma": "change",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "change"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(change-4, tap-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                },
                "gov": {
                  "index": "4",
                  "lemma": "change",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "change"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(change-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "change",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "change"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tap-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tap"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Richard"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "change"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Betty"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tap."
                ]
              }
            },
            "sentence": ",,Betty and Richard change the tap."
          },
          "jazzyState": {
            "text": ",,Betty and Richard change the tap.",
            "misspelledWords": {
              "Betty": [
                "petty"
              ],
              "Richard": []
            }
          },
          "dialogState": {
            "sentence": ",,Betty and Richard change the tap.",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "How will they disconnect?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "How will they disconnect?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "How",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "disconnect",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, disconnect-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(disconnect-4, How-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "how",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "How"
                },
                "gov": {
                  "index": "4",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(disconnect-4, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "4",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(disconnect-4, they-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "4",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(disconnect-4, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "disconnect",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disconnect"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "disconnect"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "they"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "How"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "How will they disconnect?\u0027\u0027"
          },
          "jazzyState": {
            "text": "How will they disconnect?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "How will they disconnect?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,The tap will be destroyed,\u0027\u0027 says Psycho.",
      "wordCount": 7,
      "order": 91,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The tap will be destroyed,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The tap will be destroyed,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tap",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "destroyed",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, destroyed-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tap-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(destroyed-5, tap-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(destroyed-5, will-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(destroyed-5, be-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(destroyed-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBN": "destroyed"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NN": "tap"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,The tap will be destroyed,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The tap will be destroyed,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The tap will be destroyed,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Diesel engine bangs.",
      "wordCount": 3,
      "order": 92,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Diesel engine bangs.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Diesel engine bangs.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Diesel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "engine",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "bangs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, bangs-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "bangs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(engine-2, Diesel-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Diesel",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Diesel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(bangs-3, engine-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "engine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "engine"
                },
                "gov": {
                  "index": "3",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "bangs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(bangs-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "bangs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "bangs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "engine"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Diesel"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bangs."
                ]
              }
            },
            "sentence": "Diesel engine bangs."
          },
          "jazzyState": {
            "text": "Diesel engine bangs.",
            "misspelledWords": {
              "Diesel": [
                "dazzle"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A semi-truck pulls flat bed trailer and a tarp covered load. The load on trailer is taller than two building levels. The semi-truck rolls and stops behind the Gee Forty-three.",
      "wordCount": 30,
      "order": 93,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A semi-truck pulls flat bed trailer and a tarp covered load.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past"
          ],
          "nlpState": {
            "sentence": "A semi-truck pulls flat bed trailer and a tarp covered load.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "semi-truck",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "flat",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "bed",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trailer",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tarp",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "covered",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "load",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pulls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(semi-truck-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-3, semi-truck-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(pulls-3, covered-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "covered"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pulls-3, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(trailer-6, flat-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "flat",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flat"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(trailer-6, bed-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bed",
                  "ner": "O",
                  "tag": "NN",
                  "word": "bed"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(trailer-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(trailer-6, tarp-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "tarp",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tarp"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tarp-9, a-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "tarp",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tarp"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(covered-10, trailer-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(covered-10, tarp-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "tarp",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tarp"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "covered"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(covered-10, load-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "load",
                  "ner": "O",
                  "tag": "NN",
                  "word": "load"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "covered"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node": {
                  "VBN": "covered"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "semi-truck"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "NN": "trailer"
                },
                "s_node_1_node_1_node_2_node_3_node": {
                  "NN": "load"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "JJ": "flat"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "JJ": "tarp"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "bed"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "load."
                ]
              }
            },
            "sentence": "A semi-truck pulls flat bed trailer and a tarp covered load."
          },
          "jazzyState": {
            "text": "A semi-truck pulls flat bed trailer and a tarp covered load.",
            "misspelledWords": {
              "semi": [
                "seam",
                "seem",
                "swim"
              ],
              "tarp": [
                "trap",
                "tar",
                "tap",
                "harp",
                "warp",
                "tart",
                "tars"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The load on trailer is taller than two building levels.",
          "wordCount": 10,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The load on trailer is taller than two building levels.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "load",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trailer",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "taller",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "than",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "levels",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, taller-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "taller",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "taller"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(load-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "load",
                  "ner": "O",
                  "tag": "NN",
                  "word": "load"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(load-2, trailer-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                },
                "gov": {
                  "index": "2",
                  "lemma": "load",
                  "ner": "O",
                  "tag": "NN",
                  "word": "load"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(trailer-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(taller-6, load-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "load",
                  "ner": "O",
                  "tag": "NN",
                  "word": "load"
                },
                "gov": {
                  "index": "6",
                  "lemma": "taller",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "taller"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(taller-6, is-5)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "6",
                  "lemma": "taller",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "taller"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(taller-6, levels-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "10",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                },
                "gov": {
                  "index": "6",
                  "lemma": "taller",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "taller"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(taller-6, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "taller",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "taller"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(levels-10, than-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "than",
                  "ner": "O",
                  "tag": "IN",
                  "word": "than"
                },
                "gov": {
                  "index": "10",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(levels-10, two-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "10",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(levels-10, building-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "10",
                  "lemma": "level",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "levels"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "CD": "two"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NN": "load"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "than"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "trailer"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNS": "levels"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJR": "taller"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "levels."
                ]
              }
            },
            "sentence": "The load on trailer is taller than two building levels."
          },
          "jazzyState": {
            "text": "The load on trailer is taller than two building levels.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The semi-truck rolls and stops behind the Gee Forty-three.",
          "wordCount": 9,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The semi-truck rolls and stops behind the Gee Forty-three.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "semi-truck",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(rolls-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rolls-3, semi-truck-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                },
                "gov": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-5, rolls-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(stops-5, and-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(stops-5, Gee-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-5, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Gee-8, behind-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-8, Forty-three-9)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "8",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "IN": "behind"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "semi-truck"
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "stops"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "rolls"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Forty-three."
                ]
              }
            },
            "sentence": "The semi-truck rolls and stops behind the Gee Forty-three."
          },
          "jazzyState": {
            "text": "The semi-truck rolls and stops behind the Gee Forty-three.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ],
              "semi": [
                "seam",
                "seem",
                "swim"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stare through window. ,,What is?\u0027\u0027",
      "wordCount": 6,
      "order": 94,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I stare through window.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stare through window.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stare",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stare-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stare-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(stare-2, window-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "4",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stare-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stare",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stare"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(window-4, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "4",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stare"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "window."
                ]
              }
            },
            "sentence": "I stare through window."
          },
          "jazzyState": {
            "text": "I stare through window.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,What is?\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What is?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, What-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What is?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What is?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,What is?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three float to window.",
      "wordCount": 5,
      "order": 95,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three float to window.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Gee Forty-three float to window.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "float",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Forty-three-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Forty-three-2, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "string": "dep(Forty-three-2, float-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "NN",
                  "word": "float"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Forty-three-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(float-3, window-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "3",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "NN",
                  "word": "float"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(window-5, to-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_0_node": {
                  "VBP": "float"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "window."
                ]
              }
            },
            "sentence": "Gee Forty-three float to window."
          },
          "jazzyState": {
            "text": "Gee Forty-three float to window.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I say, \u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027",
      "wordCount": 10,
      "order": 96,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I say, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I say, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, say-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "say"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I say, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I say, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Are there traps and keys to prevent entry?",
            "coreAnnotations": [
              {
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "pos": "EX",
                "text": "there",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "traps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "keys",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "prevent",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "entry",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Are-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(Are-1, prevent-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Are-1, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(traps-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "trap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "traps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(traps-3, keys-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "key",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "keys"
                },
                "gov": {
                  "index": "3",
                  "lemma": "trap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "traps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(prevent-7, there-2)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "EX",
                  "word": "there"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "string": "dep(prevent-7, traps-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "trap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "traps"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "string": "dep(prevent-7, keys-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "key",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "keys"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(prevent-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(prevent-7, entry-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "entry",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entry"
                },
                "gov": {
                  "index": "7",
                  "lemma": "prevent",
                  "ner": "O",
                  "tag": "VB",
                  "word": "prevent"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "VBG": "keys"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_0_node": {
                  "VBG": "traps"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_node_1_node_1_node": {
                  "NN": "entry"
                },
                "s_node_1_node": {
                  "EX": "there"
                },
                "s_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node_1_node_0_node": {
                  "VB": "prevent"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Are"
                },
                "s_node_2_node_2_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Are there traps and keys to prevent entry?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Cyanide,\u0027\u0027 says Psycho.",
      "wordCount": 3,
      "order": 97,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Cyanide,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Cyanide,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Cyanide",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Cyanide-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Cyanide-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": ","
                },
                "s_node_0_node": {
                  "NNP": "Cyanide"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Cyanide,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Cyanide,\u0027\u0027",
            "misspelledWords": {
              "Cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Cyanide,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step to tunnel. \u003c|Primitive.\u003e ,,Can you disarm cyanide?\u0027\u0027",
      "wordCount": 9,
      "order": 98,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I step to tunnel.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step to tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(step-2, tunnel-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-4, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I step to tunnel."
          },
          "jazzyState": {
            "text": "I step to tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Primitive.\u003e",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Primitive.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Primitive",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Primitive-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "primitive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Primitive"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Primitive-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "primitive",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Primitive"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Primitive"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Primitive.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Primitive.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Primitive.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Primitive.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Can you disarm cyanide?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Can you disarm cyanide?",
            "coreAnnotations": [
              {
                "pos": "MD",
                "text": "Can",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "disarm",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cyanide",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, disarm-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disarm"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(disarm-3, Can-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "can",
                  "ner": "O",
                  "tag": "MD",
                  "word": "Can"
                },
                "gov": {
                  "index": "3",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disarm"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(disarm-3, you-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "3",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disarm"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(disarm-3, cyanide-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                },
                "gov": {
                  "index": "3",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disarm"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(disarm-3, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "disarm",
                  "ner": "O",
                  "tag": "VB",
                  "word": "disarm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "NN": "cyanide"
                },
                "s_node_2_node_0_node": {
                  "VB": "disarm"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "MD": "Can"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Can you disarm cyanide?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Can you disarm cyanide?\u0027\u0027",
            "misspelledWords": {
              "cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Can you disarm cyanide?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Psycho.",
      "wordCount": 3,
      "order": 99,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Tunnel section illuminates, \u003c|Around me,\u003e soft white light.",
      "wordCount": 8,
      "order": 100,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Tunnel section illuminates, DIALOG_OBJECT_1, soft white light.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Tunnel section illuminates, DIALOG_OBJECT_1, soft white light.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Tunnel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "soft",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(section-2, Tunnel-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-3, section-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "string": "dep(illuminates-3, light-9)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "9",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-3, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(light-9, DIALOG_OBJECT_1-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "9",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(light-9, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-9, soft-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "soft",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "soft"
                },
                "gov": {
                  "index": "9",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-9, white-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "9",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "JJ": "soft"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "section"
                },
                "s_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_2_node": {
                  "NN": "light"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRN"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_2_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "illuminates"
                },
                "s_node_1_node_1_node_0_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_node": {
                  "NN": "Tunnel"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "Tunnel section illuminates, DIALOG_OBJECT_1, soft white light."
          },
          "jazzyState": {
            "text": "Tunnel section illuminates, DIALOG_OBJECT_1, soft white light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Around me,\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Around me,",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Around",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, me-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(me-2, Around-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Around"
                },
                "gov": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(me-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node": {
                  "PRP": "me"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Around"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Around me,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Around me,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Around me,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The tunnel illuminates. The tunnel is sectioned cylinders.",
      "wordCount": 8,
      "order": 101,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The tunnel illuminates.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The tunnel illuminates.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-3, tunnel-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "illuminates"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminates."
                ]
              }
            },
            "sentence": "The tunnel illuminates."
          },
          "jazzyState": {
            "text": "The tunnel illuminates.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The tunnel is sectioned cylinders.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The tunnel is sectioned cylinders.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "sectioned",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "cylinders",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sectioned-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sectioned"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(sectioned-4, tunnel-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sectioned"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(sectioned-4, is-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sectioned"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sectioned-4, cylinders-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cylinders"
                },
                "gov": {
                  "index": "4",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sectioned"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sectioned-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sectioned"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "cylinders"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "sectioned"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cylinders."
                ]
              }
            },
            "sentence": "The tunnel is sectioned cylinders."
          },
          "jazzyState": {
            "text": "The tunnel is sectioned cylinders.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,What if they need to destroy the building?\u0027\u0027",
      "wordCount": 8,
      "order": 102,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,What if they need to destroy the building?\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "What if they need to destroy the building?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "if",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "need",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "destroy",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, need-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(need-4, What-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(need-4, if-2)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "2",
                  "lemma": "if",
                  "ner": "O",
                  "tag": "IN",
                  "word": "if"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(need-4, they-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(need-4, destroy-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(need-4, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "need",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "need"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(destroy-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(destroy-6, building-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "6",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "destroy"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "VBP": "need"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node": {
                  "WDT": "What"
                },
                "s_node_1_node_0_node": {
                  "IN": "if"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "they"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What if they need to destroy the building?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What if they need to destroy the building?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,What if they need to destroy the building?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,Gee Forty-three are now programed to kill only you and me.\u0027\u0027",
      "wordCount": 13,
      "order": 103,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Gee Forty-three are now programed to kill only you and me.\u0027\u0027",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PastParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three are now programed to kill only you and me.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "now",
                "net": "DATE"
              },
              {
                "pos": "VBN",
                "text": "programed",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "kill",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "only",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, programed-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(programed-5, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(programed-5, Forty-three-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(programed-5, are-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(programed-5, now-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "now",
                  "ner": "DATE",
                  "tag": "RB",
                  "word": "now"
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(programed-5, kill-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(programed-5, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "programe",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "programed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(kill-7, to-6)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(kill-7, only-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "only",
                  "ner": "O",
                  "tag": "RB",
                  "word": "only"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-7, you-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(kill-7, me-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "7",
                  "lemma": "kill",
                  "ner": "O",
                  "tag": "VB",
                  "word": "kill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(you-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(you-9, me-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "9",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBN": "programed"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "now"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_0_node": {
                  "PRP": "you"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "RB": "only"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VB": "kill"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_2_node": {
                  "PRP": "me"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "me.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,Gee Forty-three are now programed to kill only you and me.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Gee Forty-three are now programed to kill only you and me.\u0027\u0027",
            "misspelledWords": {
              "programed": [
                "programmed"
              ],
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,Gee Forty-three are now programed to kill only you and me.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|There are always traps.\u003e I step on the second cylinder.",
      "wordCount": 10,
      "order": 104,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|There are always traps.\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "There are always traps.",
            "coreAnnotations": [
              {
                "pos": "EX",
                "text": "There",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "always",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "traps",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, are-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(are-2, There-1)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "1",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "EX",
                  "word": "There"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(are-2, always-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "always",
                  "ner": "O",
                  "tag": "RB",
                  "word": "always"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(are-2, traps-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "trap",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "traps"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(are-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NNS": "traps"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "always"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "EX": "There"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "traps.\u003e"
                ]
              }
            },
            "sentence": "\u003c|There are always traps.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|There are always traps.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|There are always traps.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I step on the second cylinder.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step on the second cylinder.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "second",
                "net": "ORDINAL"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(step-2, cylinder-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "6",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cylinder-6, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cylinder-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(cylinder-6, second-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "second",
                  "ner": "ORDINAL",
                  "tag": "JJ",
                  "word": "second"
                },
                "gov": {
                  "index": "6",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "cylinder"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "second"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cylinder."
                ]
              }
            },
            "sentence": "I step on the second cylinder."
          },
          "jazzyState": {
            "text": "I step on the second cylinder.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "White light illuminates.",
      "wordCount": 3,
      "order": 105,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "White light illuminates.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "White light illuminates.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "White",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(White-1, light-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-3, White-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "White",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "White"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "illuminates"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "light"
                },
                "s_node_0_node_0_node": {
                  "NNP": "White"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminates."
                ]
              }
            },
            "sentence": "White light illuminates."
          },
          "jazzyState": {
            "text": "White light illuminates.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Cyanide.\u003e I think, \u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e I step on cylinder three. I look behind. \u003c|What is?\u003e I look through window wall.",
      "wordCount": 30,
      "order": 106,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Cyanide.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Cyanide.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Cyanide",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Cyanide-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Cyanide-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Cyanide",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Cyanide"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Cyanide"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Cyanide.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Cyanide.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Cyanide.\u003e",
            "misspelledWords": {
              "Cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Cyanide.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I think, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I think, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, I-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(I-1, think-2)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(I-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(I-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBG": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "think"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I think, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "I think, DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e",
          "wordCount": 12,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "One",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "four",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "five",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "six",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "seven",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "eight",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "nine",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eleven",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "fourteen",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, One-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, two-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, three-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, four-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "four",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "four"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, five-9)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "9",
                  "lemma": "five",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "five"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, six-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "six",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "six"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, seven-13)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "13",
                  "lemma": "seven",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "seven"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, eight-15)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "15",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "string": "dep(One-1, nine-17)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "17",
                  "lemma": "nine",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "nine"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, ,-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(One-1, ten-19)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "19",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(One-1, .-24)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "24",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "One"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ten-19, ,-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "19",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(ten-19, eleven-21)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "21",
                  "lemma": "eleven",
                  "ner": "NUMBER",
                  "tag": "NNS",
                  "word": "eleven"
                },
                "gov": {
                  "index": "19",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ten-19, ,-22)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "22",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "19",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(ten-19, fourteen-23)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "23",
                  "lemma": "fourteen",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "fourteen"
                },
                "gov": {
                  "index": "19",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_9_node": {
                  "COMMA": ","
                },
                "s_node_3_node": {
                  "COMMA": ","
                },
                "s_node_6_node": {
                  "CD": "four"
                },
                "s_node_13_node": {
                  "COMMA": ","
                },
                "s_node_18_leaf": {
                  "phrase": "NP"
                },
                "s_node_18_node_0_node": {
                  "CD": "ten"
                },
                "s_node_18_node_3_node": {
                  "COMMA": ","
                },
                "s_node_4_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_19_node": {
                  "PERIOD": "."
                },
                "s_node_11_node": {
                  "COMMA": ","
                },
                "s_node_16_node": {
                  "CD": "nine"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_17_node": {
                  "COMMA": ","
                },
                "s_node_10_node": {
                  "CD": "six"
                },
                "s_node_18_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_14_node": {
                  "CD": "eight"
                },
                "s_node_5_node": {
                  "COMMA": ","
                },
                "s_node_12_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_8_node": {
                  "CD": "five"
                },
                "s_node_18_node_4_node": {
                  "CD": "fourteen"
                },
                "s_node_6_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_15_node": {
                  "COMMA": ","
                },
                "s_node_16_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_18_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "CD": "two"
                },
                "s_node_7_node": {
                  "COMMA": ","
                },
                "s_node_10_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_18_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "CD": "three"
                },
                "s_node_14_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_8_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP-TMP"
                },
                "s_node_0_node": {
                  "CD": "One"
                },
                "s_node_18_node_2_node": {
                  "NNS": "eleven"
                },
                "s_node_12_node": {
                  "CD": "seven"
                },
                "s_node_18_node_4_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "fourteen.\u003e"
                ]
              }
            },
            "sentence": "\u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|One, two, three, four, five, six, seven, eight, nine, ten, eleven, fourteen.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I step on cylinder three.",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step on cylinder three.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(step-2, cylinder-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cylinder-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(cylinder-4, three-5)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CD": "three"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "cylinder"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "three."
                ]
              }
            },
            "sentence": "I step on cylinder three."
          },
          "jazzyState": {
            "text": "I step on cylinder three.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look behind.",
          "wordCount": 3,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look behind.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, behind-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "RB",
                  "word": "behind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "I look behind."
          },
          "jazzyState": {
            "text": "I look behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|What is?\u003e",
          "wordCount": 2,
          "orderParagraph": 5,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "What is?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, What-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|What is?\u003e"
          },
          "jazzyState": {
            "text": "\u003c|What is?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|What is?\u003e",
            "originOfDialogFromOrderParagraph": 5,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I look through window wall.",
          "wordCount": 5,
          "orderParagraph": 6,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look through window wall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(look-2, wall-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-5, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-5, window-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "window"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "I look through window wall."
          },
          "jazzyState": {
            "text": "I look through window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three rows spread their limbs and find position along the window wall.",
      "wordCount": 13,
      "order": 107,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three rows spread their limbs and find position along the window wall.",
          "wordCount": 13,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three rows spread their limbs and find position along the window wall.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "rows",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "spread",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "their",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "find",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "position",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "along",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spread-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(rows-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(spread-4, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spread-4, rows-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rows"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(spread-4, limbs-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(spread-4, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(spread-4, find-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spread-4, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-6, their-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "their"
                },
                "gov": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(find-8, rows-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rows"
                },
                "gov": {
                  "index": "8",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(find-8, position-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "position",
                  "ner": "O",
                  "tag": "NN",
                  "word": "position"
                },
                "gov": {
                  "index": "8",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:along(find-8, wall-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:along"
                },
                "dep": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "8",
                  "lemma": "find",
                  "ner": "O",
                  "tag": "VB",
                  "word": "find"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-13, along-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "along",
                  "ner": "O",
                  "tag": "IN",
                  "word": "along"
                },
                "gov": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-13, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-13, window-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "13",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_0_node_0_node": {
                  "JJ": "Forty-three"
                },
                "s_node_0_node_1_node_1_node_2_node_1_node": {
                  "NN": "position"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_0_node_0_node": {
                  "VB": "spread"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node_0_node": {
                  "IN": "along"
                },
                "s_node_0_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_2_node_0_node": {
                  "VB": "find"
                },
                "s_node_0_node_1_node_1_node_0_node_1_node_0_node": {
                  "PRP$": "their"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node_1_node_2_node": {
                  "NN": "wall"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_0_node_1_node": {
                  "NNS": "rows"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_0_node_1_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node_1_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Gee Forty-three rows spread their limbs and find position along the window wall."
          },
          "jazzyState": {
            "text": "Gee Forty-three rows spread their limbs and find position along the window wall.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Army Four Column marches on street. Army wear black silence suits. They carry barriers, caution fence and directional signs.",
      "wordCount": 19,
      "order": 108,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Army Four Column marches on street.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Army Four Column marches on street.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Army",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Four",
                "net": "NUMBER"
              },
              {
                "pos": "NNP",
                "text": "Column",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "marches",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Column-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Column",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Column"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Column-3, Army-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Army",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Army"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Column",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Column"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Column-3, Four-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Four",
                  "ner": "NUMBER",
                  "tag": "NNP",
                  "word": "Four"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Column",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Column"
                }
              },
              {
                "reln": {
                  "string": "dep(Column-3, marches-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "march",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "marches"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Column",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Column"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Column-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "Column",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Column"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(marches-4, street-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "6",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "4",
                  "lemma": "march",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "marches"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-6, on-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "6",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Column"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Four"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "NNS": "marches"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Army"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Army Four Column marches on street."
          },
          "jazzyState": {
            "text": "Army Four Column marches on street.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Army wear black silence suits.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Army wear black silence suits.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Army",
                "net": "ORGANIZATION"
              },
              {
                "pos": "VB",
                "text": "wear",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "black",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "silence",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "suits",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wear-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wear-2, Army-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Army",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Army"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wear-2, suits-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "suit",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "suits"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wear-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(suits-5, black-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "black",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "black"
                },
                "gov": {
                  "index": "5",
                  "lemma": "suit",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "suits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(suits-5, silence-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "silence",
                  "ner": "O",
                  "tag": "NN",
                  "word": "silence"
                },
                "gov": {
                  "index": "5",
                  "lemma": "suit",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "suits"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "silence"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNS": "suits"
                },
                "s_node_0_node": {
                  "NNP": "Army"
                },
                "s_node_1_node_0_node": {
                  "VBP": "wear"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "black"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "suits."
                ]
              }
            },
            "sentence": "Army wear black silence suits."
          },
          "jazzyState": {
            "text": "Army wear black silence suits.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They carry barriers, caution fence and directional signs.",
          "wordCount": 8,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They carry barriers, caution fence and directional signs.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "carry",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "barriers",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "caution",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "fence",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "directional",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "signs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, carry-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(carry-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(carry-2, barriers-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(carry-2, fence-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "fence",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fence"
                },
                "gov": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(carry-2, signs-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(carry-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "carry",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "carry"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(barriers-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(barriers-3, fence-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "fence",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fence"
                },
                "gov": {
                  "index": "3",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(barriers-3, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(barriers-3, signs-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(fence-6, caution-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "caution",
                  "ner": "O",
                  "tag": "NN",
                  "word": "caution"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fence",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fence"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(signs-9, directional-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "directional",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "directional"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_4_node_1_node": {
                  "NNS": "signs"
                },
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "NN": "caution"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "NN": "fence"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_4_node_0_node": {
                  "JJ": "directional"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "carry"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNS": "barriers"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "signs."
                ]
              }
            },
            "sentence": "They carry barriers, caution fence and directional signs."
          },
          "jazzyState": {
            "text": "They carry barriers, caution fence and directional signs.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look at the tunnel of light. ,,What will be?\u0027\u0027",
      "wordCount": 10,
      "order": 109,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look at the tunnel of light.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look at the tunnel of light.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(look-2, tunnel-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-5, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "ner": "O",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(tunnel-5, light-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-7, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "light"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "I look at the tunnel of light."
          },
          "jazzyState": {
            "text": "I look at the tunnel of light.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,What will be?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "What will be?",
            "coreAnnotations": [
              {
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, be-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(be-3, What-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(be-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(be-3, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node": {
                  "VB": "be"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WP": "What"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,What will be?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,What will be?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,What will be?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The tunnel sides are concave doors.",
      "wordCount": 6,
      "order": 110,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The tunnel sides are concave doors.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The tunnel sides are concave doors.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "sides",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "concave",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "doors",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, doors-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sides-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sides-3, tunnel-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sides"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(doors-6, sides-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "side",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sides"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(doors-6, are-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doors-6, concave-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "concave",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "concave"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(doors-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "doors"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNS": "sides"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "concave"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doors."
                ]
              }
            },
            "sentence": "The tunnel sides are concave doors."
          },
          "jazzyState": {
            "text": "The tunnel sides are concave doors.",
            "misspelledWords": {
              "concave": [
                "congov"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The Gee Forty-three will enter. They will tear down my wall body. The body will be destroyed. It will release my core. The red button will be pressed. The steel blast shield will slide open.\u0027\u0027",
      "wordCount": 37,
      "order": 111,
      "sentenceCount": 6,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The Gee Forty-three will enter.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The Gee Forty-three will enter.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "enter",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, enter-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, Forty-three-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(enter-5, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(enter-5, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(enter-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VB",
                  "word": "enter"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node": {
                  "VB": "enter"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "enter."
                ]
              }
            },
            "sentence": ",,The Gee Forty-three will enter."
          },
          "jazzyState": {
            "text": ",,The Gee Forty-three will enter.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": ",,The Gee Forty-three will enter.",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They will tear down my wall body.",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "They will tear down my wall body.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "tear",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "down",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, tear-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(tear-3, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(tear-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(tear-3, down-4)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "4",
                  "lemma": "down",
                  "ner": "O",
                  "tag": "RP",
                  "word": "down"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(tear-3, body-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(tear-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VB",
                  "word": "tear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-7, my-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(body-7, wall-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "7",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node": {
                  "NN": "body"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node_1_node_1_node": {
                  "RP": "down"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "tear"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "body."
                ]
              }
            },
            "sentence": "They will tear down my wall body."
          },
          "jazzyState": {
            "text": "They will tear down my wall body.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The body will be destroyed.",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The body will be destroyed.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "destroyed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, destroyed-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(body-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(destroyed-5, body-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(destroyed-5, will-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(destroyed-5, be-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(destroyed-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "destroyed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBN": "destroyed"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "destroyed."
                ]
              }
            },
            "sentence": "The body will be destroyed."
          },
          "jazzyState": {
            "text": "The body will be destroyed.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "It will release my core.",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "It will release my core.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "release",
                "net": "O"
              },
              {
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, release-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "release",
                  "ner": "O",
                  "tag": "VB",
                  "word": "release"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(release-3, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "3",
                  "lemma": "release",
                  "ner": "O",
                  "tag": "VB",
                  "word": "release"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(release-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "release",
                  "ner": "O",
                  "tag": "VB",
                  "word": "release"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(release-3, core-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "3",
                  "lemma": "release",
                  "ner": "O",
                  "tag": "VB",
                  "word": "release"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(release-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "release",
                  "ner": "O",
                  "tag": "VB",
                  "word": "release"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-5, my-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "my",
                  "ner": "O",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "5",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "release"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "core."
                ]
              }
            },
            "sentence": "It will release my core."
          },
          "jazzyState": {
            "text": "It will release my core.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The red button will be pressed.",
          "wordCount": 6,
          "orderParagraph": 5,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The red button will be pressed.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "be",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "pressed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pressed-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "pressed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-3, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(pressed-6, button-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "6",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "pressed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(pressed-6, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "6",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "pressed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(pressed-6, be-5)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VB",
                  "word": "be"
                },
                "gov": {
                  "index": "6",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "pressed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pressed-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "pressed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBN": "pressed"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "button"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "be"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pressed."
                ]
              }
            },
            "sentence": "The red button will be pressed."
          },
          "jazzyState": {
            "text": "The red button will be pressed.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The steel blast shield will slide open.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 6,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The steel blast shield will slide open.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shield",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "slide",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slide-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VB",
                  "word": "slide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(shield-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-4, steel-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-4, blast-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slide-6, shield-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VB",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(slide-6, will-5)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "5",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VB",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(slide-6, open-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VB",
                  "word": "slide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slide-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "VB",
                  "word": "slide"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "shield"
                },
                "s_node_0_node_2_node": {
                  "NN": "blast"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "slide"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "open.\u0027\u0027"
                ]
              }
            },
            "sentence": "The steel blast shield will slide open.\u0027\u0027"
          },
          "jazzyState": {
            "text": "The steel blast shield will slide open.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "The steel blast shield will slide open.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Then cyanide.\u003e I step forward. ,,And what will you do?\u0027\u0027",
      "wordCount": 10,
      "order": 112,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Then cyanide.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Then cyanide.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Then",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cyanide",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cyanide-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(cyanide-2, Then-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "then",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Then"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cyanide-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cyanide"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VB": "cyanide"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "RB": "Then"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "cyanide.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Then cyanide.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Then cyanide.\u003e",
            "misspelledWords": {
              "cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Then cyanide.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I step forward.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step forward.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(step-2, forward-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "forward"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forward."
                ]
              }
            },
            "sentence": "I step forward."
          },
          "jazzyState": {
            "text": "I step forward.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,And what will you do?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "And what will you do?",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "pos": "WP",
                "text": "what",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "do",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, do-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(do-5, And-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(do-5, what-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "what",
                  "ner": "O",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(do-5, will-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(do-5, you-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(do-5, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "VB",
                  "word": "do"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "WP": "what"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "PRP": "you"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_node": {
                  "MD": "will"
                },
                "s_node_2_leaf": {
                  "phrase": "SQ"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_2_node_2_node": {
                  "VB": "do"
                },
                "s_node_1_leaf": {
                  "phrase": "WHNP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,And what will you do?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,And what will you do?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,And what will you do?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027",
      "wordCount": 17,
      "order": 113,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027",
          "wordCount": 15,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I will direct the blast of core to roll and open the steel blast shield.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "direct",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "roll",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shield",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, direct-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(direct-3, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(direct-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(direct-3, will-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(direct-3, blast-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(direct-3, roll-9)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "9",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "VB",
                  "word": "roll"
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(direct-3, open-11)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "3",
                  "lemma": "direct",
                  "ner": "O",
                  "tag": "VB",
                  "word": "direct"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(blast-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(blast-5, core-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "5",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-7, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(roll-9, to-8)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "VB",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(roll-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "VB",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(roll-9, open-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "9",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "VB",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(roll-9, shield-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                },
                "gov": {
                  "index": "9",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "VB",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(shield-15, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-15, steel-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "15",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-15, blast-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blast"
                },
                "gov": {
                  "index": "15",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_3_node": {
                  "NN": "shield"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_2_node": {
                  "NN": "blast"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "direct"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_2_node_1_node_2_node": {
                  "VB": "open"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VB": "roll"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "blast"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "shield.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,I will direct the blast of core to roll and open the steel blast shield.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Cylinder section three dims and four illuminates.",
      "wordCount": 7,
      "order": 114,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Cylinder section three dims and four illuminates.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Cylinder section three dims and four illuminates.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Cylinder",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "dims",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "four",
                "net": "NUMBER"
              },
              {
                "pos": "VBZ",
                "text": "illuminates",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminates-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(dims-4, Cylinder-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Cylinder"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(dims-4, section-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(dims-4, three-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(dims-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(dims-4, four-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "four",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "four"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-7, dims-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dim",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "dims"
                },
                "gov": {
                  "index": "7",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminates-7, four-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "four",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "four"
                },
                "gov": {
                  "index": "7",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminates-7, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "illuminates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": "section"
                },
                "s_node_0_node_4_node": {
                  "CD": "four"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "VBZ": "illuminates"
                },
                "s_node_0_node_2_node_1_node": {
                  "NNS": "dims"
                },
                "s_node_0_node_2_node_0_node": {
                  "CD": "three"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Cylinder"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminates."
                ]
              }
            },
            "sentence": "Cylinder section three dims and four illuminates."
          },
          "jazzyState": {
            "text": "Cylinder section three dims and four illuminates.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step. Doors left and right shine. \u003c|Glowing doors.\u003e",
      "wordCount": 9,
      "order": 115,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I step.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "step"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "step."
                ]
              }
            },
            "sentence": "I step."
          },
          "jazzyState": {
            "text": "I step.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Doors left and right shine.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Doors left and right shine.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Doors",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "left",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "right",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shine",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, left-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "left"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(left-2, Doors-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Doors"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(left-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(left-2, shine-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shine"
                },
                "gov": {
                  "index": "2",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(left-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "leave",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "left"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(shine-5, right-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shine"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "right"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "VBP": "shine"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNS": "Doors"
                },
                "s_node_1_node_0_node": {
                  "RB": "left"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shine."
                ]
              }
            },
            "sentence": "Doors left and right shine."
          },
          "jazzyState": {
            "text": "Doors left and right shine.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Glowing doors.\u003e",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "Glowing doors.",
            "coreAnnotations": [
              {
                "pos": "JJ",
                "text": "Glowing",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "doors",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, doors-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doors-2, Glowing-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "glowing",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "Glowing"
                },
                "gov": {
                  "index": "2",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(doors-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "doors"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNS": "doors"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBG": "Glowing"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "doors.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Glowing doors.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Glowing doors.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Glowing doors.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look back.",
      "wordCount": 3,
      "order": 116,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look back.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look back.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, back-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "back"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "back."
                ]
              }
            },
            "sentence": "I look back."
          },
          "jazzyState": {
            "text": "I look back.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Army set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones. Army pull tarp from the long, loaded, flatbed trailer.",
      "wordCount": 27,
      "order": 117,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Army set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones.",
          "wordCount": 18,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Army set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Army",
                "net": "ORGANIZATION"
              },
              {
                "pos": "VBD",
                "text": "set",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cone",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "barriers",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "spread",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "yellow",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tape",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cone",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cone",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "mount",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "directional",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "signs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "cones",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, set-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(set-2, Army-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Army",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Army"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(set-2, .-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(set-2, barriers-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(set-2, tape-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "tape",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tape"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(set-2, cone-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "10",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cone"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(set-2, cone-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "12",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cone"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(set-2, and-13)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "13",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(set-2, mount-14)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "14",
                  "lemma": "mount",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mount"
                },
                "gov": {
                  "index": "2",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(barriers-4, cone-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cone"
                },
                "gov": {
                  "index": "4",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(barriers-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(barriers-4, tape-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "tape",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tape"
                },
                "gov": {
                  "index": "4",
                  "lemma": "barrier",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "barriers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(tape-8, spread-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spread",
                  "ner": "O",
                  "tag": "NN",
                  "word": "spread"
                },
                "gov": {
                  "index": "8",
                  "lemma": "tape",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tape"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(tape-8, yellow-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "yellow",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "yellow"
                },
                "gov": {
                  "index": "8",
                  "lemma": "tape",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tape"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cone-10, from-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cone"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cone-12, to-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cone"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(mount-14, signs-16)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                },
                "gov": {
                  "index": "14",
                  "lemma": "mount",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mount"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(mount-14, Army-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Army",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Army"
                },
                "gov": {
                  "index": "14",
                  "lemma": "mount",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mount"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(mount-14, cones-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "18",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cones"
                },
                "gov": {
                  "index": "14",
                  "lemma": "mount",
                  "ner": "O",
                  "tag": "VB",
                  "word": "mount"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(signs-16, directional-15)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "directional",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "directional"
                },
                "gov": {
                  "index": "16",
                  "lemma": "sign",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "signs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cones-18, upon-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "18",
                  "lemma": "cone",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "cones"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_4_node_2_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_node_4_node_1_node_0_node": {
                  "JJ": "directional"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "JJ": "yellow"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_4_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_4_node_1_node_1_node": {
                  "NNS": "signs"
                },
                "s_node_1_node_4_node_2_node_1_node": {
                  "NNS": "cones"
                },
                "s_node_1_node_2_node_3_node_1_node": {
                  "NN": "cone"
                },
                "s_node_1_node_2_node_2_node_1_node": {
                  "NN": "cone"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_0_node_0_node": {
                  "VB": "set"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "tape"
                },
                "s_node_1_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NNS": "barriers"
                },
                "s_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_0_node": {
                  "VB": "spread"
                },
                "s_node_1_node_4_node_0_node": {
                  "VB": "mount"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "NN": "cone"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "Army"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cones."
                ]
              }
            },
            "sentence": "Army set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones."
          },
          "jazzyState": {
            "text": "Army set cone barriers and spread yellow tape from cone to cone and mount directional signs upon cones.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Army pull tarp from the long, loaded, flatbed trailer.",
          "wordCount": 9,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Army pull tarp from the long, loaded, flatbed trailer.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Army",
                "net": "ORGANIZATION"
              },
              {
                "pos": "VB",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tarp",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "long",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "loaded",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "flatbed",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trailer",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-2, Army-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Army",
                  "ner": "ORGANIZATION",
                  "tag": "NNP",
                  "word": "Army"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-2, tarp-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tarp",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tarp"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(pull-2, trailer-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VB",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(trailer-11, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(trailer-11, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(trailer-11, long-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trailer-11, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(trailer-11, loaded-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "loaded",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loaded"
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trailer-11, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(trailer-11, flatbed-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "flatbed",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flatbed"
                },
                "gov": {
                  "index": "11",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_5_node": {
                  "JJ": "flatbed"
                },
                "s_node_1_node_1_node": {
                  "NN": "tarp"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_3_node": {
                  "JJ": "loaded"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_6_node": {
                  "NN": "trailer"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "JJ": "long"
                },
                "s_node_0_node": {
                  "NNP": "Army"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_1_node_2_node_1_node_4_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "trailer."
                ]
              }
            },
            "sentence": "Army pull tarp from the long, loaded, flatbed trailer."
          },
          "jazzyState": {
            "text": "Army pull tarp from the long, loaded, flatbed trailer.",
            "misspelledWords": {
              "flatbed": [],
              "tarp": [
                "trap",
                "tar",
                "tap",
                "harp",
                "warp",
                "tart",
                "tars"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A giant machine with long and wide legs and a huge drill lay on flatbed.",
      "wordCount": 15,
      "order": 118,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A giant machine with long and wide legs and a huge drill lay on flatbed.",
          "wordCount": 15,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "A giant machine with long and wide legs and a huge drill lay on flatbed.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "giant",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "machine",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "long",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "wide",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "legs",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "huge",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "drill",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "lay",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "flatbed",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lay-13)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "13",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lay"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(machine-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(machine-3, giant-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "giant",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "giant"
                },
                "gov": {
                  "index": "3",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(machine-3, legs-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(machine-3, drill-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "12",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                },
                "gov": {
                  "index": "3",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(long-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(long-5, wide-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                },
                "gov": {
                  "index": "5",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(legs-8, with-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(legs-8, long-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "long",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "long"
                },
                "gov": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(legs-8, wide-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                },
                "gov": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(legs-8, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(legs-8, drill-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                },
                "gov": {
                  "index": "8",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(drill-12, a-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "12",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(drill-12, huge-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "huge",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "huge"
                },
                "gov": {
                  "index": "12",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lay-13, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "13",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lay"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lay-13, machine-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "machine",
                  "ner": "O",
                  "tag": "NN",
                  "word": "machine"
                },
                "gov": {
                  "index": "13",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(lay-13, flatbed-15)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "15",
                  "lemma": "flatb",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "flatbed"
                },
                "gov": {
                  "index": "13",
                  "lemma": "lay",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "lay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(flatbed-15, on-14)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "14",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "15",
                  "lemma": "flatb",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "flatbed"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_2_node_1_node": {
                  "JJ": "huge"
                },
                "s_node_0_node_0_node_2_node": {
                  "NN": "machine"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_0_node_2_node": {
                  "JJ": "wide"
                },
                "s_node_0_node_1_node_1_node_2_node_2_node": {
                  "NN": "drill"
                },
                "s_node_0_node_1_node_1_node_0_node_3_node": {
                  "NNS": "legs"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_0_node": {
                  "VBD": "lay"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_0_node": {
                  "JJ": "long"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_2_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "giant"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "flatbed"
                },
                "s_node_0_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "flatbed."
                ]
              }
            },
            "sentence": "A giant machine with long and wide legs and a huge drill lay on flatbed."
          },
          "jazzyState": {
            "text": "A giant machine with long and wide legs and a huge drill lay on flatbed.",
            "misspelledWords": {
              "flatbed": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look forward and look through tunnel. \u003c|Fourteen cylinder section of the tunnel.\u003e",
      "wordCount": 13,
      "order": 119,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I look forward and look through tunnel.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "I look forward and look through tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "forward",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, forward-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forward",
                  "ner": "O",
                  "tag": "RB",
                  "word": "forward"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(look-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(look-2, look-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-5, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "5",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(look-5, tunnel-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "7",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "5",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-7, through-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "7",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBP": "look"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "RB": "forward"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I look forward and look through tunnel."
          },
          "jazzyState": {
            "text": "I look forward and look through tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Fourteen cylinder section of the tunnel.\u003e",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Fourteen cylinder section of the tunnel.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Fourteen",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "section",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, section-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(section-3, Fourteen-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "fourteen",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Fourteen"
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(section-3, cylinder-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(section-3, tunnel-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(section-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NN",
                  "word": "section"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-6, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "section"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "cylinder"
                },
                "s_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "CD": "Fourteen"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "tunnel.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Fourteen cylinder section of the tunnel.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Fourteen cylinder section of the tunnel.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Fourteen cylinder section of the tunnel.\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "BANG! shakes. \u003c|Like a semi-truck hit the building.\u003e",
      "wordCount": 8,
      "order": 120,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "BANG!",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "BANG!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "BANG",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, BANG-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BANG-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "BANG"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "BANG!"
          },
          "jazzyState": {
            "text": "BANG!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "shakes.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "shakes.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "shakes"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shakes."
                ]
              }
            },
            "sentence": "shakes."
          },
          "jazzyState": {
            "text": "shakes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "DIALOG_OBJECT_1",
          "wordCount": 0,
          "orderParagraph": 3,
          "tense": [],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DIALOG_OBJECT_1-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "0"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node": {
                  "NNP": "DIALOG_OBJECT_1"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Like a semi-truck hit the building.\u003e",
          "wordCount": 6,
          "orderParagraph": 3,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Like a semi-truck hit the building.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Like",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "semi-truck",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "hit",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hit-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(semi-truck-3, Like-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Like"
                },
                "gov": {
                  "index": "3",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(semi-truck-3, a-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "3",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:like(hit-4, semi-truck-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:like"
                },
                "dep": {
                  "index": "3",
                  "lemma": "semi-truck",
                  "ner": "O",
                  "tag": "NN",
                  "word": "semi-truck"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hit-4, building-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hit-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(building-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBD": "hit"
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "semi-truck"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NN": "building"
                },
                "s_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Like"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "building.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Like a semi-truck hit the building.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Like a semi-truck hit the building.\u003e",
            "misspelledWords": {
              "semi": [
                "seam",
                "seem",
                "swim"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Like a semi-truck hit the building.\u003e",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stop, look behind.",
      "wordCount": 4,
      "order": 121,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stop, look behind.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I stop, look behind.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stop",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stop-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stop-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "string": "dep(stop-2, look-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stop-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stop",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-4, behind-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "RB",
                  "word": "behind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "look"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "RP": "behind"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stop"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "I stop, look behind."
          },
          "jazzyState": {
            "text": "I stop, look behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A giant walking drill has one foot on street. Another foot is lifted from flatbed trailer and set to ground.",
      "wordCount": 20,
      "order": 122,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A giant walking drill has one foot on street.",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "PresentParticiple",
            "Present"
          ],
          "nlpState": {
            "sentence": "A giant walking drill has one foot on street.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "giant",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "walking",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "drill",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "has",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "foot",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, has-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(drill-4, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "4",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(drill-4, giant-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "giant",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "giant"
                },
                "gov": {
                  "index": "4",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(drill-4, walking-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "walking"
                },
                "gov": {
                  "index": "4",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(has-5, drill-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                },
                "gov": {
                  "index": "5",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(has-5, foot-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                },
                "gov": {
                  "index": "5",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(has-5, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(foot-7, one-6)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "one",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "7",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(foot-7, street-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "7",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-9, on-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "9",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NN": "drill"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "giant"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "CD": "one"
                },
                "s_node_0_node_2_node": {
                  "VBG": "walking"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "has"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "foot"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "A giant walking drill has one foot on street."
          },
          "jazzyState": {
            "text": "A giant walking drill has one foot on street.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Another foot is lifted from flatbed trailer and set to ground.",
          "wordCount": 11,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "PastParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Another foot is lifted from flatbed trailer and set to ground.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "Another",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "foot",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "lifted",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "flatbed",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "trailer",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "set",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lifted-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(foot-2, Another-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "another",
                  "ner": "O",
                  "tag": "DT",
                  "word": "Another"
                },
                "gov": {
                  "index": "2",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(lifted-4, foot-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(lifted-4, is-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(lifted-4, trailer-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lifted-4, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lifted-4, set-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "set"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lifted-4, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "lifted"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(trailer-7, from-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(trailer-7, flatbed-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "flatbed",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "flatbed"
                },
                "gov": {
                  "index": "7",
                  "lemma": "trailer",
                  "ner": "O",
                  "tag": "NN",
                  "word": "trailer"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(set-9, foot-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                },
                "gov": {
                  "index": "9",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(set-9, ground-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "11",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "9",
                  "lemma": "set",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "set"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-11, to-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "ground"
                },
                "s_node_1_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node": {
                  "NN": "trailer"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "foot"
                },
                "s_node_1_node_1_node_0_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "VBN": "lifted"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "VBN": "set"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_0_node": {
                  "JJ": "flatbed"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "Another"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ground."
                ]
              }
            },
            "sentence": "Another foot is lifted from flatbed trailer and set to ground."
          },
          "jazzyState": {
            "text": "Another foot is lifted from flatbed trailer and set to ground.",
            "misspelledWords": {
              "flatbed": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The BANG! vibrates floor.",
      "wordCount": 4,
      "order": 123,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The BANG!",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The BANG!",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "BANG",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, BANG-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(BANG-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BANG-2, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "BANG"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "The BANG!"
          },
          "jazzyState": {
            "text": "The BANG!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "vibrates floor.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "vibrates floor.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "vibrates",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, vibrates-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "vibrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "vibrates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(vibrates-1, floor-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "1",
                  "lemma": "vibrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "vibrates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(vibrates-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "vibrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "vibrates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "floor"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "JJ": "vibrates"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "floor."
                ]
              }
            },
            "sentence": "vibrates floor."
          },
          "jazzyState": {
            "text": "vibrates floor.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The huge six-joint legs, \u003c|Size of building beams,\u003e lift huge drill.",
      "wordCount": 11,
      "order": 124,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "The huge six-joint legs, DIALOG_OBJECT_1, lift huge drill.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The huge six-joint legs, DIALOG_OBJECT_1, lift huge drill.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "huge",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "six-joint",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "legs",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "lift",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "huge",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "drill",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, legs-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(legs-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(legs-4, huge-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "huge",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "huge"
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(legs-4, six-joint-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "six-joint",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "six-joint"
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(legs-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(legs-4, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(legs-4, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "leg",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "legs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DIALOG_OBJECT_1-6, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(DIALOG_OBJECT_1-6, drill-10)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "10",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(drill-10, lift-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lift",
                  "ner": "O",
                  "tag": "NN",
                  "word": "lift"
                },
                "gov": {
                  "index": "10",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(drill-10, huge-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "huge",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "huge"
                },
                "gov": {
                  "index": "10",
                  "lemma": "drill",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drill"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_2_node": {
                  "JJ": "six-joint"
                },
                "s_node_0_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_3_node": {
                  "NNS": "legs"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "huge"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "drill"
                },
                "s_node_0_node_2_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_0_node": {
                  "VBP": "lift"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "huge"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "drill."
                ]
              }
            },
            "sentence": "The huge six-joint legs, DIALOG_OBJECT_1, lift huge drill."
          },
          "jazzyState": {
            "text": "The huge six-joint legs, DIALOG_OBJECT_1, lift huge drill.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Size of building beams,\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Size of building beams,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Size",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "building",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "beams",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Size-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "size",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Size"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Size-1, beams-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "4",
                  "lemma": "beam",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "beams"
                },
                "gov": {
                  "index": "1",
                  "lemma": "size",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Size"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(beams-4, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "4",
                  "lemma": "beam",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "beams"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(beams-4, building-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "building",
                  "ner": "O",
                  "tag": "NN",
                  "word": "building"
                },
                "gov": {
                  "index": "4",
                  "lemma": "beam",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "beams"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(beams-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "beam",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "beams"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "beams"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "building"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NN": "Size"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Size of building beams,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Size of building beams,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Size of building beams,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,That\u0027s...big,\u0027\u0027 I say.",
      "wordCount": 3,
      "order": 125,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I say.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I say.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "say",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, say-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(say-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(say-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "say"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "say."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I say."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I say.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,That\u0027s...big,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "That\u0027s...big,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "That",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, That-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "that",
                  "ner": "O",
                  "tag": "DT",
                  "word": "That"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(That-1, \u0027s-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "that",
                  "ner": "O",
                  "tag": "DT",
                  "word": "That"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-2, ...-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "...",
                  "ner": "O",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "string": "dep(\u0027s-2, big-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(big-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "big",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "big"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "COLON": "..."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "JJ": "big"
                },
                "s_node_0_node_1_node": {
                  "NNS": "\u0027s"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "That"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  ",,That\u0027s...big,\u0027\u0027"
                ]
              }
            },
            "sentence": ",,That\u0027s...big,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,That\u0027s...big,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,That\u0027s...big,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Two more Gee Forty-three lower to street.",
      "wordCount": 7,
      "order": 126,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Two more Gee Forty-three lower to street.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Two more Gee Forty-three lower to street.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "pos": "JJR",
                "text": "more",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "JJR",
                "text": "lower",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "street",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-3, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Gee-3, more-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "more",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "more"
                },
                "gov": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-3, lower-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "lower"
                },
                "gov": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(lower-5, Forty-three-4)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "lower"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(lower-5, street-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lower",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "lower"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(street-7, to-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "street",
                  "ner": "O",
                  "tag": "NN",
                  "word": "street"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "RBR": "lower"
                },
                "s_node_0_node_1_node": {
                  "JJR": "more"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node": {
                  "JJ": "Forty-three"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "street"
                },
                "s_node_0_node_2_node": {
                  "NN": "Gee"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "street."
                ]
              }
            },
            "sentence": "Two more Gee Forty-three lower to street."
          },
          "jazzyState": {
            "text": "Two more Gee Forty-three lower to street.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho says, ,,The action is for show, noise and Plan B.\u0027\u0027",
      "wordCount": 11,
      "order": 127,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The action is for show, noise and Plan B.\u0027\u0027",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The action is for show, noise and Plan B.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "action",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "show",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "noise",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Plan",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "B.",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, show-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(action-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "action",
                  "ner": "O",
                  "tag": "NN",
                  "word": "action"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(show-5, action-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "action",
                  "ner": "O",
                  "tag": "NN",
                  "word": "action"
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(show-5, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(show-5, for-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(show-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(show-5, noise-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "noise",
                  "ner": "O",
                  "tag": "NN",
                  "word": "noise"
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(show-5, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(show-5, B.-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "B.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "B."
                },
                "gov": {
                  "index": "5",
                  "lemma": "show",
                  "ner": "O",
                  "tag": "NN",
                  "word": "show"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(B.-10, Plan-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Plan",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Plan"
                },
                "gov": {
                  "index": "10",
                  "lemma": "B.",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "B."
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "noise"
                },
                "s_node_0_node_1_node": {
                  "NN": "action"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node": {
                  "NNP": "B."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "show"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_node_0_node": {
                  "NNP": "Plan"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "B.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,The action is for show, noise and Plan B.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The action is for show, noise and Plan B.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The action is for show, noise and Plan B.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The Gee Forty-three hover by window wall.",
      "wordCount": 7,
      "order": 128,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The Gee Forty-three hover by window wall.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The Gee Forty-three hover by window wall.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBP",
                "text": "hover",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "by",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hover-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hover"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, Forty-three-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hover-4, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hover"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:by(hover-4, wall-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:by"
                },
                "dep": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hover-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "hover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "hover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-7, by-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "by",
                  "ner": "O",
                  "tag": "IN",
                  "word": "by"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-7, window-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "7",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_0_node": {
                  "VBP": "hover"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "by"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "window"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "The Gee Forty-three hover by window wall."
          },
          "jazzyState": {
            "text": "The Gee Forty-three hover by window wall.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,The government has a plan B?\u0027\u0027",
      "wordCount": 6,
      "order": 129,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,The government has a plan B?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The government has a plan B?",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "government",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "has",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "plan",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "B",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, has-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(government-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(has-3, government-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "government",
                  "ner": "O",
                  "tag": "NN",
                  "word": "government"
                },
                "gov": {
                  "index": "3",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(has-3, B-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "b",
                  "ner": "O",
                  "tag": "NN",
                  "word": "B"
                },
                "gov": {
                  "index": "3",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(has-3, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(B-6, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "6",
                  "lemma": "b",
                  "ner": "O",
                  "tag": "NN",
                  "word": "B"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(B-6, plan-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "plan",
                  "ner": "O",
                  "tag": "NN",
                  "word": "plan"
                },
                "gov": {
                  "index": "6",
                  "lemma": "b",
                  "ner": "O",
                  "tag": "NN",
                  "word": "B"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "plan"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node_1_node": {
                  "NN": "government"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "B"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "has"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,The government has a plan B?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,The government has a plan B?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The government has a plan B?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "BANG! is. Ground shakes.",
      "wordCount": 4,
      "order": 130,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "BANG!",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "BANG!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "BANG",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, BANG-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BANG-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "BANG"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "BANG!"
          },
          "jazzyState": {
            "text": "BANG!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "is.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "is.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "is"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "is."
          },
          "jazzyState": {
            "text": "is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Ground shakes.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Ground shakes.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Ground",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shakes-2, Ground-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Ground"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shakes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Ground"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shakes."
                ]
              }
            },
            "sentence": "Ground shakes."
          },
          "jazzyState": {
            "text": "Ground shakes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,Plan B is destroy the tap,\u0027\u0027 says Psycho.",
      "wordCount": 8,
      "order": 131,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Plan B is destroy the tap,\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Plan B is destroy the tap,",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Plan",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "B",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "destroy",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tap",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, destroy-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(B-2, Plan-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "plan",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Plan"
                },
                "gov": {
                  "index": "2",
                  "lemma": "b",
                  "ner": "O",
                  "tag": "NN",
                  "word": "B"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(destroy-4, B-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "b",
                  "ner": "O",
                  "tag": "NN",
                  "word": "B"
                },
                "gov": {
                  "index": "4",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(destroy-4, is-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(destroy-4, tap-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                },
                "gov": {
                  "index": "4",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(destroy-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "destroy",
                  "ner": "O",
                  "tag": "VB",
                  "word": "destroy"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tap-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "tap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tap"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node": {
                  "NNP": "B"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "tap"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "VB": "destroy"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Plan"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Plan B is destroy the tap,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Plan B is destroy the tap,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Plan B is destroy the tap,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I walk tunnel.",
      "wordCount": 3,
      "order": 132,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I walk tunnel.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I walk tunnel.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(walk-2, tunnel-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "walk"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "I walk tunnel."
          },
          "jazzyState": {
            "text": "I walk tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The cylinder sections illuminate.",
      "wordCount": 4,
      "order": 133,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The cylinder sections illuminate.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The cylinder sections illuminate.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "sections",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "illuminate",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminate-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "illuminate"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sections-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sections"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sections-3, cylinder-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sections"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(illuminate-4, sections-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "section",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sections"
                },
                "gov": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "illuminate"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminate-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "illuminate"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "illuminate"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNS": "sections"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "cylinder"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminate."
                ]
              }
            },
            "sentence": "The cylinder sections illuminate."
          },
          "jazzyState": {
            "text": "The cylinder sections illuminate.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three row floats above Gee Forty-three row. They cover window wall.",
      "wordCount": 12,
      "order": 134,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three row floats above Gee Forty-three row.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three row floats above Gee Forty-three row.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "row",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "floats",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "above",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "row",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, floats-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "floats"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(row-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(floats-4, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "floats"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(floats-4, row-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                },
                "gov": {
                  "index": "4",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "floats"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:above(floats-4, row-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:above"
                },
                "dep": {
                  "index": "8",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                },
                "gov": {
                  "index": "4",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "floats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(floats-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "float",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "floats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(row-8, above-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "above",
                  "ner": "O",
                  "tag": "IN",
                  "word": "above"
                },
                "gov": {
                  "index": "8",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(row-8, Gee-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Gee",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Gee"
                },
                "gov": {
                  "index": "8",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(row-8, Forty-three-7)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "8",
                  "lemma": "row",
                  "ner": "O",
                  "tag": "NN",
                  "word": "row"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "row"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_0_node_2_node": {
                  "NN": "row"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "Forty-three"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "floats"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "above"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Gee"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "row."
                ]
              }
            },
            "sentence": "Gee Forty-three row floats above Gee Forty-three row."
          },
          "jazzyState": {
            "text": "Gee Forty-three row floats above Gee Forty-three row.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They cover window wall.",
          "wordCount": 4,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They cover window wall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "cover",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cover-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cover-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(cover-2, wall-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-4, window-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "4",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "cover"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "window"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "They cover window wall."
          },
          "jazzyState": {
            "text": "They cover window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand before a door with a screen and a button.",
      "wordCount": 11,
      "order": 135,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand before a door with a screen and a button.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand before a door with a screen and a button.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "screen",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stand-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, before-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(door-5, screen-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "8",
                  "lemma": "screen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "screen"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(door-5, button-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "11",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(screen-8, with-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "with",
                  "ner": "O",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "8",
                  "lemma": "screen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "screen"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(screen-8, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "8",
                  "lemma": "screen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "screen"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(screen-8, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "screen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "screen"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(screen-8, button-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "8",
                  "lemma": "screen",
                  "ner": "O",
                  "tag": "NN",
                  "word": "screen"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-11, a-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "screen"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "I stand before a door with a screen and a button."
          },
          "jazzyState": {
            "text": "I stand before a door with a screen and a button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Everything is illuminated.",
      "wordCount": 3,
      "order": 136,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Everything is illuminated.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Everything is illuminated.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Everything",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "illuminated",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminated-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(illuminated-3, Everything-1)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "1",
                  "lemma": "everything",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Everything"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(illuminated-3, is-2)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminated-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "VBN": "illuminated"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Everything"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminated."
                ]
              }
            },
            "sentence": "Everything is illuminated."
          },
          "jazzyState": {
            "text": "Everything is illuminated.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|No shadows.\u003e",
      "wordCount": 2,
      "order": 137,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|No shadows.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No shadows.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "shadows",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shadows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shadows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(shadows-2, No-1)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shadows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shadows-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shadow",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "shadows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNS": "shadows"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "No"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "shadows.\u003e"
                ]
              }
            },
            "sentence": "\u003c|No shadows.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|No shadows.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|No shadows.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "There is a three foot wide and seven foot tall door.",
      "wordCount": 11,
      "order": 138,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "There is a three foot wide and seven foot tall door.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "There is a three foot wide and seven foot tall door.",
            "coreAnnotations": [
              {
                "pos": "EX",
                "text": "There",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "foot",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "wide",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "seven",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "foot",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "tall",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(is-2, There-1)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "1",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "EX",
                  "word": "There"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, door-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(foot-5, three-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(wide-6, foot-5)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wide-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(wide-6, tall-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(foot-9, seven-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "seven",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "seven"
                },
                "gov": {
                  "index": "9",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(tall-10, foot-9)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "foot",
                  "ner": "O",
                  "tag": "NN",
                  "word": "foot"
                },
                "gov": {
                  "index": "10",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-11, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-11, wide-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wide",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "wide"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-11, tall-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "tall",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "tall"
                },
                "gov": {
                  "index": "11",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "JJ": "tall"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_0_node": {
                  "CD": "seven"
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_1_node": {
                  "NN": "foot"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_1_node": {
                  "NN": "foot"
                },
                "s_node_1_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "EX": "There"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "wide"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "There is a three foot wide and seven foot tall door."
          },
          "jazzyState": {
            "text": "There is a three foot wide and seven foot tall door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I pound fist on the door.",
      "wordCount": 6,
      "order": 139,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I pound fist on the door.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I pound fist on the door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pound",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "fist",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pound-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pound"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pound-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pound"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pound-2, fist-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pound"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pound-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pound",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pound"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(fist-3, door-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fist",
                  "ner": "O",
                  "tag": "NN",
                  "word": "fist"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-6, on-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "fist"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VB": "pound"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I pound fist on the door."
          },
          "jazzyState": {
            "text": "I pound fist on the door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Steel.\u003e",
      "wordCount": 1,
      "order": 140,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Steel.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Steel.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Steel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Steel-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Steel"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Steel-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Steel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Steel"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Steel.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Steel.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Steel.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Steel.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "There is a matrix shelf. There is a green button.",
      "wordCount": 10,
      "order": 141,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "There is a matrix shelf.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "There is a matrix shelf.",
            "coreAnnotations": [
              {
                "pos": "EX",
                "text": "There",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "matrix",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shelf",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(is-2, There-1)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "1",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "EX",
                  "word": "There"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, shelf-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shelf",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shelf"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(shelf-5, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shelf",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shelf"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shelf-5, matrix-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "matrix",
                  "ner": "O",
                  "tag": "NN",
                  "word": "matrix"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shelf",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shelf"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "matrix"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "shelf"
                },
                "s_node_0_node": {
                  "EX": "There"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shelf."
                ]
              }
            },
            "sentence": "There is a matrix shelf."
          },
          "jazzyState": {
            "text": "There is a matrix shelf.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "There is a green button.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "There is a green button.",
            "coreAnnotations": [
              {
                "pos": "EX",
                "text": "There",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(is-2, There-1)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "1",
                  "lemma": "there",
                  "ner": "O",
                  "tag": "EX",
                  "word": "There"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-2, button-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-5, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-5, green-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "green"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_0_node": {
                  "EX": "There"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "There is a green button."
          },
          "jazzyState": {
            "text": "There is a green button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I look behind.",
      "wordCount": 3,
      "order": 142,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I look behind.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look behind.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, behind-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "RB",
                  "word": "behind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "I look behind."
          },
          "jazzyState": {
            "text": "I look behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three press limbs upon each other and the window wall. They whip and drag and slash upon window wall.",
      "wordCount": 20,
      "order": 143,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three press limbs upon each other and the window wall.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three press limbs upon each other and the window wall.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "press",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "each",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "other",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Gee-1, limbs-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(Gee-1, other-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "7",
                  "lemma": "other",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "other"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(Gee-1, wall-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "11",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-1, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "VB",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-4, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(limbs-4, press-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "NN",
                  "word": "press"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(other-7, upon-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "7",
                  "lemma": "other",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "other"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(other-7, each-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "each",
                  "ner": "O",
                  "tag": "DT",
                  "word": "each"
                },
                "gov": {
                  "index": "7",
                  "lemma": "other",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "other"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(other-7, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "other",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "other"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(other-7, wall-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "7",
                  "lemma": "other",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "other"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-11, window-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "11",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node_1_node_2_node_2_node": {
                  "NN": "wall"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_0_node_1_node": {
                  "JJ": "other"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "press"
                },
                "s_node_0_node_2_node_1_node_2_node_1_node": {
                  "NN": "window"
                },
                "s_node_0_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node_1_node_0_node_0_node": {
                  "DT": "each"
                },
                "s_node_0_node_2_node_1_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_2_node_0_node": {
                  "IN": "upon"
                },
                "s_node_0_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_0_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "JJ": "Forty-three"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "Gee Forty-three press limbs upon each other and the window wall."
          },
          "jazzyState": {
            "text": "Gee Forty-three press limbs upon each other and the window wall.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They whip and drag and slash upon window wall.",
          "wordCount": 9,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "They whip and drag and slash upon window wall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "whip",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "drag",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "slash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, whip-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(whip-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(whip-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(whip-2, drag-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "drag",
                  "ner": "O",
                  "tag": "NN",
                  "word": "drag"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(whip-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(whip-2, slash-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "slash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slash"
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whip-2, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "NN",
                  "word": "whip"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slash-6, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(slash-6, wall-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "6",
                  "lemma": "slash",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wall-9, upon-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-9, window-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "slash"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "IN": "upon"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "wall"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "NN": "window"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VB": "whip"
                },
                "s_node_1_node_0_node_2_node": {
                  "VB": "drag"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wall."
                ]
              }
            },
            "sentence": "They whip and drag and slash upon window wall."
          },
          "jazzyState": {
            "text": "They whip and drag and slash upon window wall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "BANG! vibrates.",
      "wordCount": 2,
      "order": 144,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "BANG!",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "BANG!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "BANG",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, BANG-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BANG-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "BANG"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "BANG!"
          },
          "jazzyState": {
            "text": "BANG!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "vibrates.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "vibrates.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "vibrates",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, vibrates-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "vibrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "vibrates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(vibrates-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "vibrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "vibrates"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "vibrates"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "vibrates."
                ]
              }
            },
            "sentence": "vibrates."
          },
          "jazzyState": {
            "text": "vibrates.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,DO I PRESS THE GREEN BUTTON?\u0027\u0027 I holler.",
      "wordCount": 8,
      "order": 145,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,DO I PRESS THE GREEN BUTTON?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DO I PRESS THE GREEN BUTTON?",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DO",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "PRESS",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "THE",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "GREEN",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "BUTTON",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DO-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DO"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(DO-1, PRESS-3)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "3",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "PRESS"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DO-1, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DO"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(PRESS-3, I-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "PRESS"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(PRESS-3, BUTTON-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "BUTTON",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "BUTTON"
                },
                "gov": {
                  "index": "3",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "PRESS"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(BUTTON-6, THE-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "THE"
                },
                "gov": {
                  "index": "6",
                  "lemma": "BUTTON",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "BUTTON"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(BUTTON-6, GREEN-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "GREEN",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "GREEN"
                },
                "gov": {
                  "index": "6",
                  "lemma": "BUTTON",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "BUTTON"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "THE"
                },
                "s_node_1_node": {
                  "PRP": "I"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NNP": "GREEN"
                },
                "s_node_2_node_1_node_2_node": {
                  "NNP": "BUTTON"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "PRESS"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "RB": "DO"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,DO I PRESS THE GREEN BUTTON?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,DO I PRESS THE GREEN BUTTON?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,DO I PRESS THE GREEN BUTTON?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I holler.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I holler.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "holler",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, holler-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(holler-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(holler-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "holler",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "holler"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "holler"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "holler."
                ]
              }
            },
            "sentence": "I holler."
          },
          "jazzyState": {
            "text": "I holler.",
            "misspelledWords": {
              "holler": [
                "haller",
                "heller",
                "hiller",
                "holier",
                "howler",
                "huller",
                "poller",
                "holder",
                "roller"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,No,\u0027\u0027 says Psycho. \u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027",
      "wordCount": 30,
      "order": 146,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, says Psycho.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, says Psycho.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(says-3, DIALOG_OBJECT_1-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-3, Psycho-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Psycho"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Psycho."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, says Psycho."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, says Psycho.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,No,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "No,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "No",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, No-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(No-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "no",
                  "ner": "O",
                  "tag": "DT",
                  "word": "No"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "No"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,No,\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,No,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,No,\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027",
          "wordCount": 27,
          "orderParagraph": 2,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": "MD",
                "text": "will",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "creating",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "JJR",
                "text": "higher",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "probability",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "override",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "decrease",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "chance",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "succeed",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "VBG",
                "text": "holding",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-3, green-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(open-5, and-17)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "17",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(open-5, decrease-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "decrease",
                  "ner": "O",
                  "tag": "VB",
                  "word": "decrease"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-5, button-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(open-5, will-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "will",
                  "ner": "O",
                  "tag": "MD",
                  "word": "will"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(open-5, door-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-5, .-28)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "28",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-8, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-8, steel-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(door-8, creating-9)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "9",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "creating"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(creating-9, probability-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                },
                "gov": {
                  "index": "9",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "creating"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(probability-12, a-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "12",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(probability-12, higher-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "higher",
                  "ner": "O",
                  "tag": "JJR",
                  "word": "higher"
                },
                "gov": {
                  "index": "12",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(probability-12, override-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "14",
                  "lemma": "override",
                  "ner": "O",
                  "tag": "NN",
                  "word": "override"
                },
                "gov": {
                  "index": "12",
                  "lemma": "probability",
                  "ner": "O",
                  "tag": "NN",
                  "word": "probability"
                }
              },
              {
                "reln": {
                  "parent": "acl",
                  "string": "acl:of(override-14, open-16)",
                  "name": "acl_preposition",
                  "tag": "acl:of"
                },
                "dep": {
                  "index": "16",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "14",
                  "lemma": "override",
                  "ner": "O",
                  "tag": "NN",
                  "word": "override"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(override-14, of-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "14",
                  "lemma": "override",
                  "ner": "O",
                  "tag": "NN",
                  "word": "override"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(open-16, of-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "16",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(decrease-18, button-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "18",
                  "lemma": "decrease",
                  "ner": "O",
                  "tag": "VB",
                  "word": "decrease"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(decrease-18, chance-19)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "19",
                  "lemma": "chance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "chance"
                },
                "gov": {
                  "index": "18",
                  "lemma": "decrease",
                  "ner": "O",
                  "tag": "VB",
                  "word": "decrease"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(decrease-18, succeed-21)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "21",
                  "lemma": "succeed",
                  "ner": "O",
                  "tag": "VB",
                  "word": "succeed"
                },
                "gov": {
                  "index": "18",
                  "lemma": "decrease",
                  "ner": "O",
                  "tag": "VB",
                  "word": "decrease"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(succeed-21, to-20)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "20",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "21",
                  "lemma": "succeed",
                  "ner": "O",
                  "tag": "VB",
                  "word": "succeed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(succeed-21, holding-23)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "23",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                },
                "gov": {
                  "index": "21",
                  "lemma": "succeed",
                  "ner": "O",
                  "tag": "VB",
                  "word": "succeed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(holding-23, in-22)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "22",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "23",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "string": "dep(holding-23, open-24)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "24",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "23",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(holding-23, door-27)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "27",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "23",
                  "lemma": "hold",
                  "ner": "O",
                  "tag": "VBG",
                  "word": "holding"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-27, the-25)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "25",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "27",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-27, steel-26)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "26",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "27",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJR": "higher"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "VB": "decrease"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_2_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_0_node": {
                  "VB": "succeed"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "NN": "chance"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "probability"
                },
                "s_node_1_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBG": "holding"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "green"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "override"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "VB": "open"
                },
                "s_node_1_node_1_node_0_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_0_node": {
                  "VBG": "creating"
                },
                "s_node_1_node_1_node_0_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node": {
                  "RP": "open"
                },
                "s_node_1_node_1_node_0_node_1_node_0_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "MD": "will"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "button"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "door.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027The green button will open the steel door creating a higher probability of override of open and decrease chance to succeed in holding open the steel door.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I press the green button.",
      "wordCount": 5,
      "order": 147,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I press the green button.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I press the green button.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "press",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, press-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(press-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(press-2, button-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(press-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-5, green-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "green"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "press"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "I press the green button."
          },
          "jazzyState": {
            "text": "I press the green button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The steel door opens. A white door is behind.",
      "wordCount": 9,
      "order": 148,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The steel door opens.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The steel door opens.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "opens",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, opens-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-3, steel-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(opens-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(opens-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "opens"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "opens"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "steel"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "opens."
                ]
              }
            },
            "sentence": "The steel door opens."
          },
          "jazzyState": {
            "text": "The steel door opens.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "A white door is behind.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A white door is behind.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(is-4, behind-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "RB",
                  "word": "behind"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "RB": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "A white door is behind."
          },
          "jazzyState": {
            "text": "A white door is behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I knock on white door.",
      "wordCount": 5,
      "order": 149,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I knock on white door.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I knock on white door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "knock",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, knock-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(knock-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(knock-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(knock-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "knock"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, white-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VB": "knock"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "white"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I knock on white door."
          },
          "jazzyState": {
            "text": "I knock on white door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Knock echo is hard and firm.",
      "wordCount": 6,
      "order": 150,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Knock echo is hard and firm.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Knock echo is hard and firm.",
            "coreAnnotations": [
              {
                "pos": "VB",
                "text": "Knock",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "echo",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "hard",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "firm",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, echo-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "echo"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "csubj(echo-2, Knock-1)",
                  "name": "clausal subject",
                  "tag": "csubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "knock",
                  "ner": "O",
                  "tag": "VB",
                  "word": "Knock"
                },
                "gov": {
                  "index": "2",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "echo"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(echo-2, hard-4)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hard",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hard"
                },
                "gov": {
                  "index": "2",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "echo"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(echo-2, firm-6)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "firm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "firm"
                },
                "gov": {
                  "index": "2",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "echo"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(echo-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "echo"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(hard-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hard",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hard"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(hard-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hard",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hard"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(hard-4, firm-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "firm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "firm"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hard",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "hard"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "echo"
                },
                "s_node_1_node_1_node_2_node": {
                  "JJ": "firm"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "hard"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Knock"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "firm."
                ]
              }
            },
            "sentence": "Knock echo is hard and firm."
          },
          "jazzyState": {
            "text": "Knock echo is hard and firm.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Thick.\u003e",
      "wordCount": 1,
      "order": 151,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Thick.\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Thick.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Thick",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Thick-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Thick",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thick"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Thick-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Thick",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Thick"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Thick"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|Thick.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Thick.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Thick.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Thick.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I press the green button.",
      "wordCount": 5,
      "order": 152,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I press the green button.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I press the green button.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "press",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, press-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(press-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(press-2, button-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(press-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "press",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "press"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-5, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-5, green-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "5",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "JJ": "green"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "press"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "I press the green button."
          },
          "jazzyState": {
            "text": "I press the green button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The steel door closes.",
      "wordCount": 4,
      "order": 153,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The steel door closes.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The steel door closes.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "closes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, closes-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-3, steel-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(closes-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(closes-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "closes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "closes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "steel"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "closes."
                ]
              }
            },
            "sentence": "The steel door closes."
          },
          "jazzyState": {
            "text": "The steel door closes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The lights turn off.",
      "wordCount": 4,
      "order": 154,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The lights turn off.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "The lights turn off.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lights",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "turn",
                "net": "O"
              },
              {
                "pos": "RP",
                "text": "off",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, turn-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lights-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(turn-3, lights-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "light",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lights"
                },
                "gov": {
                  "index": "3",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(turn-3, off-4)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "4",
                  "lemma": "off",
                  "ner": "O",
                  "tag": "RP",
                  "word": "off"
                },
                "gov": {
                  "index": "3",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(turn-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "turn",
                  "ner": "O",
                  "tag": "VB",
                  "word": "turn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "off"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "lights"
                },
                "s_node_1_node_0_node": {
                  "VBP": "turn"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "off."
                ]
              }
            },
            "sentence": "The lights turn off."
          },
          "jazzyState": {
            "text": "The lights turn off.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": ",,You know.\u0027\u0027 I look behind.",
      "wordCount": 5,
      "order": 155,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": ",,You know.\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "You know.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "You",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "know",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-2, You-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "you",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "You"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "know"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "know"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "You"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "know.\u0027\u0027"
                ]
              }
            },
            "sentence": ",,You know.\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,You know.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,You know.\u0027\u0027",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I look behind.",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I look behind.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "behind",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-2, behind-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "behind",
                  "ner": "O",
                  "tag": "RB",
                  "word": "behind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RP": "behind"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "behind."
                ]
              }
            },
            "sentence": "I look behind."
          },
          "jazzyState": {
            "text": "I look behind.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance. Psycho\u0027s limbs cover, \u003c|Like a blanket,\u003e the tunnel entrance. Psycho says, ,,The window wall has been breached. The Gee Forty-three have entered.\u0027\u0027",
      "wordCount": 36,
      "order": 156,
      "sentenceCount": 4,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance.",
          "wordCount": 14,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "span",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "left",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "right",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "top",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "bottom",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "entrance",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, span-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(span-4, .-17)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "17",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(span-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(span-4, right-7)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(span-4, top-9)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "9",
                  "lemma": "top",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "top"
                },
                "gov": {
                  "index": "4",
                  "lemma": "span",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "span"
                }
              },
              {
                "reln": {
                  "string": "dep(right-7, left-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "left",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "left"
                },
                "gov": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(right-7, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(right-7, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(right-7, top-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "top",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "top"
                },
                "gov": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(right-7, bottom-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "11",
                  "lemma": "bottom",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bottom"
                },
                "gov": {
                  "index": "7",
                  "lemma": "right",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "right"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(bottom-11, entrance-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "16",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bottom",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bottom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bottom-11, to-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bottom",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "bottom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-14, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-14, \u0027s-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "14",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(entrance-16, around-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "16",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(entrance-16, tunnel-14)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "14",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "16",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_4_node": {
                  "JJ": "top"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "entrance"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "bottom"
                },
                "s_node_1_node_0_node": {
                  "VBP": "span"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "around"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "JJ": "right"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "JJ": "left"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "entrance."
                ]
              }
            },
            "sentence": "Psycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limbs span left and right and top to bottom around the tunnel\u0027s entrance.",
            "misspelledWords": {
              "tunnel\u0027s": [
                "tunnels"
              ],
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho\u0027s limbs cover, DIALOG_OBJECT_1, the tunnel entrance.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limbs cover, DIALOG_OBJECT_1, the tunnel entrance.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "cover",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "entrance",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cover-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(limbs-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cover-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(cover-4, DIALOG_OBJECT_1-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(cover-4, entrance-10)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cover-4, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "cover",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "cover"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(entrance-10, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(entrance-10, tunnel-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "10",
                  "lemma": "entrance",
                  "ner": "O",
                  "tag": "NN",
                  "word": "entrance"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_4_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VB": "DIALOG_OBJECT_1"
                },
                "s_node_1_node_4_node_2_node": {
                  "NN": "entrance"
                },
                "s_node_1_node_4_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VB": "cover"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "entrance."
                ]
              }
            },
            "sentence": "Psycho\u0027s limbs cover, DIALOG_OBJECT_1, the tunnel entrance."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limbs cover, DIALOG_OBJECT_1, the tunnel entrance.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Like a blanket,\u003e",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Like a blanket,",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Like",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blanket",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, blanket-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(blanket-3, Like-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Like"
                },
                "gov": {
                  "index": "3",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(blanket-3, a-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "3",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(blanket-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "blanket"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Like"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Like a blanket,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Like a blanket,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Like a blanket,\u003e",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Psycho says, DIALOG_OBJECT_1",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Psycho-1, says-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Psycho-1, DIALOG_OBJECT_1-4)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "says"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Psycho says, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Psycho says, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,The window wall has been breached.",
          "wordCount": 6,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "PastParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The window wall has been breached.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "window",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "wall",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "has",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "been",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "breached",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, breached-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "breach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "breached"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wall-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wall-3, window-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "window",
                  "ner": "O",
                  "tag": "NN",
                  "word": "window"
                },
                "gov": {
                  "index": "3",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(breached-6, wall-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "wall",
                  "ner": "O",
                  "tag": "NN",
                  "word": "wall"
                },
                "gov": {
                  "index": "6",
                  "lemma": "breach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "breached"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(breached-6, has-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "has"
                },
                "gov": {
                  "index": "6",
                  "lemma": "breach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "breached"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(breached-6, been-5)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "been"
                },
                "gov": {
                  "index": "6",
                  "lemma": "breach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "breached"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(breached-6, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "breach",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "breached"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "VBN": "breached"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "wall"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "window"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "has"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "been"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "breached."
                ]
              }
            },
            "sentence": ",,The window wall has been breached."
          },
          "jazzyState": {
            "text": ",,The window wall has been breached.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,The window wall has been breached.",
            "originOfDialogFromOrderParagraph": 3,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The Gee Forty-three have entered.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 4,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The Gee Forty-three have entered.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "entered",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, entered-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "entered"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, Forty-three-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(entered-5, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "entered"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(entered-5, have-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "have",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "entered"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(entered-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "enter",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "entered"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node": {
                  "VBN": "entered"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_0_node": {
                  "VBP": "have"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "entered.\u0027\u0027"
                ]
              }
            },
            "sentence": "The Gee Forty-three have entered.\u0027\u0027"
          },
          "jazzyState": {
            "text": "The Gee Forty-three have entered.\u0027\u0027",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "sentence": "The Gee Forty-three have entered.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s limb blanket shakes and jolts.",
      "wordCount": 6,
      "order": 157,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s limb blanket shakes and jolts.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limb blanket shakes and jolts.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blanket",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "jolts",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(blanket-4, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(blanket-4, limb-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shakes-5, blanket-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shakes-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(shakes-5, jolts-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "jolt",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "jolts"
                },
                "gov": {
                  "index": "5",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-5, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "jolts"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_2_node": {
                  "NN": "blanket"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shakes"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "jolts."
                ]
              }
            },
            "sentence": "Psycho\u0027s limb blanket shakes and jolts."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limb blanket shakes and jolts.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "BANG! is.",
      "wordCount": 2,
      "order": 158,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "BANG!",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "BANG!",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "BANG",
                "net": "O"
              },
              {
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, BANG-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BANG-1, !-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "!",
                  "ner": "O",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "1",
                  "lemma": "bang",
                  "ner": "O",
                  "tag": "NN",
                  "word": "BANG"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "!"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "BANG"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "BANG!"
          },
          "jazzyState": {
            "text": "BANG!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "is.",
          "wordCount": 1,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "is.",
            "coreAnnotations": [
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBZ": "is"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "is."
          },
          "jazzyState": {
            "text": "is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step from cylinder fourteen to cylinder seven.",
      "wordCount": 8,
      "order": 159,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I step from cylinder fourteen to cylinder seven.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step from cylinder fourteen to cylinder seven.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "fourteen",
                "net": "NUMBER"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "seven",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(step-2, cylinder-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(step-2, cylinder-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "7",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cylinder-4, from-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(cylinder-4, fourteen-5)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "fourteen",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "fourteen"
                },
                "gov": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cylinder-7, to-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(cylinder-7, seven-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "seven",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "seven"
                },
                "gov": {
                  "index": "7",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "cylinder"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "cylinder"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "CD": "seven"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CD": "fourteen"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "seven."
                ]
              }
            },
            "sentence": "I step from cylinder fourteen to cylinder seven."
          },
          "jazzyState": {
            "text": "I step from cylinder fourteen to cylinder seven.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho shakes.",
      "wordCount": 2,
      "order": 160,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho shakes.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho shakes.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shakes-2, Psycho-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shakes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shakes."
                ]
              }
            },
            "sentence": "Psycho shakes."
          },
          "jazzyState": {
            "text": "Psycho shakes.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Half the tunnel is illuminated.",
      "wordCount": 5,
      "order": 161,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Half the tunnel is illuminated.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Half the tunnel is illuminated.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Half",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "illuminated",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, illuminated-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Half-1, tunnel-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "1",
                  "lemma": "half",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Half"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(tunnel-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(illuminated-5, Half-1)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "1",
                  "lemma": "half",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Half"
                },
                "gov": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(illuminated-5, is-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(illuminated-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "illuminate",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "illuminated"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "tunnel"
                },
                "s_node_1_node_1_node": {
                  "VBN": "illuminated"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "DT": "the"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "PDT": "Half"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "illuminated."
                ]
              }
            },
            "sentence": "Half the tunnel is illuminated."
          },
          "jazzyState": {
            "text": "Half the tunnel is illuminated.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s limb blanket waves and rolls and snaps. Metal whipping metal sounds are.",
      "wordCount": 13,
      "order": 162,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s limb blanket waves and rolls and snaps.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s limb blanket waves and rolls and snaps.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blanket",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "waves",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "snaps",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, snaps-9)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "9",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(waves-5, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(waves-5, limb-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(waves-5, blanket-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(waves-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(waves-5, rolls-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(snaps-9, waves-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "wave",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "waves"
                },
                "gov": {
                  "index": "9",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(snaps-9, rolls-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "9",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(snaps-9, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(snaps-9, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "9",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_2_node": {
                  "NNS": "rolls"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "NNS": "waves"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "snaps"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "blanket"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "CC": "and"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "snaps."
                ]
              }
            },
            "sentence": "Psycho\u0027s limb blanket waves and rolls and snaps."
          },
          "jazzyState": {
            "text": "Psycho\u0027s limb blanket waves and rolls and snaps.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Metal whipping metal sounds are.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Metal whipping metal sounds are.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Metal",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "whipping",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "metal",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "sounds",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, are-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sounds-4, Metal-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "metal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Metal"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sound",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sounds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(sounds-4, whipping-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "whipping",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "whipping"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sound",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sounds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sounds-4, metal-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "metal",
                  "ner": "O",
                  "tag": "NN",
                  "word": "metal"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sound",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sounds"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(are-5, sounds-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sound",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "sounds"
                },
                "gov": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(are-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "are"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "sounds"
                },
                "s_node_0_node_2_node": {
                  "NN": "metal"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "whipping"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Metal"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "are."
                ]
              }
            },
            "sentence": "Metal whipping metal sounds are."
          },
          "jazzyState": {
            "text": "Metal whipping metal sounds are.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A limb slides through, \u003c|Psycho,\u003e limb blanket.",
      "wordCount": 7,
      "order": 163,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "A limb slides through, DIALOG_OBJECT_1, limb blanket.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A limb slides through, DIALOG_OBJECT_1, limb blanket.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "blanket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slides-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(slides-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slides-3, limb-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(slides-3, through-4)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slides-3, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(slides-3, DIALOG_OBJECT_1-6)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slides-3, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(slides-3, blanket-9)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "9",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slides-3, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(blanket-9, limb-8)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "8",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "9",
                  "lemma": "blanket",
                  "ner": "O",
                  "tag": "NN",
                  "word": "blanket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "blanket"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "PRN"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "limb"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "slides"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "blanket."
                ]
              }
            },
            "sentence": "A limb slides through, DIALOG_OBJECT_1, limb blanket."
          },
          "jazzyState": {
            "text": "A limb slides through, DIALOG_OBJECT_1, limb blanket.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Psycho,\u003e",
          "wordCount": 1,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho,",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Psycho-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Psycho-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": ","
                },
                "s_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|Psycho,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Psycho,\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Psycho,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step to cylinder number eight. ,,Why not now?\u0027\u0027",
      "wordCount": 9,
      "order": 164,
      "sentenceCount": 2,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "I step to cylinder number eight.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I step to cylinder number eight.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "cylinder",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "number",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "eight",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(step-2, number-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "5",
                  "lemma": "number",
                  "ner": "O",
                  "tag": "NN",
                  "word": "number"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(number-5, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "5",
                  "lemma": "number",
                  "ner": "O",
                  "tag": "NN",
                  "word": "number"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(number-5, cylinder-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "cylinder",
                  "ner": "O",
                  "tag": "NN",
                  "word": "cylinder"
                },
                "gov": {
                  "index": "5",
                  "lemma": "number",
                  "ner": "O",
                  "tag": "NN",
                  "word": "number"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(number-5, eight-6)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                },
                "gov": {
                  "index": "5",
                  "lemma": "number",
                  "ner": "O",
                  "tag": "NN",
                  "word": "number"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "CD": "eight"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "number"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "step"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "cylinder"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eight."
                ]
              }
            },
            "sentence": "I step to cylinder number eight."
          },
          "jazzyState": {
            "text": "I step to cylinder number eight.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": ",,Why not now?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Why not now?",
            "coreAnnotations": [
              {
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "now",
                "net": "DATE"
              },
              {
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, not-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(not-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "ner": "O",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "string": "dep(not-2, now-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "now",
                  "ner": "DATE",
                  "tag": "RB",
                  "word": "now"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(not-2, ?-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "?",
                  "ner": "O",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "not",
                  "ner": "O",
                  "tag": "RB",
                  "word": "not"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "SBARQ"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node": {
                  "RB": "now"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "RB": "not"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,Why not now?\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,Why not now?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,Why not now?\u0027\u0027",
            "originOfDialogFromOrderParagraph": 2,
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A loud pop blasts and echoes.",
      "wordCount": 6,
      "order": 165,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A loud pop blasts and echoes.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A loud pop blasts and echoes.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "loud",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "pop",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "blasts",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "echoes",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pop-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(pop-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(pop-3, loud-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "loud",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "loud"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                }
              },
              {
                "reln": {
                  "string": "dep(pop-3, blasts-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blasts"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                }
              },
              {
                "reln": {
                  "string": "dep(pop-3, echoes-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "echoes"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pop-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pop",
                  "ner": "O",
                  "tag": "NN",
                  "word": "pop"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(blasts-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blasts"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(blasts-4, echoes-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "echo",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "echoes"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blasts"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "loud"
                },
                "s_node_1_node_1_node_2_node": {
                  "NNS": "echoes"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pop"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNS": "blasts"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "echoes."
                ]
              }
            },
            "sentence": "A loud pop blasts and echoes."
          },
          "jazzyState": {
            "text": "A loud pop blasts and echoes.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three limb penetrates, falls, hits ground and puffs, \u003c|Like smoke.\u003e",
      "wordCount": 11,
      "order": 166,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three limb penetrates, falls, hits ground and puffs, DIALOG_OBJECT_1",
          "wordCount": 9,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three limb penetrates, falls, hits ground and puffs, DIALOG_OBJECT_1",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "penetrates",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hits",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puffs",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hits-8)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "8",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limb-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(penetrates-4, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "penetrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "penetrates"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(penetrates-4, limb-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "4",
                  "lemma": "penetrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "penetrates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(penetrates-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "penetrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "penetrates"
                }
              },
              {
                "reln": {
                  "string": "dep(penetrates-4, falls-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "4",
                  "lemma": "penetrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "penetrates"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(hits-8, penetrates-4)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "penetrate",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "penetrates"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hits-8, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hits-8, ground-9)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hits-8, puffs-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(ground-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(ground-9, puffs-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                },
                "gov": {
                  "index": "9",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ground-9, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "9",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(ground-9, DIALOG_OBJECT_1-13)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "13",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "9",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_2_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_2_node": {
                  "VBZ": "hits"
                },
                "s_node_1_node_4_node": {
                  "NNP": "DIALOG_OBJECT_1"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_2_node_3_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_3_node_0_node": {
                  "NN": "ground"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "JJ": "Forty-three"
                },
                "s_node_1_node_0_node_2_node": {
                  "NNS": "penetrates"
                },
                "s_node_0_node": {
                  "VB": "Gee"
                },
                "s_node_1_node_2_node_3_node_2_node": {
                  "NNS": "puffs"
                },
                "s_node_1_node_3_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Gee Forty-three limb penetrates, falls, hits ground and puffs, DIALOG_OBJECT_1"
          },
          "jazzyState": {
            "text": "Gee Forty-three limb penetrates, falls, hits ground and puffs, DIALOG_OBJECT_1",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Like smoke.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Like smoke.",
            "coreAnnotations": [
              {
                "pos": "IN",
                "text": "Like",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "smoke",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, smoke-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "smoke",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smoke"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(smoke-2, Like-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "like",
                  "ner": "O",
                  "tag": "IN",
                  "word": "Like"
                },
                "gov": {
                  "index": "2",
                  "lemma": "smoke",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smoke"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(smoke-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "smoke",
                  "ner": "O",
                  "tag": "NN",
                  "word": "smoke"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node": {
                  "NN": "smoke"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Like"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "smoke.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Like smoke.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Like smoke.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|Like smoke.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Limbs shoot through and create limb sized holes in Psycho Blanket.",
      "wordCount": 11,
      "order": 167,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Limbs shoot through and create limb sized holes in Psycho Blanket.",
          "wordCount": 11,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Limbs shoot through and create limb sized holes in Psycho Blanket.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "shoot",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "create",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "sized",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "holes",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Blanket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shoot-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shoot-2, Limbs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(shoot-2, through-3)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shoot-2, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(shoot-2, create-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoot-2, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "shoot"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(create-5, Limbs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "5",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(create-5, holes-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "hole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "holes"
                },
                "gov": {
                  "index": "5",
                  "lemma": "create",
                  "ner": "O",
                  "tag": "VB",
                  "word": "create"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(holes-8, limb-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "holes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(holes-8, sized-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "size",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "sized"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "holes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(holes-8, Blanket-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "11",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "8",
                  "lemma": "hole",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "holes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Blanket-11, in-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Blanket-11, Psycho-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VBP": "create"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NNS": "holes"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NN": "limb"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node": {
                  "RB": "through"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NNP": "Blanket"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBP": "shoot"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "sized"
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Blanket."
                ]
              }
            },
            "sentence": "Limbs shoot through and create limb sized holes in Psycho Blanket."
          },
          "jazzyState": {
            "text": "Limbs shoot through and create limb sized holes in Psycho Blanket.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Cyanide rises.\u003e",
      "wordCount": 2,
      "order": 168,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Cyanide rises.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Cyanide rises.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Cyanide",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rises",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rises-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rises"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(rises-2, Cyanide-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "cyanide",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Cyanide"
                },
                "gov": {
                  "index": "2",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rises"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(rises-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rises"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "rises"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Cyanide"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "rises.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Cyanide rises.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Cyanide rises.\u003e",
            "misspelledWords": {
              "Cyanide": [
                "sand"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Cyanide rises.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gee Forty-three limbs fall to ground. Limbs hit ground and puff.",
      "wordCount": 11,
      "order": 169,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gee Forty-three limbs fall to ground.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Gee Forty-three limbs fall to ground.",
            "coreAnnotations": [
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "fall",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fall-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-3, Forty-three-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(fall-4, Gee-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fall-4, limbs-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(fall-4, ground-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fall-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "ground"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNS": "limbs"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_0_node": {
                  "VBP": "fall"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ground."
                ]
              }
            },
            "sentence": "Gee Forty-three limbs fall to ground."
          },
          "jazzyState": {
            "text": "Gee Forty-three limbs fall to ground.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Limbs hit ground and puff.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Past"
          ],
          "nlpState": {
            "sentence": "Limbs hit ground and puff.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "VBD",
                "text": "hit",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puff",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hit-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hit-2, Limbs-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hit-2, ground-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hit-2, puff-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puff"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hit-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBD",
                  "word": "hit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(ground-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(ground-3, puff-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puff"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "puff"
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_node_0_node": {
                  "VBD": "hit"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "ground"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puff."
                ]
              }
            },
            "sentence": "Limbs hit ground and puff."
          },
          "jazzyState": {
            "text": "Limbs hit ground and puff.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A limb shoots from Psycho Blanket.",
      "wordCount": 6,
      "order": 170,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A limb shoots from Psycho Blanket.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "A limb shoots from Psycho Blanket.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shoots",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Blanket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shoots-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limb-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shoots-3, limb-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(shoots-3, Blanket-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoots-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Blanket-6, from-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Blanket-6, Psycho-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "6",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Blanket"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shoots"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Blanket."
                ]
              }
            },
            "sentence": "A limb shoots from Psycho Blanket."
          },
          "jazzyState": {
            "text": "A limb shoots from Psycho Blanket.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I step and duck.",
      "wordCount": 4,
      "order": 171,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I step and duck.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I step and duck.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "step",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "duck",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, step-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(step-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(step-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(step-2, duck-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "duck",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "duck"
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(step-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "step",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "step"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(duck-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "duck",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "duck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VB": "duck"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VB": "step"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "duck."
                ]
              }
            },
            "sentence": "I step and duck."
          },
          "jazzyState": {
            "text": "I step and duck.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Limb lands on floor and hits door. Limb puffs.",
      "wordCount": 9,
      "order": 172,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Limb lands on floor and hits door.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Limb lands on floor and hits door.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Limb",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "lands",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "hits",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lands-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(lands-2, Limb-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Limb"
                },
                "gov": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(lands-2, floor-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "4",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(lands-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(lands-2, hits-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                },
                "gov": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lands-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "land",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "lands"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-4, on-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "on",
                  "ner": "O",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "4",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hits-6, door-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hit",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "hits"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_2_node_0_node": {
                  "IN": "on"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node_2_node_1_node": {
                  "NN": "floor"
                },
                "s_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "lands"
                },
                "s_node_0_node_0_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_2_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node_0_node_0_node": {
                  "VB": "Limb"
                },
                "s_node_0_node_2_node_0_node": {
                  "VBZ": "hits"
                },
                "s_node_0_node_0_node_2_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Limb lands on floor and hits door."
          },
          "jazzyState": {
            "text": "Limb lands on floor and hits door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Limb puffs.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "Limb puffs.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Limb",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puffs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, puffs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(puffs-2, Limb-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Limb"
                },
                "gov": {
                  "index": "2",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(puffs-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "puffs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Limb"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puffs."
                ]
              }
            },
            "sentence": "Limb puffs."
          },
          "jazzyState": {
            "text": "Limb puffs.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|Psycho Blanket torn.\u003e I stumble, walk eight, nine, ten, eleven. I fall.",
      "wordCount": 12,
      "order": 173,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|Psycho Blanket torn.\u003e",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "Psycho Blanket torn.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Blanket",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "torn",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, torn-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "torn"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Blanket-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(torn-3, Blanket-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "torn"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(torn-3, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "tear",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "torn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBN": "torn"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Blanket"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "torn.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Psycho Blanket torn.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Psycho Blanket torn.\u003e",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|Psycho Blanket torn.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I stumble, walk eight, nine, ten, eleven.",
          "wordCount": 7,
          "orderParagraph": 2,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "I stumble, walk eight, nine, ten, eleven.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stumble",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "eight",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "nine",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "eleven",
                "net": "NUMBER"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, walk-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stumble-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stumble",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stumble"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(walk-4, stumble-2)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stumble",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stumble"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-4, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-4, eight-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(walk-4, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "walk",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eight-5, ,-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(eight-5, nine-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "nine",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "nine"
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eight-5, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(eight-5, ten-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "ten",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(eight-5, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(eight-5, eleven-11)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "11",
                  "lemma": "eleven",
                  "ner": "NUMBER",
                  "tag": "NNS",
                  "word": "eleven"
                },
                "gov": {
                  "index": "5",
                  "lemma": "eight",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "eight"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_4_node": {
                  "CD": "ten"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "VBP": "walk"
                },
                "s_node_0_node_1_node": {
                  "VBP": "stumble"
                },
                "s_node_3_node_0_node": {
                  "CD": "eight"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node": {
                  "CD": "nine"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_5_node": {
                  "COMMA": ","
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_6_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_3_node": {
                  "COMMA": ","
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_6_node": {
                  "NNS": "eleven"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_3_node_1_node": {
                  "COMMA": ","
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "eleven."
                ]
              }
            },
            "sentence": "I stumble, walk eight, nine, ten, eleven."
          },
          "jazzyState": {
            "text": "I stumble, walk eight, nine, ten, eleven.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I fall.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I fall.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "fall",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fall-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fall-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fall-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "fall"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "fall"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "fall."
                ]
              }
            },
            "sentence": "I fall."
          },
          "jazzyState": {
            "text": "I fall.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Something squeezes and pulls around ankle.",
      "wordCount": 6,
      "order": 174,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Something squeezes and pulls around ankle.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Something squeezes and pulls around ankle.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Something",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "squeezes",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ankle",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, squeezes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(squeezes-2, Something-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "something",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Something"
                },
                "gov": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(squeezes-2, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(squeezes-2, pulls-4)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(squeezes-2, ankle-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "6",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                },
                "gov": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(squeezes-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "squeeze",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "squeezes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-4, Something-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "something",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Something"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ankle-6, around-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "6",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "pulls"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "around"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NN": "ankle"
                },
                "s_node_0_node": {
                  "NN": "Something"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "squeezes"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ankle."
                ]
              }
            },
            "sentence": "Something squeezes and pulls around ankle."
          },
          "jazzyState": {
            "text": "Something squeezes and pulls around ankle.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|A limb,\u003e I think. I slap palm upon smooth floor. And I reach for ankle and look back.",
      "wordCount": 18,
      "order": 175,
      "sentenceCount": 3,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "DIALOG_OBJECT_1, I think.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "DIALOG_OBJECT_1, I think.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "DIALOG_OBJECT_1",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "think",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, think-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, DIALOG_OBJECT_1-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dialog_object_1",
                  "ner": "O",
                  "tag": "NN",
                  "word": "DIALOG_OBJECT_1"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(think-4, I-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(think-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "think",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "think"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "VBP": "think"
                },
                "s_node_2_node": {
                  "PRP": "I"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "RB": "DIALOG_OBJECT_1"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "think."
                ]
              }
            },
            "sentence": "DIALOG_OBJECT_1, I think."
          },
          "jazzyState": {
            "text": "DIALOG_OBJECT_1, I think.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|A limb,\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A limb,",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, limb-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limb-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(limb-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "ner": "O",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "limb"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003c|A limb,\u003e"
          },
          "jazzyState": {
            "text": "\u003c|A limb,\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|A limb,\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I slap palm upon smooth floor.",
          "wordCount": 6,
          "orderParagraph": 2,
          "tense": [],
          "nlpState": {
            "sentence": "I slap palm upon smooth floor.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "slap",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "palm",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "upon",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "smooth",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slap-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slap"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slap-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slap"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(slap-2, palm-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slap-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "slap",
                  "ner": "O",
                  "tag": "NN",
                  "word": "slap"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:upon(palm-3, floor-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:upon"
                },
                "dep": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "3",
                  "lemma": "palm",
                  "ner": "O",
                  "tag": "NN",
                  "word": "palm"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-6, upon-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "upon",
                  "ner": "O",
                  "tag": "IN",
                  "word": "upon"
                },
                "gov": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(floor-6, smooth-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "smooth",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "smooth"
                },
                "gov": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "upon"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node": {
                  "NN": "palm"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "slap"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "JJ": "smooth"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "floor."
                ]
              }
            },
            "sentence": "I slap palm upon smooth floor."
          },
          "jazzyState": {
            "text": "I slap palm upon smooth floor.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "And I reach for ankle and look back.",
          "wordCount": 8,
          "orderParagraph": 3,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "And I reach for ankle and look back.",
            "coreAnnotations": [
              {
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "reach",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ankle",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "look",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reach-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(reach-3, And-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reach-3, I-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(reach-3, ankle-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "5",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(reach-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(reach-3, look-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reach-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ankle-5, for-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "5",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-7, I-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "7",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(look-7, back-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "back",
                  "ner": "O",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "7",
                  "lemma": "look",
                  "ner": "O",
                  "tag": "VB",
                  "word": "look"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "VBP": "look"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "I"
                },
                "s_node_2_node_0_node_1_node_1_node": {
                  "NN": "ankle"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node": {
                  "RB": "back"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_2_node_0_node_0_node": {
                  "VBP": "reach"
                },
                "s_node_2_node_0_node_1_node_0_node": {
                  "IN": "for"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "back."
                ]
              }
            },
            "sentence": "And I reach for ankle and look back."
          },
          "jazzyState": {
            "text": "And I reach for ankle and look back.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Limb wraps around ankle and pulls.",
      "wordCount": 6,
      "order": 176,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Limb wraps around ankle and pulls.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Limb wraps around ankle and pulls.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Limb",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "wraps",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ankle",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wraps-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wraps-2, Limb-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Limb"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(wraps-2, ankle-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "4",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wraps-2, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(wraps-2, pulls-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wraps-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "wraps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ankle-4, around-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "around",
                  "ner": "O",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ankle"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-6, Limb-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Limb"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "IN": "around"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "pulls"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "wraps"
                },
                "s_node_0_node": {
                  "NNP": "Limb"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "ankle"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pulls."
                ]
              }
            },
            "sentence": "Limb wraps around ankle and pulls."
          },
          "jazzyState": {
            "text": "Limb wraps around ankle and pulls.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The limb falls and puffs.",
      "wordCount": 5,
      "order": 177,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The limb falls and puffs.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "The limb falls and puffs.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "puffs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limb-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-3, limb-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(falls-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(falls-3, puffs-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puffs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "fall",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(puffs-5, limb-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "5",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "puffs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "puffs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "limb"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puffs."
                ]
              }
            },
            "sentence": "The limb falls and puffs."
          },
          "jazzyState": {
            "text": "The limb falls and puffs.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Hundreds of limb tips poke through Psycho Blanket.",
      "wordCount": 8,
      "order": 178,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Hundreds of limb tips poke through Psycho Blanket.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Hundreds of limb tips poke through Psycho Blanket.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Hundreds",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "limb",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "tips",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "poke",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Blanket",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, poke-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "poke"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(Hundreds-1, tips-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tips"
                },
                "gov": {
                  "index": "1",
                  "lemma": "hundred",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Hundreds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tips-4, of-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tips"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(tips-4, limb-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NN",
                  "word": "limb"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tip",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "tips"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(poke-5, Hundreds-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hundred",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Hundreds"
                },
                "gov": {
                  "index": "5",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "poke"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(poke-5, Blanket-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "5",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "poke"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(poke-5, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "poke",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "poke"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Blanket-8, through-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "through",
                  "ner": "O",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Blanket-8, Psycho-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "NN": "limb"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "NNS": "tips"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Blanket"
                },
                "s_node_1_node_0_node": {
                  "VBP": "poke"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_0_node_0_node": {
                  "NNS": "Hundreds"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Blanket."
                ]
              }
            },
            "sentence": "Hundreds of limb tips poke through Psycho Blanket."
          },
          "jazzyState": {
            "text": "Hundreds of limb tips poke through Psycho Blanket.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho Blanket snaps and whips.",
      "wordCount": 5,
      "order": 179,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho Blanket snaps and whips.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho Blanket snaps and whips.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Blanket",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "snaps",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "whips",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, snaps-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Blanket-2, Psycho-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(snaps-3, Blanket-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "3",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(snaps-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(snaps-3, whips-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                },
                "gov": {
                  "index": "3",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(snaps-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "snap",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "snaps"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(whips-5, Blanket-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Blanket",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Blanket"
                },
                "gov": {
                  "index": "5",
                  "lemma": "whip",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "whips"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "whips"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Blanket"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "snaps"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "whips."
                ]
              }
            },
            "sentence": "Psycho Blanket snaps and whips."
          },
          "jazzyState": {
            "text": "Psycho Blanket snaps and whips.",
            "misspelledWords": {
              "Psycho": [
                "psyche"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I crawl. Hands lead. Feet follow. I run.",
      "wordCount": 8,
      "order": 180,
      "sentenceCount": 4,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I crawl.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I crawl.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "crawl",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, crawl-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "crawl"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(crawl-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "crawl"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(crawl-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "crawl",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "crawl"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VB": "crawl"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "crawl."
                ]
              }
            },
            "sentence": "I crawl."
          },
          "jazzyState": {
            "text": "I crawl.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Hands lead.",
          "wordCount": 2,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Hands lead.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Hands",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "lead",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lead-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lead"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lead-2, Hands-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "hand",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Hands"
                },
                "gov": {
                  "index": "2",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lead-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "lead",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "lead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "lead"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Hands"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "lead."
                ]
              }
            },
            "sentence": "Hands lead."
          },
          "jazzyState": {
            "text": "Hands lead.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Feet follow.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Feet follow.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Feet",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "follow",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, follow-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "follow"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(follow-2, Feet-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Feet",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Feet"
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "follow"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(follow-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "follow",
                  "ner": "O",
                  "tag": "VB",
                  "word": "follow"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "follow"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Feet"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "follow."
                ]
              }
            },
            "sentence": "Feet follow."
          },
          "jazzyState": {
            "text": "Feet follow.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I run.",
          "wordCount": 2,
          "orderParagraph": 4,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I run.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "run",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, run-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(run-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(run-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "run",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "run"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "run"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "run."
                ]
              }
            },
            "sentence": "I run."
          },
          "jazzyState": {
            "text": "I run.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A BRIGHT flash of electric illumination blinds.",
      "wordCount": 7,
      "order": 181,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A BRIGHT flash of electric illumination blinds.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "A BRIGHT flash of electric illumination blinds.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "BRIGHT",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "flash",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "electric",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "illumination",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "blinds",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, flash-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "flash"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(flash-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "flash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(flash-3, BRIGHT-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bright",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "BRIGHT"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "flash"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(flash-3, blinds-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "blind",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blinds"
                },
                "gov": {
                  "index": "3",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "flash"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(flash-3, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "flash",
                  "ner": "O",
                  "tag": "NN",
                  "word": "flash"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(blinds-7, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "blind",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blinds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(blinds-7, electric-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "electric",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "electric"
                },
                "gov": {
                  "index": "7",
                  "lemma": "blind",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blinds"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(blinds-7, illumination-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "illumination",
                  "ner": "O",
                  "tag": "NN",
                  "word": "illumination"
                },
                "gov": {
                  "index": "7",
                  "lemma": "blind",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "blinds"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNS": "blinds"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "BRIGHT"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "illumination"
                },
                "s_node_1_node_0_node": {
                  "VBP": "flash"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "electric"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "blinds."
                ]
              }
            },
            "sentence": "A BRIGHT flash of electric illumination blinds."
          },
          "jazzyState": {
            "text": "A BRIGHT flash of electric illumination blinds.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s body puffs.",
      "wordCount": 3,
      "order": 182,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s body puffs.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho\u0027s body puffs.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "puffs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, body-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(body-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "string": "dep(body-3, puffs-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "puffs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(body-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "puffs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "body"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puffs."
                ]
              }
            },
            "sentence": "Psycho\u0027s body puffs."
          },
          "jazzyState": {
            "text": "Psycho\u0027s body puffs.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s core shoots to floor and rolls.",
      "wordCount": 7,
      "order": 183,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s core shoots to floor and rolls.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "Psycho\u0027s core shoots to floor and rolls.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shoots",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shoots-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shoots-4, core-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(shoots-4, floor-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(shoots-4, rolls-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shoots-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shoots"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(floor-6, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(floor-6, rolls-8)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "8",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "6",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNS": "rolls"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "core"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "floor"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shoots"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rolls."
                ]
              }
            },
            "sentence": "Psycho\u0027s core shoots to floor and rolls."
          },
          "jazzyState": {
            "text": "Psycho\u0027s core shoots to floor and rolls.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Blast shield slices and slides during an instant. It cuts Gee Forty-three limbs. It shuts.",
      "wordCount": 15,
      "order": 184,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Blast shield slices and slides during an instant.",
          "wordCount": 8,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Blast shield slices and slides during an instant.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Blast",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "shield",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "slices",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "during",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "an",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "instant",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shield-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(shield-2, Blast-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "blast",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Blast"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "string": "dep(shield-2, slices-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "slice",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slices"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "string": "dep(shield-2, slides-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shield-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shield",
                  "ner": "O",
                  "tag": "NN",
                  "word": "shield"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(slices-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slice",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slices"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(slices-3, slides-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slice",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slices"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:during(slices-3, instant-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:during"
                },
                "dep": {
                  "index": "8",
                  "lemma": "instant",
                  "ner": "O",
                  "tag": "NN",
                  "word": "instant"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slice",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slices"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(instant-8, during-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "during",
                  "ner": "O",
                  "tag": "IN",
                  "word": "during"
                },
                "gov": {
                  "index": "8",
                  "lemma": "instant",
                  "ner": "O",
                  "tag": "NN",
                  "word": "instant"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(instant-8, an-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "ner": "O",
                  "tag": "DT",
                  "word": "an"
                },
                "gov": {
                  "index": "8",
                  "lemma": "instant",
                  "ner": "O",
                  "tag": "NN",
                  "word": "instant"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "IN": "during"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "shield"
                },
                "s_node_1_node_3_node_1_node_0_node": {
                  "DT": "an"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node": {
                  "VBZ": "slides"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "instant"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "slices"
                },
                "s_node_0_node_0_node": {
                  "JJ": "Blast"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "instant."
                ]
              }
            },
            "sentence": "Blast shield slices and slides during an instant."
          },
          "jazzyState": {
            "text": "Blast shield slices and slides during an instant.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "It cuts Gee Forty-three limbs.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "It cuts Gee Forty-three limbs.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "cuts",
                "net": "O"
              },
              {
                "pos": "RB",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, cuts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(cuts-2, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(cuts-2, limbs-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(cuts-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "cut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "cuts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Forty-three-4, Gee-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "RB",
                  "word": "Gee"
                },
                "gov": {
                  "index": "4",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "JJ",
                  "word": "Forty-three"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(limbs-5, Forty-three-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "JJ",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "5",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNP": "Forty-three"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "cuts"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "limbs."
                ]
              }
            },
            "sentence": "It cuts Gee Forty-three limbs."
          },
          "jazzyState": {
            "text": "It cuts Gee Forty-three limbs.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "It shuts.",
          "wordCount": 2,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "It shuts.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "It",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "shuts",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shuts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shuts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shuts-2, It-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "it",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "It"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shuts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shuts-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shut",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "shuts"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shuts"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "It"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shuts."
                ]
              }
            },
            "sentence": "It shuts."
          },
          "jazzyState": {
            "text": "It shuts.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Limbs puff.",
      "wordCount": 2,
      "order": 185,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Limbs puff.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Limbs puff.",
            "coreAnnotations": [
              {
                "pos": "NNS",
                "text": "Limbs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puff",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Limbs-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Limbs-1, puff-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puff"
                },
                "gov": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Limbs-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "Limbs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "puff"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNS": "Limbs"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puff."
                ]
              }
            },
            "sentence": "Limbs puff."
          },
          "jazzyState": {
            "text": "Limbs puff.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s core rolls.",
      "wordCount": 3,
      "order": 186,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s core rolls.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho\u0027s core rolls.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "string": "dep(core-3, rolls-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "rolls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rolls."
                ]
              }
            },
            "sentence": "Psycho\u0027s core rolls."
          },
          "jazzyState": {
            "text": "Psycho\u0027s core rolls.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I stand before steel door.",
      "wordCount": 5,
      "order": 187,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I stand before steel door.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand before steel door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stand-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, before-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-5, steel-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NN": "steel"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I stand before steel door."
          },
          "jazzyState": {
            "text": "I stand before steel door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s core rolls.",
      "wordCount": 3,
      "order": 188,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s core rolls.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho\u0027s core rolls.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "string": "dep(core-3, rolls-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "rolls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rolls."
                ]
              }
            },
            "sentence": "Psycho\u0027s core rolls."
          },
          "jazzyState": {
            "text": "Psycho\u0027s core rolls.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c|The core.\u003e",
      "wordCount": 2,
      "order": 189,
      "sentenceCount": 1,
      "dialog": true,
      "sentenceStates": [
        {
          "sentence": "\u003c|The core.\u003e",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The core.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(core-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "core"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "core.\u003e"
                ]
              }
            },
            "sentence": "\u003c|The core.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|The core.\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003c|The core.\u003e",
            "originOfDialogFromOrderParagraph": 1,
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gas hisses in tunnel.",
      "wordCount": 4,
      "order": 190,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gas hisses in tunnel.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Gas hisses in tunnel.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Gas",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hisses",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "tunnel",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hisses-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(hisses-2, Gas-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gas"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(hisses-2, tunnel-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hisses-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tunnel-4, in-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "in",
                  "ner": "O",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "4",
                  "lemma": "tunnel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "tunnel"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "tunnel"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Gas"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "hisses"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "tunnel."
                ]
              }
            },
            "sentence": "Gas hisses in tunnel."
          },
          "jazzyState": {
            "text": "Gas hisses in tunnel.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The steel door slides open.",
      "wordCount": 5,
      "order": 191,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The steel door slides open.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The steel door slides open.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "steel",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "slides",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, open-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(slides-4, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slides-4, steel-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "steel",
                  "ner": "O",
                  "tag": "NN",
                  "word": "steel"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(slides-4, door-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(open-5, slides-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "slide",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "slides"
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(open-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "open",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "open"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "steel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "slides"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "open."
                ]
              }
            },
            "sentence": "The steel door slides open."
          },
          "jazzyState": {
            "text": "The steel door slides open.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I inhale. I stand before white door.",
      "wordCount": 7,
      "order": 192,
      "sentenceCount": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I inhale.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I inhale.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "inhale",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, inhale-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(inhale-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(inhale-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "inhale",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "inhale"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "inhale"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "inhale."
                ]
              }
            },
            "sentence": "I inhale."
          },
          "jazzyState": {
            "text": "I inhale.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I stand before white door.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I stand before white door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stand-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stand-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:before(stand-2, door-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:before"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stand-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "stand",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "stand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-5, before-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "before",
                  "ner": "O",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-5, white-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "stand"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "JJ": "white"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I stand before white door."
          },
          "jazzyState": {
            "text": "I stand before white door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s core rolls.",
      "wordCount": 3,
      "order": 193,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s core rolls.",
          "wordCount": 3,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho\u0027s core rolls.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "string": "dep(core-3, rolls-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "rolls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "core"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "rolls."
                ]
              }
            },
            "sentence": "Psycho\u0027s core rolls."
          },
          "jazzyState": {
            "text": "Psycho\u0027s core rolls.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I reach for the green button.",
      "wordCount": 6,
      "order": 194,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I reach for the green button.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I reach for the green button.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "reach",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "button",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, reach-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(reach-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(reach-2, button-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "6",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                },
                "gov": {
                  "index": "2",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(reach-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "reach",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "reach"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(button-6, for-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "for",
                  "ner": "O",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "6",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(button-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(button-6, green-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "green",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "6",
                  "lemma": "button",
                  "ner": "O",
                  "tag": "NN",
                  "word": "button"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "button"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "green"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "reach"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "button."
                ]
              }
            },
            "sentence": "I reach for the green button."
          },
          "jazzyState": {
            "text": "I reach for the green button.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Four Gee Forty-three limbs rise from ground and wrap ankles and wrists.",
      "wordCount": 12,
      "order": 195,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Four Gee Forty-three limbs rise from ground and wrap ankles and wrists.",
          "wordCount": 12,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "Past",
            "PastParticiple",
            "Present",
            "Present",
            "PresentParticiple"
          ],
          "nlpState": {
            "sentence": "Four Gee Forty-three limbs rise from ground and wrap ankles and wrists.",
            "coreAnnotations": [
              {
                "pos": "CD",
                "text": "Four",
                "net": "NUMBER"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "O"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "rise",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "VB",
                "text": "wrap",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "ankles",
                "net": "O"
              },
              {
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "wrists",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, rise-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(Gee-2, Four-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "four",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Four"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, limbs-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-4, Forty-three-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(rise-5, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(rise-5, ground-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(rise-5, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(rise-5, wrap-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                },
                "gov": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(rise-5, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "rise",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "rise"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-7, from-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wrap-9, Gee-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wrap-9, ankles-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ankles"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wrap-9, wrists-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "wrist",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wrists"
                },
                "gov": {
                  "index": "9",
                  "lemma": "wrap",
                  "ner": "O",
                  "tag": "VB",
                  "word": "wrap"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(ankles-10, and-11)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "11",
                  "lemma": "and",
                  "ner": "O",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "10",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ankles"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(ankles-10, wrists-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "wrist",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "wrists"
                },
                "gov": {
                  "index": "10",
                  "lemma": "ankle",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "ankles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "NN": "ground"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NNS": "wrists"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "wrap"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_1_node_1_node_1_node_0_node_3_node": {
                  "NNS": "ankles"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_0_node": {
                  "VBP": "rise"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Four"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "wrists."
                ]
              }
            },
            "sentence": "Four Gee Forty-three limbs rise from ground and wrap ankles and wrists."
          },
          "jazzyState": {
            "text": "Four Gee Forty-three limbs rise from ground and wrap ankles and wrists.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I pull.",
      "wordCount": 2,
      "order": 196,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I pull.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I pull.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBP": "pull"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "pull."
                ]
              }
            },
            "sentence": "I pull."
          },
          "jazzyState": {
            "text": "I pull.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The limbs are stuck to ground. The limbs slither over floor. The limbs pull body from the path of Psycho\u0027s core to white door.",
      "wordCount": 24,
      "order": 197,
      "sentenceCount": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The limbs are stuck to ground.",
          "wordCount": 6,
          "orderParagraph": 1,
          "tense": [
            "Present",
            "PastParticiple"
          ],
          "nlpState": {
            "sentence": "The limbs are stuck to ground.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "pos": "VBN",
                "text": "stuck",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "ground",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stuck-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stuck"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limbs-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(stuck-4, limbs-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stuck"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(stuck-4, are-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stuck"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(stuck-4, ground-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stuck-4, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "stick",
                  "ner": "O",
                  "tag": "VBN",
                  "word": "stuck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ground-6, to-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "ground",
                  "ner": "O",
                  "tag": "NN",
                  "word": "ground"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "ground"
                },
                "s_node_1_node_0_node": {
                  "VBP": "are"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "stuck"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "ground."
                ]
              }
            },
            "sentence": "The limbs are stuck to ground."
          },
          "jazzyState": {
            "text": "The limbs are stuck to ground.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The limbs slither over floor.",
          "wordCount": 5,
          "orderParagraph": 2,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The limbs slither over floor.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "slither",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, slither-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "slither",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slither"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limbs-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(slither-3, limbs-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slither",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slither"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(slither-3, floor-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "5",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "3",
                  "lemma": "slither",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slither"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(slither-3, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "slither",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "slither"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-5, over-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "over",
                  "ner": "O",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "5",
                  "lemma": "floor",
                  "ner": "O",
                  "tag": "NN",
                  "word": "floor"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_0_node": {
                  "VBP": "slither"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "floor."
                ]
              }
            },
            "sentence": "The limbs slither over floor."
          },
          "jazzyState": {
            "text": "The limbs slither over floor.",
            "misspelledWords": {
              "slither": [
                "blither"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The limbs pull body from the path of Psycho\u0027s core to white door.",
          "wordCount": 13,
          "orderParagraph": 3,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The limbs pull body from the path of Psycho\u0027s core to white door.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "pull",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "path",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pull-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(limbs-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pull-3, limbs-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pull-3, body-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "ner": "O",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(pull-3, path-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "7",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(pull-3, door-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pull-3, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "pull",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "pull"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(path-7, from-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "from",
                  "ner": "O",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "7",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(path-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(path-7, core-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "11",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "7",
                  "lemma": "path",
                  "ner": "O",
                  "tag": "NN",
                  "word": "path"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-9, \u0027s-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(core-11, of-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "of",
                  "ner": "O",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "11",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-11, Psycho-9)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "11",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-14, to-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "ner": "O",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-14, white-13)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "path"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "core"
                },
                "s_node_1_node_0_node": {
                  "VBP": "pull"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "body"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "limbs"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "The limbs pull body from the path of Psycho\u0027s core to white door."
          },
          "jazzyState": {
            "text": "The limbs pull body from the path of Psycho\u0027s core to white door.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Psycho\u0027s core rolls into the white door.",
      "wordCount": 7,
      "order": 198,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Psycho\u0027s core rolls into the white door.",
          "wordCount": 7,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Psycho\u0027s core rolls into the white door.",
            "coreAnnotations": [
              {
                "pos": "NNP",
                "text": "Psycho",
                "net": "O"
              },
              {
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "core",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "rolls",
                "net": "O"
              },
              {
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, core-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Psycho-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "ner": "O",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(core-3, Psycho-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Psycho",
                  "ner": "O",
                  "tag": "NNP",
                  "word": "Psycho"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "string": "dep(core-3, rolls-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(core-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "core",
                  "ner": "O",
                  "tag": "NN",
                  "word": "core"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(rolls-4, door-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "roll",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "rolls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-8, into-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "into",
                  "ner": "O",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-8, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-8, white-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "core"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Psycho"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "white"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "rolls"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "into"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "Psycho\u0027s core rolls into the white door."
          },
          "jazzyState": {
            "text": "Psycho\u0027s core rolls into the white door.",
            "misspelledWords": {
              "Psycho\u0027s": [
                "psyche\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The Gee Forty-three limbs puff.",
      "wordCount": 5,
      "order": 199,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The Gee Forty-three limbs puff.",
          "wordCount": 5,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "The Gee Forty-three limbs puff.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "Gee",
                "net": "MISC"
              },
              {
                "pos": "CD",
                "text": "Forty-three",
                "net": "NUMBER"
              },
              {
                "pos": "NNS",
                "text": "limbs",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "puff",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Gee-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(Gee-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "string": "dep(Gee-2, limbs-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Gee-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "gee",
                  "ner": "MISC",
                  "tag": "NN",
                  "word": "Gee"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(limbs-4, Forty-three-3)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "forty-three",
                  "ner": "NUMBER",
                  "tag": "CD",
                  "word": "Forty-three"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              },
              {
                "reln": {
                  "string": "dep(limbs-4, puff-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "puff",
                  "ner": "O",
                  "tag": "NN",
                  "word": "puff"
                },
                "gov": {
                  "index": "4",
                  "lemma": "limb",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "limbs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "puff"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_3_node": {
                  "NNS": "limbs"
                },
                "s_node_0_node_2_node": {
                  "NNP": "Forty-three"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Gee"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "puff."
                ]
              }
            },
            "sentence": "The Gee Forty-three limbs puff."
          },
          "jazzyState": {
            "text": "The Gee Forty-three limbs puff.",
            "misspelledWords": {
              "Gee": [
                "see",
                "bee",
                "lee",
                "fee",
                "wee",
                "gene",
                "glee",
                "gem",
                "get",
                "gel"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Gas hisses.",
      "wordCount": 2,
      "order": 200,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Gas hisses.",
          "wordCount": 2,
          "orderParagraph": 1,
          "tense": [],
          "nlpState": {
            "sentence": "Gas hisses.",
            "coreAnnotations": [
              {
                "pos": "NN",
                "text": "Gas",
                "net": "O"
              },
              {
                "pos": "NNS",
                "text": "hisses",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hisses-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(hisses-2, Gas-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "gas",
                  "ner": "O",
                  "tag": "NN",
                  "word": "Gas"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hisses-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "hiss",
                  "ner": "O",
                  "tag": "NNS",
                  "word": "hisses"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "hisses"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Gas"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hisses."
                ]
              }
            },
            "sentence": "Gas hisses."
          },
          "jazzyState": {
            "text": "Gas hisses.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "I push white door.",
      "wordCount": 4,
      "order": 201,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "I push white door.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "I push white door.",
            "coreAnnotations": [
              {
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "pos": "VBP",
                "text": "push",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, push-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(push-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "ner": "O",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(push-2, door-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(push-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "ner": "O",
                  "tag": "VBP",
                  "word": "push"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-4, white-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "4",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "push"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "I push white door."
          },
          "jazzyState": {
            "text": "I push white door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The white door is.",
      "wordCount": 4,
      "order": 202,
      "sentenceCount": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The white door is.",
          "wordCount": 4,
          "orderParagraph": 1,
          "tense": [
            "Present"
          ],
          "nlpState": {
            "sentence": "The white door is.",
            "coreAnnotations": [
              {
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, is-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "ner": "O",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, white-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white",
                  "ner": "O",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(is-4, door-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "ner": "O",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(is-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "ner": "O",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "be",
                  "ner": "O",
                  "tag": "VBZ",
                  "word": "is"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "is"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "is."
                ]
              }
            },
            "sentence": "The white door is."
          },
          "jazzyState": {
            "text": "The white door is.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    }
  ]
}